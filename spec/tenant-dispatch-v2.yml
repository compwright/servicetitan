openapi: 3.0.1
info:
  title: Dispatch
  version: '1.0'
servers:
  - url: https://api.servicetitan.io
paths:
  '/dispatch/v2/tenant/{tenant}/gps-provider/{gps_provider}/gps-pings':
    post:
      tags:
        - Gps
      summary: Creates new gps ping.
      description: Creates new gps ping.
      operationId: Gps_Create
      parameters:
        - name: gps_provider
          in: path
          required: true
          schema:
            type: string
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Dispatch.V2.GpsPingCreateRequest'
            example:
              - unitId: string
                unitName: string
                eventTime: string
                latitude: 0
                longitude: 0
                speed: 0
                street: string
                city: string
                region: string
                postalCode: string
                message: string
                externalId: string
                isNew: true
                statusMessage: string
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dispatch.V2.GpsPingResponse'
              example:
                - externalId: string
                  status: { }
                  message: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/dispatch/v2/tenant/{tenant}/capacity':
    post:
      tags:
        - Capacity
      summary: Capacity_GetList
      operationId: Capacity_GetList
      parameters:
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dispatch.V2.CapacityQueryFilter'
            example:
              startsOnOrAfter: string
              endsOnOrBefore: string
              businessUnitIds:
                - 0
              jobTypeId: 0
              skillBasedAvailability: true
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispatch.V2.CapacityResponse'
              example:
                timeStamp: string
                availabilities:
                  - start: string
                    end: string
                    businessUnitIds:
                      - 0
                    totalAvailability: 0
                    openAvailability: 0
                    technicians:
                      - id: 0
                        name: string
                        status: { }
                    isExceedingIdealBookingPercentage: true
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/dispatch/v2/tenant/{tenant}/non-job-appointments/{id}':
    get:
      tags:
        - NonJobAppointments
      summary: NonJobAppointments_Get
      operationId: NonJobAppointments_Get
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispatch.V2.GetNonJobAppointmentResponse'
              example:
                id: 0
                technicianId: 0
                start: string
                name: string
                duration: string
                timesheetCodeId: 0
                summary: string
                clearDispatchBoard: true
                clearTechnicianView: true
                removeTechnicianFromCapacityPlanning: true
                allDay: true
                active: true
                createdOn: string
                createdById: 0
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
    put:
      tags:
        - NonJobAppointments
      summary: Update an existed non-job appointment
      description: Update an existed non-job appointment
      operationId: NonJobAppointments_Update
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dispatch.V2.NonJobAppointmentUpdateRequest'
            example:
              technicianId: 0
              start: string
              duration: string
              name: string
              timesheetCodeId: 0
              summary: string
              clearDispatchBoard: true
              clearTechnicianView: true
              removeTechnicianFromCapacityPlanning: true
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispatch.V2.GetNonJobAppointmentResponse'
              example:
                id: 0
                technicianId: 0
                start: string
                name: string
                duration: string
                timesheetCodeId: 0
                summary: string
                clearDispatchBoard: true
                clearTechnicianView: true
                removeTechnicianFromCapacityPlanning: true
                allDay: true
                active: true
                createdOn: string
                createdById: 0
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '409':
          description: Some conflict occurred while executing the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/dispatch/v2/tenant/{tenant}/non-job-appointments':
    get:
      tags:
        - NonJobAppointments
      summary: Gets a list of non-job appointments
      description: Gets a list of non-job appointments
      operationId: NonJobAppointments_GetList
      parameters:
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
        - name: technicianId
          in: query
          description: Format - int64. Unique id of the technician this non-job appointment applies to
          schema:
            type: integer
            format: int64
            nullable: true
        - name: startsOnOrAfter
          in: query
          description: Format - date-time (as date-time in RFC3339). When the Start of non-job appointment should be at or after
          schema:
            type: string
            format: date-time
            nullable: true
        - name: startsOnOrBefore
          in: query
          description: Format - date-time (as date-time in RFC3339). When the Start of non-job appointment should be at or before
          schema:
            type: string
            format: date-time
            nullable: true
        - name: timesheetCodeId
          in: query
          description: Format - int64. Unique Id of timesheet code must apply to
          schema:
            type: integer
            format: int64
            nullable: true
        - name: activeOnly
          in: query
          description: Whether the result should contains only active non-job appointments
          schema:
            type: boolean
            nullable: true
        - name: createdOnOrAfter
          in: query
          description: Format - date-time (as date-time in RFC3339). Return items created on or after certain date/time (in UTC)
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdBefore
          in: query
          description: Format - date-time (as date-time in RFC3339). Return items created before certain date/time (in UTC)
          schema:
            type: string
            format: date-time
            nullable: true
        - name: ids
          in: query
          description: Perform lookup by multiple IDs (maximum 50)
          schema:
            type: string
        - name: page
          in: query
          description: 'Format - int32. The logical number of page to return, starting from 1'
          schema:
            type: integer
            format: int32
            nullable: true
        - name: pageSize
          in: query
          description: Format - int32. How many records to return (50 by default)
          schema:
            type: integer
            format: int32
            nullable: true
        - name: includeTotal
          in: query
          description: Whether total count should be returned
          schema:
            type: boolean
            nullable: true
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_Of_Dispatch.V2.NonJobAppointmentResponse'
              example:
                page: 0
                pageSize: 0
                hasMore: true
                totalCount: 0
                data:
                  - id: 0
                    technicianId: 0
                    start: string
                    name: string
                    duration: string
                    timesheetCodeId: 0
                    summary: string
                    clearDispatchBoard: true
                    clearTechnicianView: true
                    removeTechnicianFromCapacityPlanning: true
                    allDay: true
                    active: true
                    createdOn: string
                    createdById: 0
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
    post:
      tags:
        - NonJobAppointments
      summary: Create a new non-job appointment
      description: Create a new non-job appointment
      operationId: NonJobAppointments_Create
      parameters:
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dispatch.V2.NonJobAppointmentCreateRequest'
            example:
              technicianId: 0
              start: string
              duration: string
              name: string
              timesheetCodeId: 0
              summary: string
              clearDispatchBoard: true
              clearTechnicianView: true
              removeTechnicianFromCapacityPlanning: true
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispatch.V2.GetNonJobAppointmentResponse'
              example:
                id: 0
                technicianId: 0
                start: string
                name: string
                duration: string
                timesheetCodeId: 0
                summary: string
                clearDispatchBoard: true
                clearTechnicianView: true
                removeTechnicianFromCapacityPlanning: true
                allDay: true
                active: true
                createdOn: string
                createdById: 0
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/dispatch/v2/tenant/{tenant}/technician-shifts':
    get:
      tags:
        - TechnicianShifts
      summary: Gets a list of technician shifts
      description: Gets a list of technician shifts
      operationId: TechnicianShifts_GetList
      parameters:
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
        - name: startsOnOrAfter
          in: query
          description: Format - date-time (as date-time in RFC3339). When the Start of shift should be at or after
          schema:
            type: string
            format: date-time
            nullable: true
        - name: endsOnOrBefore
          in: query
          description: Format - date-time (as date-time in RFC3339). When the End of shift should be at or before
          schema:
            type: string
            format: date-time
            nullable: true
        - name: shiftType
          in: query
          description: "Value to match ShiftType to\\\nValues: [Normal, OnCall, TimeOff]"
          schema:
            type: string
            oneOf:
              - $ref: '#/components/schemas/Dispatch.V2.ShiftType'
            nullable: true
        - name: technicianId
          in: query
          description: Format - int64. Unique Id of technician shift must apply to
          schema:
            type: integer
            format: int64
            nullable: true
        - name: titleContains
          in: query
          description: Text that must appear in the Title
          schema:
            type: string
        - name: noteContains
          in: query
          description: Text that must appear in the Note
          schema:
            type: string
        - name: page
          in: query
          description: 'Format - int32. The logical number of page to return, starting from 1'
          schema:
            type: integer
            format: int32
            nullable: true
        - name: pageSize
          in: query
          description: Format - int32. How many records to return (50 by default)
          schema:
            type: integer
            format: int32
            nullable: true
        - name: includeTotal
          in: query
          description: Whether total count should be returned
          schema:
            type: boolean
            nullable: true
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_Of_Dispatch.V2.TechnicianShiftResponse'
              example:
                page: 0
                pageSize: 0
                hasMore: true
                totalCount: 0
                data:
                  - id: 0
                    shiftType: { }
                    title: string
                    note: string
                    active: true
                    technicianId: 0
                    start: string
                    end: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/dispatch/v2/tenant/{tenant}/technician-shifts/{id}':
    get:
      tags:
        - TechnicianShifts
      summary: Gets a specific technician shift
      description: Gets a specific technician shift
      operationId: TechnicianShifts_Get
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispatch.V2.TechnicianShiftResponse'
              example:
                id: 0
                shiftType: { }
                title: string
                note: string
                active: true
                technicianId: 0
                start: string
                end: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '404':
          description: The requested entity was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/dispatch/v2/tenant/{tenant}/zones':
    get:
      tags:
        - Zone
      summary: Gets a list of zones
      description: Gets a list of zones
      operationId: Zone_GetList
      parameters:
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
        - name: page
          in: query
          description: 'Format - int32. The logical number of page to return, starting from 1'
          schema:
            type: integer
            format: int32
            nullable: true
        - name: pageSize
          in: query
          description: Format - int32. How many records to return (50 by default)
          schema:
            type: integer
            format: int32
            nullable: true
        - name: includeTotal
          in: query
          description: Whether total count should be returned
          schema:
            type: boolean
            nullable: true
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_Of_Dispatch.V2.ZoneResponse'
              example:
                page: 0
                pageSize: 0
                hasMore: true
                totalCount: 0
                data:
                  - id: 0
                    active: true
                    name: string
                    zips:
                      - string
                    cities:
                      - string
                    territoryNumbers:
                      - string
                    locnNumbers:
                      - string
                    createdBy: 0
                    createdOn: string
                    modifiedOn: string
                    serviceDaysEnabled: true
                    serviceDays:
                      - string
                    businessUnits:
                      - 0
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/dispatch/v2/tenant/{tenant}/zones/{id}':
    get:
      tags:
        - Zone
      summary: Gets a specific zone
      description: Gets a specific zone
      operationId: Zone_Get
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispatch.V2.ZoneResponse'
              example:
                id: 0
                active: true
                name: string
                zips:
                  - string
                cities:
                  - string
                territoryNumbers:
                  - string
                locnNumbers:
                  - string
                createdBy: 0
                createdOn: string
                modifiedOn: string
                serviceDaysEnabled: true
                serviceDays:
                  - string
                businessUnits:
                  - 0
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '404':
          description: The requested entity was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/dispatch/v2/tenant/{tenant}/appointment-assignments':
    get:
      tags:
        - AppointmentAssignments
      summary: Gets a list of appointment assignments
      description: Gets a list of appointment assignments
      operationId: AppointmentAssignments_GetList
      parameters:
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
        - name: page
          in: query
          description: 'Format - int32. The logical number of page to return, starting from 1'
          schema:
            type: integer
            format: int32
            nullable: true
        - name: pageSize
          in: query
          description: Format - int32. How many records to return (50 by default)
          schema:
            type: integer
            format: int32
            nullable: true
        - name: includeTotal
          in: query
          description: Whether total count should be returned
          schema:
            type: boolean
            nullable: true
        - name: ids
          in: query
          description: Perform lookup by multiple IDs (maximum 50)
          schema:
            type: string
        - name: appointmentIds
          in: query
          description: Return appointment assignments for one or more appointments
          schema:
            type: string
        - name: jobId
          in: query
          description: Format - int64. Return appointment assignments for a single job
          schema:
            type: integer
            format: int64
            nullable: true
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_Of_Crm.V2.AppointmentAssignmentResponse'
              example:
                page: 0
                pageSize: 0
                hasMore: true
                totalCount: 0
                data:
                  - id: 0
                    technicianId: 0
                    technicianName: string
                    assignedById: 0
                    assignedOn: string
                    status: { }
                    isPaused: true
                    jobId: 0
                    appointmentId: 0
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/dispatch/v2/tenant/{tenant}/appointment-assignments/assign-technicians':
    post:
      tags:
        - AppointmentAssignments
      summary: Assigns the list of technicians to the appointment
      description: Assigns the list of technicians to the appointment
      operationId: AppointmentAssignments_AssignTechnicians
      parameters:
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Crm.V2.AssignTechniciansRequest'
            example:
              jobAppointmentId: 0
              technicianIds:
                - 0
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crm.V2.AppointmentResponse'
              example:
                id: 0
                jobId: 0
                appointmentNumber: string
                start: string
                end: string
                arrivalWindowStart: string
                arrivalWindowEnd: string
                status: { }
                specialInstructions: string
                createdOn: string
                modifiedOn: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '409':
          description: Some conflict occurred while executing the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/dispatch/v2/tenant/{tenant}/appointment-assignments/unassign-technicians':
    post:
      tags:
        - AppointmentAssignments
      summary: Unassigns the list of technicians from the appointment
      description: Unassigns the list of technicians from the appointment
      operationId: AppointmentAssignments_UnassignTechnicians
      parameters:
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Crm.V2.UnassignTechniciansRequest'
            example:
              jobAppointmentId: 0
              technicianIds:
                - 0
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crm.V2.AppointmentResponse'
              example:
                id: 0
                jobId: 0
                appointmentNumber: string
                start: string
                end: string
                arrivalWindowStart: string
                arrivalWindowEnd: string
                status: { }
                specialInstructions: string
                createdOn: string
                modifiedOn: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
components:
  schemas:
    Dispatch.V2.GpsPingResponse:
      required:
        - externalId
        - status
        - message
      type: object
      properties:
        externalId:
          type: string
          description: Unique External ID for data point
        status:
          oneOf:
            - $ref: '#/components/schemas/Dispatch.V2.GpsPingResultStatus'
          description: Request status
        message:
          type: string
          description: Gets or sets the response message received from the GPS provider about the unit at the time of recording
      additionalProperties: false
    Dispatch.V2.GpsPingResultStatus:
      enum:
        - Fail
        - Success
      type: string
      description: ''
      x-enumNames:
        - Fail
        - Success
    ApiErrorResponse:
      required:
        - type
        - title
        - status
        - traceId
        - errors
        - data
      type: object
      properties:
        type:
          type: string
          description: A URI reference that identifies the problem type
        title:
          type: string
          description: 'A short, human-readable summary of the problem type'
        status:
          type: integer
          description: The HTTP status code generated by server
          format: int32
        traceId:
          type: string
          description: Internal trace ID for advanced diagnostics
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: 'Provides more details about errors occurred, which can potentially be used for visual display'
        data:
          type: object
          additionalProperties: { }
          description: 'Provides additional data, intended for programmatical usage'
      additionalProperties: false
      description: 'Detailed error response, following RFC 7807 recommendations (https://tools.ietf.org/html/rfc7807).'
    Dispatch.V2.GpsPingCreateRequest:
      required:
        - unitId
        - unitName
        - eventTime
        - street
        - city
        - region
        - postalCode
        - message
        - externalId
        - isNew
        - statusMessage
      type: object
      properties:
        unitId:
          type: string
          description: Gets or sets the ID of the object for which location information is provided
        unitName:
          type: string
          description: Gets or sets the name of the object for which location information is provided
        eventTime:
          type: string
          description: Gets or sets the time of the recording
          format: date-time
        latitude:
          type: number
          description: Gets or sets the latitude coordinate of the unit's location at the time of recording
          format: double
          nullable: true
        longitude:
          type: number
          description: Gets or sets the longitude coordinate of the unit's location at the time of recording
          format: double
          nullable: true
        speed:
          type: number
          description: Gets or sets the speed of the vehicle at the time of recording
          format: double
          nullable: true
        street:
          type: string
          description: Gets the location's street address
        city:
          type: string
          description: Gets the location's city
        region:
          type: string
          description: Gets the location's region
        postalCode:
          type: string
          description: Gets the location's postal code
        message:
          type: string
          description: Gets or sets the response message received from the GPS provider about the unit at the time of recording
        externalId:
          type: string
          description: Unique External ID for data point
        isNew:
          type: boolean
          description: Indicate if gps ping unit is a new one
        statusMessage:
          type: string
          description: Gets the status message
      additionalProperties: false
    Dispatch.V2.CapacityResponse:
      required:
        - timeStamp
        - availabilities
      type: object
      properties:
        timeStamp:
          type: string
          description: When the request was processed
          format: date-time
        availabilities:
          type: array
          items:
            $ref: '#/components/schemas/Dispatch.V2.CapacityResponseAvailability'
          description: Availability calculations by time frame
      additionalProperties: false
    Dispatch.V2.CapacityResponseAvailability:
      required:
        - start
        - end
        - businessUnitIds
        - totalAvailability
        - openAvailability
        - technicians
        - isExceedingIdealBookingPercentage
      type: object
      properties:
        start:
          type: string
          description: When the availability time frame starts
          format: date-time
        end:
          type: string
          description: When the availability time frame ends
          format: date-time
        businessUnitIds:
          type: array
          items:
            type: integer
            format: int64
          description: Business units that the availability applies to
        totalAvailability:
          type: number
          description: Number of jobs that total capacity can allow to be booked during this time frame
          format: double
        openAvailability:
          type: number
          description: Number of remaining jobs that can be booked during this time frame
          format: double
        technicians:
          type: array
          items:
            $ref: '#/components/schemas/Dispatch.V2.CapacityResponseTechnician'
          description: Technician details for this availability time frame
        isExceedingIdealBookingPercentage:
          type: boolean
          description: Indicate if Ideal Booking Percentage is exceeded
      additionalProperties: false
    Dispatch.V2.CapacityResponseTechnician:
      required:
        - id
        - name
        - status
      type: object
      properties:
        id:
          type: integer
          description: Unique Id of technician
          format: int64
        name:
          type: string
          description: Name of technician
        status:
          oneOf:
            - $ref: '#/components/schemas/Dispatch.V2.CapacityResponseTechnicianStatus'
          description: Whether the technician is available to work during the associated time frame
      additionalProperties: false
    Dispatch.V2.CapacityResponseTechnicianStatus:
      enum:
        - Available
        - Unavailable
      type: string
      description: ''
      x-enumNames:
        - Available
        - Unavailable
    Dispatch.V2.CapacityQueryFilter:
      required:
        - startsOnOrAfter
        - endsOnOrBefore
        - skillBasedAvailability
      type: object
      properties:
        startsOnOrAfter:
          type: string
          description: When the time frame should start at or after
          format: date-time
        endsOnOrBefore:
          type: string
          description: When the time frame should end at or before
          format: date-time
        businessUnitIds:
          type: array
          items:
            type: integer
            format: int64
          description: Business units to calculate availability for
          nullable: true
        jobTypeId:
          type: integer
          description: Job type whose duration should be used to calculate availability
          format: int64
          nullable: true
        skillBasedAvailability:
          type: boolean
          description: Indicate whether to use skill-based availability matching
      additionalProperties: false
    Dispatch.V2.GetNonJobAppointmentResponse:
      required:
        - id
        - technicianId
        - start
        - name
        - duration
        - timesheetCodeId
        - summary
        - clearDispatchBoard
        - clearTechnicianView
        - removeTechnicianFromCapacityPlanning
        - allDay
        - active
        - createdOn
        - createdById
      type: object
      properties:
        id:
          type: integer
          format: int64
        technicianId:
          type: integer
          format: int64
        start:
          type: string
          format: date-time
        name:
          type: string
        duration:
          type: string
          format: time-span
        timesheetCodeId:
          type: integer
          format: int64
        summary:
          type: string
        clearDispatchBoard:
          type: boolean
        clearTechnicianView:
          type: boolean
        removeTechnicianFromCapacityPlanning:
          type: boolean
        allDay:
          type: boolean
        active:
          type: boolean
        createdOn:
          type: string
          format: date-time
        createdById:
          type: integer
          format: int64
      additionalProperties: false
    PaginatedResponse_Of_Dispatch.V2.NonJobAppointmentResponse:
      required:
        - page
        - pageSize
        - hasMore
        - data
      type: object
      properties:
        page:
          type: integer
          description: From which page this output has started
          format: int32
        pageSize:
          type: integer
          description: Page size for this query (i.e. how many records were requested to return)
          format: int32
        hasMore:
          type: boolean
          description: True if there are more records in the query than returned in this result
        totalCount:
          type: integer
          description: Total count of records for this query (can optionally be populated)
          format: int32
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Dispatch.V2.NonJobAppointmentResponse'
          description: 'The collection of result items, will never have more than PageSize items'
      additionalProperties: false
      description: Represents paginated API response.
    Dispatch.V2.NonJobAppointmentResponse:
      required:
        - id
        - technicianId
        - start
        - name
        - duration
        - timesheetCodeId
        - summary
        - clearDispatchBoard
        - clearTechnicianView
        - removeTechnicianFromCapacityPlanning
        - allDay
        - active
        - createdOn
        - createdById
      type: object
      properties:
        id:
          type: integer
          format: int64
        technicianId:
          type: integer
          format: int64
        start:
          type: string
          format: date-time
        name:
          type: string
        duration:
          type: string
          format: time-span
        timesheetCodeId:
          type: integer
          format: int64
        summary:
          type: string
        clearDispatchBoard:
          type: boolean
        clearTechnicianView:
          type: boolean
        removeTechnicianFromCapacityPlanning:
          type: boolean
        allDay:
          type: boolean
        active:
          type: boolean
        createdOn:
          type: string
          format: date-time
        createdById:
          type: integer
          format: int64
      additionalProperties: false
    Dispatch.V2.NonJobAppointmentCreateRequest:
      required:
        - technicianId
        - start
        - duration
        - name
        - timesheetCodeId
      type: object
      properties:
        technicianId:
          type: integer
          format: int64
        start:
          type: string
          format: date-time
        duration:
          type: string
          format: time-span
        name:
          type: string
        timesheetCodeId:
          type: integer
          format: int64
        summary:
          type: string
          nullable: true
        clearDispatchBoard:
          type: boolean
          nullable: true
        clearTechnicianView:
          type: boolean
          nullable: true
        removeTechnicianFromCapacityPlanning:
          type: boolean
          nullable: true
      additionalProperties: false
    Dispatch.V2.NonJobAppointmentUpdateRequest:
      required:
        - technicianId
        - start
        - duration
        - name
        - timesheetCodeId
      type: object
      properties:
        technicianId:
          type: integer
          format: int64
        start:
          type: string
          format: date-time
        duration:
          type: string
          format: time-span
        name:
          type: string
        timesheetCodeId:
          type: integer
          format: int64
        summary:
          type: string
          nullable: true
        clearDispatchBoard:
          type: boolean
          nullable: true
        clearTechnicianView:
          type: boolean
          nullable: true
        removeTechnicianFromCapacityPlanning:
          type: boolean
          nullable: true
      additionalProperties: false
    PaginatedResponse_Of_Dispatch.V2.TechnicianShiftResponse:
      required:
        - page
        - pageSize
        - hasMore
        - data
      type: object
      properties:
        page:
          type: integer
          description: From which page this output has started
          format: int32
        pageSize:
          type: integer
          description: Page size for this query (i.e. how many records were requested to return)
          format: int32
        hasMore:
          type: boolean
          description: True if there are more records in the query than returned in this result
        totalCount:
          type: integer
          description: Total count of records for this query (can optionally be populated)
          format: int32
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Dispatch.V2.TechnicianShiftResponse'
          description: 'The collection of result items, will never have more than PageSize items'
      additionalProperties: false
      description: Represents paginated API response.
    Dispatch.V2.TechnicianShiftResponse:
      required:
        - id
        - shiftType
        - title
        - active
        - technicianId
        - start
        - end
      type: object
      properties:
        id:
          type: integer
          description: Unique id of the shift record
          format: int64
        shiftType:
          oneOf:
            - $ref: '#/components/schemas/Dispatch.V2.ShiftType'
          description: How the shift is displayed and contributes to availability calculations
        title:
          type: string
          description: Descriptive identifier
        note:
          type: string
          description: Optional detailed explanation of the shift
          nullable: true
        active:
          type: boolean
          description: Whether the shift is enabled
        technicianId:
          type: integer
          description: '&gt;Unique id of the technician this shift applies to'
          format: int64
        start:
          type: string
          description: When the shift begins
          format: date-time
        end:
          type: string
          description: When the shift ends
          format: date-time
      additionalProperties: false
    Dispatch.V2.ShiftType:
      enum:
        - Normal
        - OnCall
        - TimeOff
      type: string
      description: ''
      x-enumNames:
        - Normal
        - OnCall
        - TimeOff
    PaginatedResponse_Of_Dispatch.V2.ZoneResponse:
      required:
        - page
        - pageSize
        - hasMore
        - data
      type: object
      properties:
        page:
          type: integer
          description: From which page this output has started
          format: int32
        pageSize:
          type: integer
          description: Page size for this query (i.e. how many records were requested to return)
          format: int32
        hasMore:
          type: boolean
          description: True if there are more records in the query than returned in this result
        totalCount:
          type: integer
          description: Total count of records for this query (can optionally be populated)
          format: int32
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Dispatch.V2.ZoneResponse'
          description: 'The collection of result items, will never have more than PageSize items'
      additionalProperties: false
      description: Represents paginated API response.
    Dispatch.V2.ZoneResponse:
      required:
        - id
        - active
        - createdBy
        - createdOn
        - modifiedOn
        - serviceDaysEnabled
      type: object
      properties:
        id:
          type: integer
          description: Unique id of the zone record
          format: int64
        active:
          type: boolean
          description: Whether the zone is enabled
        name:
          type: string
          description: Descriptive identifier
          nullable: true
        zips:
          type: array
          items:
            type: string
          description: A list of assigned zip codes to the zone
          nullable: true
        cities:
          type: array
          items:
            type: string
          description: A list of assigned cities to the zone
          nullable: true
        territoryNumbers:
          type: array
          items:
            type: string
          description: A list of assigned territory numbers to the zone
          nullable: true
        locnNumbers:
          type: array
          items:
            type: string
          description: A list of assigned LOCN numbers to the zone
          nullable: true
        createdBy:
          type: integer
          description: User ID who created the zone
          format: int64
        createdOn:
          type: string
          description: Date/time (in UTC) the zone was created
          format: date-time
        modifiedOn:
          type: string
          description: Date/time (in UTC) the zone was last modified
          format: date-time
        serviceDaysEnabled:
          type: boolean
          description: Whether the service days option is enabled
        serviceDays:
          type: array
          items:
            type: string
          description: A list of assigned service days
          nullable: true
        businessUnits:
          type: array
          items:
            type: integer
            format: int64
          description: A list of assigned business units
          nullable: true
      additionalProperties: false
    PaginatedResponse_Of_Crm.V2.AppointmentAssignmentResponse:
      required:
        - page
        - pageSize
        - hasMore
        - data
      type: object
      properties:
        page:
          type: integer
          description: From which page this output has started
          format: int32
        pageSize:
          type: integer
          description: Page size for this query (i.e. how many records were requested to return)
          format: int32
        hasMore:
          type: boolean
          description: True if there are more records in the query than returned in this result
        totalCount:
          type: integer
          description: Total count of records for this query (can optionally be populated)
          format: int32
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Crm.V2.AppointmentAssignmentResponse'
          description: 'The collection of result items, will never have more than PageSize items'
      additionalProperties: false
      description: Represents paginated API response.
    Crm.V2.AppointmentAssignmentResponse:
      required:
        - id
        - technicianId
        - technicianName
        - assignedById
        - assignedOn
        - status
        - isPaused
        - jobId
        - appointmentId
      type: object
      properties:
        id:
          type: integer
          description: ID of the appointment assignment
          format: int64
        technicianId:
          type: integer
          description: ID of the technician
          format: int64
        technicianName:
          type: string
          description: Name of the technician
        assignedById:
          type: integer
          description: ID of the user who assigned the appointment assignment
          format: int64
        assignedOn:
          type: string
          description: Date/time (in UTC) when the appointment assignment was assigned
          format: date-time
        status:
          oneOf:
            - $ref: '#/components/schemas/Dispatch.JobAppointmentAssignmentStatus'
          description: Status of the appointment assignment
        isPaused:
          type: boolean
          description: Whether appointment assignment is paused
        jobId:
          type: integer
          description: ID of the job
          format: int64
        appointmentId:
          type: integer
          description: ID of the appointment
          format: int64
      additionalProperties: false
    Dispatch.JobAppointmentAssignmentStatus:
      enum:
        - Scheduled
        - Dispatched
        - Working
        - Done
      type: string
      description: ''
      x-enumNames:
        - Scheduled
        - Dispatched
        - Working
        - Done
    Crm.V2.AppointmentResponse:
      required:
        - id
        - jobId
        - start
        - end
        - status
        - createdOn
        - modifiedOn
      type: object
      properties:
        id:
          type: integer
          description: Appointment ID
          format: int64
        jobId:
          type: integer
          description: ID of the job that the appointment was created for
          format: int64
        appointmentNumber:
          type: string
          description: Appointment number
          nullable: true
        start:
          type: string
          description: Appointment's start date/time (in UTC)
          format: date-time
        end:
          type: string
          description: Appointment's end date/time (in UTC)
          format: date-time
        arrivalWindowStart:
          type: string
          description: 'Arrival window start date/time (in UTC), if configured'
          format: date-time
          nullable: true
        arrivalWindowEnd:
          type: string
          description: 'Arrival window end date/time (in UTC), if configured'
          format: date-time
          nullable: true
        status:
          oneOf:
            - $ref: '#/components/schemas/Crm.V2.AppointmentStatus'
          description: Appointment's status
        specialInstructions:
          type: string
          description: Special instructions associated to the appointment
          nullable: true
        createdOn:
          type: string
          description: When the appointment was created (in UTC)
          format: date-time
        modifiedOn:
          type: string
          description: When the appointment was modified (in UTC)
          format: date-time
      additionalProperties: false
      description: Appointment response model
    Crm.V2.AppointmentStatus:
      enum:
        - Scheduled
        - Dispatched
        - Working
        - Hold
        - Done
        - Canceled
      type: string
      description: Indicates the status of a AppointmentResponse.
      x-enumNames:
        - Scheduled
        - Dispatched
        - Working
        - Hold
        - Done
        - Canceled
    Crm.V2.AssignTechniciansRequest:
      required:
        - jobAppointmentId
        - technicianIds
      type: object
      properties:
        jobAppointmentId:
          type: integer
          description: Id of the appointment to assign to.
          format: int64
        technicianIds:
          type: array
          items:
            type: integer
            format: int64
          description: Assign these technicians to the appointment.
      additionalProperties: false
    Crm.V2.UnassignTechniciansRequest:
      required:
        - jobAppointmentId
        - technicianIds
      type: object
      properties:
        jobAppointmentId:
          type: integer
          description: Id of the appointment to unassign from.
          format: int64
        technicianIds:
          type: array
          items:
            type: integer
            format: int64
          description: Unassign these technicians from the appointment.
      additionalProperties: false
  securitySchemes:
    appKey:
      type: apiKey
      name: ST-App-Key
      in: header
    bearerToken:
      type: http
      scheme: bearer
security:
  - appKey: [ ]
  - bearerToken: [ ]