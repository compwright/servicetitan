openapi: 3.0.1
info:
  title: Job Planning and Management
  version: '1.0'
servers:
  - url: https://api-integration.servicetitan.io
paths:
  '/jpm/v2/tenant/{tenant}/appointments/{id}':
    get:
      tags:
        - Appointments
      summary: Gets appointment specified by ID
      description: Gets appointment specified by ID
      operationId: Appointments_Get
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crm.V2.AppointmentResponse'
              example:
                id: 0
                jobId: 0
                appointmentNumber: string
                start: string
                end: string
                arrivalWindowStart: string
                arrivalWindowEnd: string
                status: { }
                specialInstructions: string
                createdOn: string
                modifiedOn: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '404':
          description: Appointment was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
    delete:
      tags:
        - Appointments
      summary: Deletes appointment with specified id.
      description: Deletes appointment with specified id.
      operationId: Appointments_Delete
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The request has succeeded
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '404':
          description: Appointment was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '409':
          description: Appointment is in the state that doesn't allow deletion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/jpm/v2/tenant/{tenant}/appointments':
    get:
      tags:
        - Appointments
      summary: Gets a list of appointments
      description: Gets a list of appointments
      operationId: Appointments_GetList
      parameters:
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
        - name: ids
          in: query
          description: Perform lookup by multiple IDs (maximum 50)
          schema:
            type: string
        - name: jobId
          in: query
          description: Format - int64. Return all appointments for this job
          schema:
            type: integer
            format: int64
            nullable: true
        - name: projectId
          in: query
          description: Format - int64. Return all appointments for jobs that are part of this project
          schema:
            type: integer
            format: int64
            nullable: true
        - name: number
          in: query
          description: Return all appointments with this appointment number
          schema:
            type: string
        - name: status
          in: query
          description: "Return items with specified status AppointmentStatus\\\nValues: [Scheduled, Dispatched, Working, Hold, Done, Canceled]"
          schema:
            type: string
            oneOf:
              - $ref: '#/components/schemas/Crm.V2.AppointmentStatus'
            nullable: true
        - name: startsOnOrAfter
          in: query
          description: Format - date-time (as date-time in RFC3339). Return appointments that start on or after the specified date/time (in UTC)
          schema:
            type: string
            format: date-time
            nullable: true
        - name: startsBefore
          in: query
          description: Format - date-time (as date-time in RFC3339). Return appointments that start before the specified date/time (in UTC)
          schema:
            type: string
            format: date-time
            nullable: true
        - name: technicianId
          in: query
          description: Format - int64. Return appointments this technician is assigned to
          schema:
            type: integer
            format: int64
            nullable: true
        - name: modifiedBefore
          in: query
          description: Format - date-time (as date-time in RFC3339). Return appointments modified before a certain date/time (in UTC)
          schema:
            type: string
            format: date-time
            nullable: true
        - name: modifiedOnOrAfter
          in: query
          description: Format - date-time (as date-time in RFC3339). Return appointments modified on or after a certain date/time (in UTC)
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdOnOrAfter
          in: query
          description: Format - date-time (as date-time in RFC3339). Return appointments created on or after a certain date/time (in UTC)
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdBefore
          in: query
          description: Format - date-time (as date-time in RFC3339). Return appointments created before a certain date/time (in UTC)
          schema:
            type: string
            format: date-time
            nullable: true
        - name: page
          in: query
          description: 'Format - int32. The logical number of page to return, starting from 1'
          schema:
            type: integer
            format: int32
            nullable: true
        - name: pageSize
          in: query
          description: Format - int32. How many records to return (50 by default)
          schema:
            type: integer
            format: int32
            nullable: true
        - name: includeTotal
          in: query
          description: Whether total count should be returned
          schema:
            type: boolean
            nullable: true
        - name: sort
          in: query
          description: "Applies sorting by the specified field:\\\n\"?sort=+FieldName\" for ascending order,\\\n\"?sort=-FieldName\" for descending order.\\\n\\\nAvailable fields are: Id, ModifiedOn, CreatedOn."
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_Of_Crm.V2.AppointmentResponse'
              example:
                page: 0
                pageSize: 0
                hasMore: true
                totalCount: 0
                data:
                  - id: 0
                    jobId: 0
                    appointmentNumber: string
                    start: string
                    end: string
                    arrivalWindowStart: string
                    arrivalWindowEnd: string
                    status: { }
                    specialInstructions: string
                    createdOn: string
                    modifiedOn: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
    post:
      tags:
        - Appointments
      summary: Adds a new appointment to an existing job
      description: Adds a new appointment to an existing job
      operationId: Appointments_Add
      parameters:
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Crm.V2.AppointmentAddRequest'
            example:
              jobId: 0
              start: string
              end: string
              arrivalWindowStart: string
              arrivalWindowEnd: string
              technicianIds:
                - 0
              specialInstructions: string
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crm.V2.AppointmentResponse'
              example:
                id: 0
                jobId: 0
                appointmentNumber: string
                start: string
                end: string
                arrivalWindowStart: string
                arrivalWindowEnd: string
                status: { }
                specialInstructions: string
                createdOn: string
                modifiedOn: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '409':
          description: Some conflict occurred while executing the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/jpm/v2/tenant/{tenant}/appointments/{id}/reschedule':
    patch:
      tags:
        - Appointments
      summary: Reschedule job appointment
      description: Reschedule job appointment
      operationId: Appointments_Reschedule
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Crm.V2.AppointmentRescheduleRequest'
            example:
              start: string
              end: string
              arrivalWindowStart: string
              arrivalWindowEnd: string
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crm.V2.AppointmentResponse'
              example:
                id: 0
                jobId: 0
                appointmentNumber: string
                start: string
                end: string
                arrivalWindowStart: string
                arrivalWindowEnd: string
                status: { }
                specialInstructions: string
                createdOn: string
                modifiedOn: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '404':
          description: Job appointment was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '409':
          description: Some conflict occurred while executing the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/jpm/v2/tenant/{tenant}/appointments/{id}/hold':
    put:
      tags:
        - Appointments
      summary: Puts the appointment on hold
      description: Puts the appointment on hold
      operationId: Appointments_Hold
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Crm.V2.HoldAppointmentRequest'
            example:
              reasonId: 0
              memo: string
      responses:
        '200':
          description: The request has succeeded
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '404':
          description: The requested entity was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '409':
          description: Some conflict occurred while executing the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
    delete:
      tags:
        - Appointments
      summary: Removes hold from the appointment
      description: Removes hold from the appointment
      operationId: Appointments_RemoveHold
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The request has succeeded
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '404':
          description: Appointment was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '409':
          description: Appointment is not on hold
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/jpm/v2/tenant/{tenant}/appointments/{id}/special-instructions':
    put:
      tags:
        - Appointments
      summary: Appointments_UpdateSpecialInstructions
      operationId: Appointments_UpdateSpecialInstructions
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Crm.V2.UpdateAppointmentSpecialInstructionsRequest'
            example:
              specialInstructions: string
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crm.V2.AppointmentResponse'
              example:
                id: 0
                jobId: 0
                appointmentNumber: string
                start: string
                end: string
                arrivalWindowStart: string
                arrivalWindowEnd: string
                status: { }
                specialInstructions: string
                createdOn: string
                modifiedOn: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '404':
          description: The requested entity was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '409':
          description: Some conflict occurred while executing the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/jpm/v2/tenant/{tenant}/job-cancel-reasons':
    get:
      tags:
        - JobCancelReasons
      summary: Gets a list of job cancel reasons
      description: Gets a list of job cancel reasons
      operationId: JobCancelReasons_GetList
      parameters:
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
        - name: page
          in: query
          description: 'Format - int32. The logical number of page to return, starting from 1'
          schema:
            type: integer
            format: int32
            nullable: true
        - name: pageSize
          in: query
          description: Format - int32. How many records to return (50 by default)
          schema:
            type: integer
            format: int32
            nullable: true
        - name: includeTotal
          in: query
          description: Whether total count should be returned
          schema:
            type: boolean
            nullable: true
        - name: active
          in: query
          description: "What kind of items should be returned (active and inactive items will be returned by default)\\\nValues: [True, Any, False]"
          schema:
            type: string
            oneOf:
              - $ref: '#/components/schemas/ActiveQueryFilter'
            nullable: true
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_Of_Crm.V2.JobCancelReasonResponse'
              example:
                page: 0
                pageSize: 0
                hasMore: true
                totalCount: 0
                data:
                  - id: 0
                    name: string
                    active: true
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/jpm/v2/tenant/{tenant}/job-hold-reasons':
    get:
      tags:
        - JobHoldReasons
      summary: Gets a list of job hold reasons
      description: Gets a list of job hold reasons
      operationId: JobHoldReasons_Get
      parameters:
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
        - name: page
          in: query
          description: Format - int32. Result page to load
          schema:
            type: integer
            format: int32
            nullable: true
        - name: pageSize
          in: query
          description: Format - int32. Number of results per page
          schema:
            type: integer
            format: int32
            nullable: true
        - name: includeTotal
          in: query
          description: Include total count in the response
          schema:
            type: boolean
            nullable: true
        - name: active
          in: query
          description: "Filter by status.  Acceptable values are true, false, any.\\\nValues: [True, Any, False]"
          schema:
            type: string
            oneOf:
              - $ref: '#/components/schemas/ActiveQueryFilter'
            nullable: true
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_Of_Crm.V2.JobHoldReasonResponse'
              example:
                page: 0
                pageSize: 0
                hasMore: true
                totalCount: 0
                data:
                  - id: 0
                    name: string
                    active: true
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/jpm/v2/tenant/{tenant}/jobs/{id}':
    get:
      tags:
        - Jobs
      summary: Gets a job by ID
      description: Gets a job by ID
      operationId: Jobs_Get
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
        - name: externalDataApplicationGuid
          in: query
          description: "Format - guid. If this guid is provided, external data corresponding to\nthis application guid will be returned."
          schema:
            type: string
            format: guid
            nullable: true
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crm.V2.JobResponse'
              example:
                id: 0
                jobNumber: string
                customerId: 0
                locationId: 0
                jobStatus: string
                completedOn: string
                businessUnitId: 0
                jobTypeId: 0
                priority: string
                campaignId: 0
                summary: string
                customFields:
                  - typeId: 0
                    name: string
                    value: string
                appointmentCount: 0
                firstAppointmentId: 0
                lastAppointmentId: 0
                recallForId: 0
                warrantyId: 0
                jobGeneratedLeadSource:
                  jobId: 0
                  employeeId: 0
                noCharge: true
                notificationsEnabled: true
                createdOn: string
                createdById: 0
                modifiedOn: string
                tagTypeIds:
                  - 0
                leadCallId: 0
                bookingId: 0
                soldById: 0
                externalData:
                  - key: string
                    value: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '404':
          description: The requested entity was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
    patch:
      tags:
        - Jobs
      summary: Updates a job
      description: Updates a job
      operationId: Jobs_Update
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Crm.V2.UpdateJobRequest'
            example:
              customerId: 0
              locationId: 0
              businessUnitId: 0
              jobTypeId: 0
              priority: string
              campaignId: 0
              summary: string
              shouldUpdateInvoiceItems: true
              customFields:
                - typeId: 0
                  value: string
              tagTypeIds:
                - 0
              externalData:
                applicationGuid: string
                externalData:
                  - key: string
                    value: string
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crm.V2.JobResponse'
              example:
                id: 0
                jobNumber: string
                customerId: 0
                locationId: 0
                jobStatus: string
                completedOn: string
                businessUnitId: 0
                jobTypeId: 0
                priority: string
                campaignId: 0
                summary: string
                customFields:
                  - typeId: 0
                    name: string
                    value: string
                appointmentCount: 0
                firstAppointmentId: 0
                lastAppointmentId: 0
                recallForId: 0
                warrantyId: 0
                jobGeneratedLeadSource:
                  jobId: 0
                  employeeId: 0
                noCharge: true
                notificationsEnabled: true
                createdOn: string
                createdById: 0
                modifiedOn: string
                tagTypeIds:
                  - 0
                leadCallId: 0
                bookingId: 0
                soldById: 0
                externalData:
                  - key: string
                    value: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '404':
          description: The requested entity was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/jpm/v2/tenant/{tenant}/jobs':
    post:
      tags:
        - Jobs
      summary: Creates a job
      description: Creates a job
      operationId: Jobs_Create
      parameters:
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Crm.V2.JobCreateRequest'
            example:
              customerId: 0
              locationId: 0
              businessUnitId: 0
              jobTypeId: 0
              priority: string
              campaignId: 0
              appointments:
                - start: string
                  end: string
                  arrivalWindowStart: string
                  arrivalWindowEnd: string
                  technicianIds:
                    - 0
              summary: string
              customFields:
                - typeId: 0
                  value: string
              tagTypeIds:
                - 0
              externalData:
                applicationGuid: string
                externalData:
                  - key: string
                    value: string
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crm.V2.JobResponse'
              example:
                id: 0
                jobNumber: string
                customerId: 0
                locationId: 0
                jobStatus: string
                completedOn: string
                businessUnitId: 0
                jobTypeId: 0
                priority: string
                campaignId: 0
                summary: string
                customFields:
                  - typeId: 0
                    name: string
                    value: string
                appointmentCount: 0
                firstAppointmentId: 0
                lastAppointmentId: 0
                recallForId: 0
                warrantyId: 0
                jobGeneratedLeadSource:
                  jobId: 0
                  employeeId: 0
                noCharge: true
                notificationsEnabled: true
                createdOn: string
                createdById: 0
                modifiedOn: string
                tagTypeIds:
                  - 0
                leadCallId: 0
                bookingId: 0
                soldById: 0
                externalData:
                  - key: string
                    value: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
    get:
      tags:
        - Jobs
      summary: Gets a list of jobs
      description: Gets a list of jobs
      operationId: Jobs_GetList
      parameters:
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
        - name: page
          in: query
          description: 'Format - int32. The logical number of page to return, starting from 1'
          schema:
            type: integer
            format: int32
            nullable: true
        - name: pageSize
          in: query
          description: Format - int32. How many records to return (50 by default)
          schema:
            type: integer
            format: int32
            nullable: true
        - name: includeTotal
          in: query
          description: Whether total count should be returned
          schema:
            type: boolean
            nullable: true
        - name: ids
          in: query
          description: Perform lookup by multiple IDs (maximum 50)
          schema:
            type: string
        - name: number
          in: query
          description: Filters by job number
          schema:
            type: string
        - name: projectId
          in: query
          description: Format - int64. Filters by project ID
          schema:
            type: integer
            format: int64
            nullable: true
        - name: bookingId
          in: query
          description: Format - int64. Filters by booking ID that resulted in this job
          schema:
            type: integer
            format: int64
            nullable: true
        - name: jobStatus
          in: query
          description: 'Filters by job status. Supported statuses are "Scheduled", "InProgress", "Hold", "Completed", and "Canceled"'
          schema:
            type: string
        - name: appointmentStatus
          in: query
          description: "Filters by appointment status. Return a job if it has any appointment with the specified status.\nSupported statues are \"Scheduled\", \"Dispatched\", \"Working\", \"Hold\", \"Done\", \"Canceled\", \"Unused\""
          schema:
            type: string
        - name: firstAppointmentStartsOnOrAfter
          in: query
          description: "Format - date-time (as date-time in RFC3339). Return jobs whose first appointment starts on or after date/time (in UTC). Use with\n\"firstAppointmentStartsBefore\" to find jobs whose first appointment is within the specified date range."
          schema:
            type: string
            format: date-time
            nullable: true
        - name: firstAppointmentStartsBefore
          in: query
          description: Format - date-time (as date-time in RFC3339). Return jobs whose first appointment starts before date/time (in UTC)
          schema:
            type: string
            format: date-time
            nullable: true
        - name: appointmentStartsOnOrAfter
          in: query
          description: Format - date-time (as date-time in RFC3339). Return jobs if any appointment starts after date/time (in UTC)
          schema:
            type: string
            format: date-time
            nullable: true
        - name: appointmentStartsBefore
          in: query
          description: Format - date-time (as date-time in RFC3339). Return jobs if any appointment starts after date/time (in UTC)
          schema:
            type: string
            format: date-time
            nullable: true
        - name: technicianId
          in: query
          description: Format - int64. Return jobs if technician is assigned to any appointment
          schema:
            type: integer
            format: int64
            nullable: true
        - name: customerId
          in: query
          description: Format - int64. Filters by job's customer ID
          schema:
            type: integer
            format: int64
            nullable: true
        - name: locationId
          in: query
          description: Format - int64. Filters by job's location ID
          schema:
            type: integer
            format: int64
            nullable: true
        - name: soldById
          in: query
          description: Format - int64. Filters by the technician who sold the job
          schema:
            type: integer
            format: int64
            nullable: true
        - name: jobTypeId
          in: query
          description: Format - int64. Filters by job type ID
          schema:
            type: integer
            format: int64
            nullable: true
        - name: campaignId
          in: query
          description: Format - int64. Filters by job's campaign ID
          schema:
            type: integer
            format: int64
            nullable: true
        - name: businessUnitId
          in: query
          description: Format - int64. Filters by job's business unit ID
          schema:
            type: integer
            format: int64
            nullable: true
        - name: invoiceId
          in: query
          description: Format - int64. Filters by job's invoice ID
          schema:
            type: integer
            format: int64
            nullable: true
        - name: createdBefore
          in: query
          description: Format - date-time (as date-time in RFC3339). Return items created before certain date/time (in UTC)
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdOnOrAfter
          in: query
          description: Format - date-time (as date-time in RFC3339). Return items created on or after certain date/time (in UTC)
          schema:
            type: string
            format: date-time
            nullable: true
        - name: modifiedBefore
          in: query
          description: Format - date-time (as date-time in RFC3339). Return items modified before certain date/time (in UTC)
          schema:
            type: string
            format: date-time
            nullable: true
        - name: modifiedOnOrAfter
          in: query
          description: Format - date-time (as date-time in RFC3339). Return items modified on or after certain date/time (in UTC)
          schema:
            type: string
            format: date-time
            nullable: true
        - name: completedOnOrAfter
          in: query
          description: Format - date-time (as date-time in RFC3339). Return jobs that are completed after a certain date/time (in UTC)
          schema:
            type: string
            format: date-time
            nullable: true
        - name: completedBefore
          in: query
          description: Format - date-time (as date-time in RFC3339). Return jobs that are completed before a certain date/time (in UTC)
          schema:
            type: string
            format: date-time
            nullable: true
        - name: sort
          in: query
          description: "Applies sorting by the specified field:\\\n\"?sort=+FieldName\" for ascending order,\\\n\"?sort=-FieldName\" for descending order.\\\n\\\nAvailable fields are: Id, ModifiedOn, CreatedOn."
          schema:
            type: string
        - name: externalDataApplicationGuid
          in: query
          description: "Format - guid. If this guid is provided, external data corresponding to\nthis application guid will be returned."
          schema:
            type: string
            format: guid
            nullable: true
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_Of_Crm.V2.JobResponse'
              example:
                page: 0
                pageSize: 0
                hasMore: true
                totalCount: 0
                data:
                  - id: 0
                    jobNumber: string
                    customerId: 0
                    locationId: 0
                    jobStatus: string
                    completedOn: string
                    businessUnitId: 0
                    jobTypeId: 0
                    priority: string
                    campaignId: 0
                    summary: string
                    customFields:
                      - typeId: 0
                        name: string
                        value: string
                    appointmentCount: 0
                    firstAppointmentId: 0
                    lastAppointmentId: 0
                    recallForId: 0
                    warrantyId: 0
                    jobGeneratedLeadSource:
                      jobId: 0
                      employeeId: 0
                    noCharge: true
                    notificationsEnabled: true
                    createdOn: string
                    createdById: 0
                    modifiedOn: string
                    tagTypeIds:
                      - 0
                    leadCallId: 0
                    bookingId: 0
                    soldById: 0
                    externalData:
                      - key: string
                        value: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/jpm/v2/tenant/{tenant}/jobs/{id}/cancel':
    put:
      tags:
        - Jobs
      summary: Cancels a job
      description: Cancels a job
      operationId: Jobs_Cancel
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Crm.V2.CancelJobRequest'
            example:
              reasonId: 0
              memo: string
      responses:
        '200':
          description: The request has succeeded
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '404':
          description: The requested entity was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/jpm/v2/tenant/{tenant}/jobs/{id}/remove-cancellation':
    put:
      tags:
        - Jobs
      summary: Removes cancellation from a job
      description: Removes cancellation from a job
      operationId: Jobs_RemoveCancellation
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The request has succeeded
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/jpm/v2/tenant/{tenant}/jobs/{id}/hold':
    put:
      tags:
        - Jobs
      summary: Puts a job on hold
      description: Puts a job on hold
      operationId: Jobs_Hold
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Crm.V2.HoldJobRequest'
            example:
              reasonId: 0
              memo: string
      responses:
        '200':
          description: The request has succeeded
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '404':
          description: The requested entity was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/jpm/v2/tenant/{tenant}/jobs/{id}/complete':
    put:
      tags:
        - Jobs
      summary: Completes a job
      description: Completes a job
      operationId: Jobs_Complete
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Crm.V2.CompleteJobRequest'
            example:
              completedOn: string
      responses:
        '200':
          description: The request has succeeded
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '404':
          description: Job not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '409':
          description: Job already completed or cancelled or has no assigned technicians
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/jpm/v2/tenant/{tenant}/jobs/{id}/notes':
    get:
      tags:
        - Jobs
      summary: Gets a list of notes on the specified job
      description: Gets a list of notes on the specified job
      operationId: Jobs_GetNotes
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
        - name: page
          in: query
          description: 'Format - int32. The logical number of page to return, starting from 1'
          schema:
            type: integer
            format: int32
            nullable: true
        - name: pageSize
          in: query
          description: Format - int32. How many records to return (50 by default)
          schema:
            type: integer
            format: int32
            nullable: true
        - name: includeTotal
          in: query
          description: Whether total count should be returned
          schema:
            type: boolean
            nullable: true
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_Of_Crm.V2.NoteResponse'
              example:
                page: 0
                pageSize: 0
                hasMore: true
                totalCount: 0
                data:
                  - text: string
                    isPinned: true
                    createdById: 0
                    createdOn: string
                    modifiedOn: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '404':
          description: The requested entity was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
    post:
      tags:
        - Jobs
      summary: Creates a note on the specified job
      description: Creates a note on the specified job
      operationId: Jobs_CreateNote
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Crm.V2.JobNoteCreateRequest'
            example:
              text: string
              pinToTop: true
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crm.V2.NoteResponse'
              example:
                text: string
                isPinned: true
                createdById: 0
                createdOn: string
                modifiedOn: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '404':
          description: The requested entity was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/jpm/v2/tenant/{tenant}/jobs/cancel-reasons':
    get:
      tags:
        - Jobs
      summary: Gets a list of cancel reasons for specific jobs
      description: Gets a list of cancel reasons for specific jobs
      operationId: Jobs_GetCancelReasons
      parameters:
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
        - name: ids
          in: query
          description: Perform lookup by multiple IDs (maximum 50)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_Of_Crm.V2.CancelReasonResponse'
              example:
                page: 0
                pageSize: 0
                hasMore: true
                totalCount: 0
                data:
                  - jobId: 0
                    reasonId: 0
                    name: string
                    text: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/jpm/v2/tenant/{tenant}/jobs/{id}/history':
    get:
      tags:
        - Jobs
      summary: Gets a list of history entries for the specified job
      description: Gets a list of history entries for the specified job
      operationId: Jobs_GetHistory
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crm.V2.JobHistoryResponse'
              example:
                history:
                  - id: 0
                    employeeId: 0
                    eventType: string
                    date: string
                    usedSchedulingTool: Manual
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '404':
          description: The requested entity was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/jpm/v2/tenant/{tenant}/job-types':
    get:
      tags:
        - JobTypes
      summary: Gets a list of job types
      description: Gets a list of job types
      operationId: JobTypes_GetList
      parameters:
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
        - name: name
          in: query
          description: Filters by job type name
          schema:
            type: string
        - name: ids
          in: query
          description: Perform lookup by multiple IDs (maximum 50)
          schema:
            type: string
        - name: page
          in: query
          description: 'Format - int32. The logical number of page to return, starting from 1'
          schema:
            type: integer
            format: int32
            nullable: true
        - name: pageSize
          in: query
          description: Format - int32. How many records to return (50 by default)
          schema:
            type: integer
            format: int32
            nullable: true
        - name: includeTotal
          in: query
          description: Whether total count should be returned
          schema:
            type: boolean
            nullable: true
        - name: active
          in: query
          description: "What kind of items should be returned (only active items will be returned by default)\\\nValues: [True, Any, False]"
          schema:
            type: string
            oneOf:
              - $ref: '#/components/schemas/ActiveQueryFilter'
            nullable: true
        - name: orderBy
          in: query
          description: 'Orders results by a field. Supported fields are "id", "modifiedOn", and "createdOn"'
          schema:
            type: string
        - name: orderByDirection
          in: query
          description: Specifies order direction of results. Supported values are "asc"/"ascending" and "desc"/"descending"
          schema:
            type: string
        - name: createdBefore
          in: query
          description: Format - date-time (as date-time in RFC3339). Return items created before certain date/time (in UTC)
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdOnOrAfter
          in: query
          description: Format - date-time (as date-time in RFC3339). Return items created on or after certain date/time (in UTC)
          schema:
            type: string
            format: date-time
            nullable: true
        - name: modifiedBefore
          in: query
          description: Format - date-time (as date-time in RFC3339). Return items modified before certain date/time (in UTC)
          schema:
            type: string
            format: date-time
            nullable: true
        - name: modifiedOnOrAfter
          in: query
          description: Format - date-time (as date-time in RFC3339). Return items modified on or after certain date/time (in UTC)
          schema:
            type: string
            format: date-time
            nullable: true
        - name: externalDataApplicationGuid
          in: query
          description: "Format - guid. If this guid is provided, external data corresponding to\nthis application guid will be returned."
          schema:
            type: string
            format: guid
            nullable: true
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_Of_Crm.V2.JobTypeResponse'
              example:
                page: 0
                pageSize: 0
                hasMore: true
                totalCount: 0
                data:
                  - id: 0
                    name: string
                    modifiedOn: string
                    externalData:
                      - key: string
                        value: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
    post:
      tags:
        - JobTypes
      summary: 'Creates a job type '
      description: 'Creates a job type '
      operationId: JobTypes_Create
      parameters:
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Crm.V2.CreateJobTypeRequest'
            example:
              name: string
              externalData:
                applicationGuid: string
                externalData:
                  - key: string
                    value: string
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crm.V2.JobTypeResponse'
              example:
                id: 0
                name: string
                modifiedOn: string
                externalData:
                  - key: string
                    value: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/jpm/v2/tenant/{tenant}/job-types/{id}':
    get:
      tags:
        - JobTypes
      summary: Gets a job type by ID
      description: Gets a job type by ID
      operationId: JobTypes_Get
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
        - name: externalDataApplicationGuid
          in: query
          description: "Format - guid. If this guid is provided, external data corresponding to\nthis application guid will be returned."
          schema:
            type: string
            format: guid
            nullable: true
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crm.V2.JobTypeResponse'
              example:
                id: 0
                name: string
                modifiedOn: string
                externalData:
                  - key: string
                    value: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '404':
          description: The requested entity was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
    patch:
      tags:
        - JobTypes
      summary: 'Creates a job type '
      description: 'Creates a job type '
      operationId: JobTypes_Update
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Crm.V2.UpdateJobTypeRequest'
            example:
              name: string
              externalData:
                applicationGuid: string
                externalData:
                  - key: string
                    value: string
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crm.V2.JobTypeResponse'
              example:
                id: 0
                name: string
                modifiedOn: string
                externalData:
                  - key: string
                    value: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/jpm/v2/tenant/{tenant}/projects/{id}':
    get:
      tags:
        - Projects
      summary: Gets a project by ID
      description: Gets a project by ID
      operationId: Projects_Get
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crm.V2.ProjectResponse'
              example:
                id: 0
                number: string
                name: string
                summary: string
                status: string
                customerId: 0
                locationId: 0
                startDate: string
                targetCompletionDate: string
                actualCompletionDate: string
                modifiedOn: string
                customFields:
                  - typeId: 0
                    name: string
                    value: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
        '404':
          description: The requested entity was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/jpm/v2/tenant/{tenant}/projects':
    get:
      tags:
        - Projects
      summary: Gets a list of projects
      description: Gets a list of projects
      operationId: Projects_GetList
      parameters:
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
        - name: ids
          in: query
          description: Perform lookup by multiple IDs (maximum 50)
          schema:
            type: string
        - name: customerId
          in: query
          description: Format - int64. Filters by customer ID
          schema:
            type: integer
            format: int64
            nullable: true
        - name: locationId
          in: query
          description: Format - int64. Filters by location ID
          schema:
            type: integer
            format: int64
            nullable: true
        - name: invoiceId
          in: query
          description: Format - int64. Return projects if it contains the specified invoice
          schema:
            type: integer
            format: int64
            nullable: true
        - name: technicianId
          in: query
          description: Format - int64. Return project if technician is assigned to any appointments on any job in the project
          schema:
            type: integer
            format: int64
            nullable: true
        - name: jobId
          in: query
          description: Format - int64. Return project if it contains the specified job
          schema:
            type: integer
            format: int64
            nullable: true
        - name: appointmentId
          in: query
          description: Format - int64. Return project if it contains the specified appointment in the project's jobs
          schema:
            type: integer
            format: int64
            nullable: true
        - name: createdBefore
          in: query
          description: Format - date-time (as date-time in RFC3339). Return items created before certain date/time (in UTC)
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdOnOrAfter
          in: query
          description: Format - date-time (as date-time in RFC3339). Return items created on or after certain date/time (in UTC)
          schema:
            type: string
            format: date-time
            nullable: true
        - name: startsBefore
          in: query
          description: Format - date-time (as date-time in RFC3339). Return projects that start before date
          schema:
            type: string
            format: date-time
            nullable: true
        - name: startsOnOrAfter
          in: query
          description: Format - date-time (as date-time in RFC3339). Return projects that start on or after date
          schema:
            type: string
            format: date-time
            nullable: true
        - name: completedBefore
          in: query
          description: Format - date-time (as date-time in RFC3339). Return projects that are completed before date
          schema:
            type: string
            format: date-time
            nullable: true
        - name: completedOnOrAfter
          in: query
          description: Format - date-time (as date-time in RFC3339). Return projects that are completed on or after date
          schema:
            type: string
            format: date-time
            nullable: true
        - name: targetCompletionDateBefore
          in: query
          description: Format - date-time (as date-time in RFC3339). Return projects whose target completion date is before date
          schema:
            type: string
            format: date-time
            nullable: true
        - name: targetCompletionDateOnOrAfter
          in: query
          description: Format - date-time (as date-time in RFC3339). Return projects whose target completion date is on or after date
          schema:
            type: string
            format: date-time
            nullable: true
        - name: modifiedBefore
          in: query
          description: Format - date-time (as date-time in RFC3339). Return projects whose last modification date is before date
          schema:
            type: string
            format: date-time
            nullable: true
        - name: modifiedOnOrAfter
          in: query
          description: Format - date-time (as date-time in RFC3339). Return projects whose last modification date is on or after date
          schema:
            type: string
            format: date-time
            nullable: true
        - name: page
          in: query
          description: 'Format - int32. The logical number of page to return, starting from 1'
          schema:
            type: integer
            format: int32
            nullable: true
        - name: pageSize
          in: query
          description: Format - int32. How many records to return (50 by default)
          schema:
            type: integer
            format: int32
            nullable: true
        - name: includeTotal
          in: query
          description: Whether total count should be returned
          schema:
            type: boolean
            nullable: true
        - name: status
          in: query
          description: Filters by status
          schema:
            type: string
        - name: sort
          in: query
          description: "Applies sorting by the specified field:\\\n\"?sort=+FieldName\" for ascending order,\\\n\"?sort=-FieldName\" for descending order.\\\n\\\nAvailable fields are: Id, ModifiedOn, CreatedOn."
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_Of_Crm.V2.ProjectResponse'
              example:
                page: 0
                pageSize: 0
                hasMore: true
                totalCount: 0
                data:
                  - id: 0
                    number: string
                    name: string
                    summary: string
                    status: string
                    customerId: 0
                    locationId: 0
                    startDate: string
                    targetCompletionDate: string
                    actualCompletionDate: string
                    modifiedOn: string
                    customFields:
                      - typeId: 0
                        name: string
                        value: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
components:
  schemas:
    Crm.V2.AppointmentResponse:
      required:
        - id
        - jobId
        - start
        - end
        - status
        - createdOn
        - modifiedOn
      type: object
      properties:
        id:
          type: integer
          description: Appointment ID
          format: int64
        jobId:
          type: integer
          description: ID of the job that the appointment was created for
          format: int64
        appointmentNumber:
          type: string
          description: Appointment number
          nullable: true
        start:
          type: string
          description: Appointment's start date/time (in UTC)
          format: date-time
        end:
          type: string
          description: Appointment's end date/time (in UTC)
          format: date-time
        arrivalWindowStart:
          type: string
          description: 'Arrival window start date/time (in UTC), if configured'
          format: date-time
          nullable: true
        arrivalWindowEnd:
          type: string
          description: 'Arrival window end date/time (in UTC), if configured'
          format: date-time
          nullable: true
        status:
          oneOf:
            - $ref: '#/components/schemas/Crm.V2.AppointmentStatus'
          description: Appointment's status
        specialInstructions:
          type: string
          description: Special instructions associated to the appointment
          nullable: true
        createdOn:
          type: string
          description: When the appointment was created (in UTC)
          format: date-time
        modifiedOn:
          type: string
          description: When the appointment was modified (in UTC)
          format: date-time
      additionalProperties: false
      description: Appointment response model
    Crm.V2.AppointmentStatus:
      enum:
        - Scheduled
        - Dispatched
        - Working
        - Hold
        - Done
        - Canceled
      type: string
      description: Indicates the status of a AppointmentResponse.
      x-enumNames:
        - Scheduled
        - Dispatched
        - Working
        - Hold
        - Done
        - Canceled
    ApiErrorResponse:
      required:
        - type
        - title
        - status
        - traceId
        - errors
        - data
      type: object
      properties:
        type:
          type: string
          description: A URI reference that identifies the problem type
        title:
          type: string
          description: 'A short, human-readable summary of the problem type'
        status:
          type: integer
          description: The HTTP status code generated by server
          format: int32
        traceId:
          type: string
          description: Internal trace ID for advanced diagnostics
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: 'Provides more details about errors occurred, which can potentially be used for visual display'
        data:
          type: object
          additionalProperties: { }
          description: 'Provides additional data, intended for programmatical usage'
      additionalProperties: false
      description: 'Detailed error response, following RFC 7807 recommendations (https://tools.ietf.org/html/rfc7807).'
    PaginatedResponse_Of_Crm.V2.AppointmentResponse:
      required:
        - page
        - pageSize
        - hasMore
        - data
      type: object
      properties:
        page:
          type: integer
          description: From which page this output has started
          format: int32
        pageSize:
          type: integer
          description: Page size for this query (i.e. how many records were requested to return)
          format: int32
        hasMore:
          type: boolean
          description: True if there are more records in the query than returned in this result
        totalCount:
          type: integer
          description: Total count of records for this query (can optionally be populated)
          format: int32
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Crm.V2.AppointmentResponse'
          description: 'The collection of result items, will never have more than PageSize items'
      additionalProperties: false
      description: Represents paginated API response.
    Crm.V2.AppointmentAddRequest:
      required:
        - jobId
        - start
        - end
      type: object
      properties:
        jobId:
          type: integer
          description: ID of job for new appointment
          format: int64
        start:
          type: string
          description: Start date/time (in UTC) of new appointment
          format: date-time
        end:
          type: string
          description: End date/time (in UTC) of new appointment
          format: date-time
        arrivalWindowStart:
          type: string
          description: 'Arrival window start date/time (in UTC) for new appointment, if configured'
          format: date-time
          nullable: true
        arrivalWindowEnd:
          type: string
          description: 'Arrival window end date/time (in UTC) for new appointment, if configured'
          format: date-time
          nullable: true
        technicianIds:
          type: array
          items:
            type: integer
            format: int64
          description: List of IDs of technicians to assign to new appointment
          nullable: true
        specialInstructions:
          type: string
          description: Special instructions associated to the appointment
          nullable: true
      additionalProperties: false
    Crm.V2.AppointmentRescheduleRequest:
      type: object
      properties:
        start:
          type: string
          description: New start date/time (in UTC) for appointment
          format: date-time
        end:
          type: string
          description: New end date/time (in UTC) for appointment
          format: date-time
        arrivalWindowStart:
          type: string
          description: 'New arrival window start date/time (in UTC) for appointment, if configured'
          format: date-time
          nullable: true
        arrivalWindowEnd:
          type: string
          description: 'New arrival window end date/time (in UTC) for appointment, if configured'
          format: date-time
          nullable: true
      additionalProperties: false
    Crm.V2.HoldAppointmentRequest:
      required:
        - reasonId
        - memo
      type: object
      properties:
        reasonId:
          type: integer
          description: ID of the hold reason
          format: int64
        memo:
          type: string
          description: Memo of why the appointment is going on hold
      additionalProperties: false
    Crm.V2.UpdateAppointmentSpecialInstructionsRequest:
      required:
        - specialInstructions
      type: object
      properties:
        specialInstructions:
          type: string
          description: New special instructions associated to the appointment
      additionalProperties: false
    PaginatedResponse_Of_Crm.V2.JobCancelReasonResponse:
      required:
        - page
        - pageSize
        - hasMore
        - data
      type: object
      properties:
        page:
          type: integer
          description: From which page this output has started
          format: int32
        pageSize:
          type: integer
          description: Page size for this query (i.e. how many records were requested to return)
          format: int32
        hasMore:
          type: boolean
          description: True if there are more records in the query than returned in this result
        totalCount:
          type: integer
          description: Total count of records for this query (can optionally be populated)
          format: int32
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Crm.V2.JobCancelReasonResponse'
          description: 'The collection of result items, will never have more than PageSize items'
      additionalProperties: false
      description: Represents paginated API response.
    Crm.V2.JobCancelReasonResponse:
      required:
        - id
        - name
        - active
      type: object
      properties:
        id:
          type: integer
          description: ID of the job cancel reason
          format: int64
        name:
          type: string
          description: Name of the job cancel reason
        active:
          type: boolean
          description: Whether the job cancel reason is active
      additionalProperties: false
    ActiveQueryFilter:
      enum:
        - 'True'
        - Any
        - 'False'
      type: string
      description: ''
      x-enumNames:
        - 'True'
        - Any
        - 'False'
    PaginatedResponse_Of_Crm.V2.JobHoldReasonResponse:
      required:
        - page
        - pageSize
        - hasMore
        - data
      type: object
      properties:
        page:
          type: integer
          description: From which page this output has started
          format: int32
        pageSize:
          type: integer
          description: Page size for this query (i.e. how many records were requested to return)
          format: int32
        hasMore:
          type: boolean
          description: True if there are more records in the query than returned in this result
        totalCount:
          type: integer
          description: Total count of records for this query (can optionally be populated)
          format: int32
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Crm.V2.JobHoldReasonResponse'
          description: 'The collection of result items, will never have more than PageSize items'
      additionalProperties: false
      description: Represents paginated API response.
    Crm.V2.JobHoldReasonResponse:
      required:
        - id
        - name
        - active
      type: object
      properties:
        id:
          type: integer
          description: Job Hold Reason Id
          format: int64
        name:
          type: string
          description: Job Hold Reason Name
        active:
          type: boolean
          description: Job Hold Reason Active Status
      additionalProperties: false
    Crm.V2.JobResponse:
      required:
        - id
        - jobNumber
        - customerId
        - locationId
        - jobStatus
        - businessUnitId
        - jobTypeId
        - priority
        - campaignId
        - customFields
        - appointmentCount
        - firstAppointmentId
        - lastAppointmentId
        - noCharge
        - notificationsEnabled
        - createdOn
        - createdById
        - modifiedOn
        - tagTypeIds
        - externalData
      type: object
      properties:
        id:
          type: integer
          description: ID of the job
          format: int64
        jobNumber:
          type: string
          description: Job number
        customerId:
          type: integer
          description: ID of the job's customer
          format: int64
        locationId:
          type: integer
          description: ID of the job's location
          format: int64
        jobStatus:
          type: string
          description: Status of the job
        completedOn:
          type: string
          description: Date/time (in UTC) when the job was completed
          format: date-time
          nullable: true
        businessUnitId:
          type: integer
          description: ID of the job's business unit
          format: int64
        jobTypeId:
          type: integer
          description: ID of job type
          format: int64
        priority:
          type: string
          description: Priority of the job
        campaignId:
          type: integer
          description: ID of the job's campaign
          format: int64
        summary:
          type: string
          description: Job summary
          nullable: true
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldApiModel'
          description: Custom fields on the job
        appointmentCount:
          type: integer
          description: Number of appointments on the job
          format: int64
        firstAppointmentId:
          type: integer
          description: ID of the first appointment on the job
          format: int64
        lastAppointmentId:
          type: integer
          description: ID of the last appointment on the job
          format: int64
        recallForId:
          type: integer
          description: ID of the job for which this job is a recall
          format: int64
          nullable: true
        warrantyId:
          type: integer
          description: ID of the job for which this job is a warranty
          format: int64
          nullable: true
        jobGeneratedLeadSource:
          oneOf:
            - $ref: '#/components/schemas/Jpm.JobGeneratedLeadSource'
          description: "Object that contains:\n            JobId: ID of the job from which this job was generated\n            EmployeeId: ID of the office user or technician\n            "
          nullable: true
        noCharge:
          type: boolean
          description: Whether the job is a no-charge job
        notificationsEnabled:
          type: boolean
          description: Whether notifications will be sent to customers
        createdOn:
          type: string
          description: Date/time (in UTC) when the job was created
          format: date-time
        createdById:
          type: integer
          description: ID of the user who created the job
          format: int64
        modifiedOn:
          type: string
          description: Date/time (in UTC) when job was last modified
          format: date-time
        tagTypeIds:
          type: array
          items:
            type: integer
            format: int64
          description: Tags on the job
        leadCallId:
          type: integer
          description: ID of the Call that resulted in this job
          format: int64
          nullable: true
        bookingId:
          type: integer
          description: ID of the Booking that resulted in this job
          format: int64
          nullable: true
        soldById:
          type: integer
          description: ID of the Technician that sold this job
          format: int64
          nullable: true
        externalData:
          type: array
          items:
            $ref: '#/components/schemas/Crm.V2.ExternalDataModel'
          description: "List of external data attached to this job,\nthat corresponds to the application guid provided in the request."
      additionalProperties: false
    CustomFieldApiModel:
      required:
        - typeId
        - name
        - value
      type: object
      properties:
        typeId:
          type: integer
          format: int64
        name:
          type: string
        value:
          type: string
      additionalProperties: false
    Jpm.JobGeneratedLeadSource:
      type: object
      properties:
        jobId:
          type: integer
          format: int64
          nullable: true
        employeeId:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    Crm.V2.ExternalDataModel:
      required:
        - key
        - value
      type: object
      properties:
        key:
          type: string
          description: External data key
        value:
          type: string
          description: External data value
      additionalProperties: false
    Crm.V2.JobCreateRequest:
      required:
        - customerId
        - locationId
        - businessUnitId
        - jobTypeId
        - priority
        - campaignId
        - appointments
      type: object
      properties:
        customerId:
          type: integer
          description: ID of the job's customer
          format: int64
        locationId:
          type: integer
          description: ID of the job's location
          format: int64
        businessUnitId:
          type: integer
          description: ID of the job's business unit
          format: int64
        jobTypeId:
          type: integer
          description: ID of job type
          format: int64
        priority:
          type: string
          description: Priority of the job
        campaignId:
          type: integer
          description: ID of the job's campaign
          format: int64
        appointments:
          type: array
          items:
            $ref: '#/components/schemas/Crm.V2.AppointmentInformation'
          description: List of appointment information
        summary:
          type: string
          description: Job summary
          nullable: true
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/Crm.V2.CustomFieldModel'
          description: Custom fields on the job
          nullable: true
        tagTypeIds:
          type: array
          items:
            type: integer
            format: int64
          description: List of IDs of tags on the job
          nullable: true
        externalData:
          oneOf:
            - $ref: '#/components/schemas/Crm.V2.ExternalDataUpdateRequest'
          description: "Optional model that contains a list of external data items\nthat should be attached to this job."
          nullable: true
      additionalProperties: false
    Crm.V2.AppointmentInformation:
      required:
        - start
        - end
      type: object
      properties:
        start:
          type: string
          description: Start date/time (in UTC) for the appointment
          format: date-time
        end:
          type: string
          description: End date/time (in UTC) for the appointment
          format: date-time
        arrivalWindowStart:
          type: string
          description: Start date/time (in UTC) for the arrival window of the appointment
          format: date-time
          nullable: true
        arrivalWindowEnd:
          type: string
          description: End date/time (in UTC) for the arrival window of the appointment
          format: date-time
          nullable: true
        technicianIds:
          type: array
          items:
            type: integer
            format: int64
          description: List of IDs of technicians who will be assigned on the appointment
          nullable: true
      additionalProperties: false
    Crm.V2.CustomFieldModel:
      required:
        - typeId
      type: object
      properties:
        typeId:
          type: integer
          description: ID of the custom field
          format: int64
        value:
          type: string
          description: Value of the custom field
          nullable: true
      additionalProperties: false
    Crm.V2.ExternalDataUpdateRequest:
      required:
        - applicationGuid
        - externalData
      type: object
      properties:
        applicationGuid:
          type: string
          description: "Items that are created with a specific guid, could be fetched/updated/removed\nonly when the same application guid is provided."
          format: guid
        externalData:
          type: array
          items:
            $ref: '#/components/schemas/Crm.V2.ExternalDataModel'
          description: "External data list. This list must include all of the external data for the job.\nIf job A has custom data with keys X and Y and this field only contains an item\nwith a key X, then custom data with a key Y on job A will be removed."
      additionalProperties: false
    Crm.V2.CancelJobRequest:
      required:
        - reasonId
        - memo
      type: object
      properties:
        reasonId:
          type: integer
          description: ID of job cancel reason
          format: int64
        memo:
          type: string
          description: Memo of job cancel reason
      additionalProperties: false
    Crm.V2.HoldJobRequest:
      required:
        - reasonId
        - memo
      type: object
      properties:
        reasonId:
          type: integer
          description: ID of job hold reason
          format: int64
        memo:
          type: string
          description: Memo of job hold reason
      additionalProperties: false
    Crm.V2.CompleteJobRequest:
      required:
        - completedOn
      type: object
      properties:
        completedOn:
          type: string
          description: Date on which the job was completed
          format: date-time
      additionalProperties: false
    Crm.V2.UpdateJobRequest:
      type: object
      properties:
        customerId:
          type: integer
          description: ID of the job's customer
          format: int64
        locationId:
          type: integer
          description: ID of the job's location
          format: int64
        businessUnitId:
          type: integer
          description: ID of the job's business unit
          format: int64
        jobTypeId:
          type: integer
          description: ID of job type
          format: int64
        priority:
          type: string
          description: Priority of the job
        campaignId:
          type: integer
          description: ID of the job's campaign
          format: int64
        summary:
          type: string
          description: Job summary
        shouldUpdateInvoiceItems:
          type: boolean
          description: 'If set to true, update the business unit of invoice items on job''s invoice'
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/Crm.V2.CustomFieldModel'
          description: "List of custom fields and their values. This list must describe the full list of custom fields on the job.\nIf job A has values for custom fields X and Y and this field only contains a model for custom field X, then\nthe value for custom field Y on job A will be removed."
        tagTypeIds:
          type: array
          items:
            type: integer
            format: int64
          description: "List of tag types. This list must describe the full list of tags on the job. If job A has tags X and Y and\nthis field only contains a ID for tag X, then tag Y on job A will be removed."
        externalData:
          oneOf:
            - $ref: '#/components/schemas/Crm.V2.ExternalDataUpdateRequest'
          description: External data update model.
      additionalProperties: false
    PaginatedResponse_Of_Crm.V2.JobResponse:
      required:
        - page
        - pageSize
        - hasMore
        - data
      type: object
      properties:
        page:
          type: integer
          description: From which page this output has started
          format: int32
        pageSize:
          type: integer
          description: Page size for this query (i.e. how many records were requested to return)
          format: int32
        hasMore:
          type: boolean
          description: True if there are more records in the query than returned in this result
        totalCount:
          type: integer
          description: Total count of records for this query (can optionally be populated)
          format: int32
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Crm.V2.JobResponse'
          description: 'The collection of result items, will never have more than PageSize items'
      additionalProperties: false
      description: Represents paginated API response.
    PaginatedResponse_Of_Crm.V2.NoteResponse:
      required:
        - page
        - pageSize
        - hasMore
        - data
      type: object
      properties:
        page:
          type: integer
          description: From which page this output has started
          format: int32
        pageSize:
          type: integer
          description: Page size for this query (i.e. how many records were requested to return)
          format: int32
        hasMore:
          type: boolean
          description: True if there are more records in the query than returned in this result
        totalCount:
          type: integer
          description: Total count of records for this query (can optionally be populated)
          format: int32
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Crm.V2.NoteResponse'
          description: 'The collection of result items, will never have more than PageSize items'
      additionalProperties: false
      description: Represents paginated API response.
    Crm.V2.NoteResponse:
      required:
        - text
        - isPinned
        - createdById
        - createdOn
        - modifiedOn
      type: object
      properties:
        text:
          type: string
          description: Text content of a note
        isPinned:
          type: boolean
          description: Whether the note is pinned to the top
        createdById:
          type: integer
          description: ID of user who created this note
          format: int64
        createdOn:
          type: string
          description: Date/time (in UTC) the note was created
          format: date-time
        modifiedOn:
          type: string
          description: Date/time (in UTC) the note was modified
          format: date-time
      additionalProperties: false
    Crm.V2.JobNoteCreateRequest:
      required:
        - text
      type: object
      properties:
        text:
          type: string
          description: Text content of job note
        pinToTop:
          type: boolean
          description: Whether to pin job note to the top
          nullable: true
      additionalProperties: false
    PaginatedResponse_Of_Crm.V2.CancelReasonResponse:
      required:
        - page
        - pageSize
        - hasMore
        - data
      type: object
      properties:
        page:
          type: integer
          description: From which page this output has started
          format: int32
        pageSize:
          type: integer
          description: Page size for this query (i.e. how many records were requested to return)
          format: int32
        hasMore:
          type: boolean
          description: True if there are more records in the query than returned in this result
        totalCount:
          type: integer
          description: Total count of records for this query (can optionally be populated)
          format: int32
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Crm.V2.CancelReasonResponse'
          description: 'The collection of result items, will never have more than PageSize items'
      additionalProperties: false
      description: Represents paginated API response.
    Crm.V2.CancelReasonResponse:
      required:
        - jobId
        - reasonId
        - name
        - text
      type: object
      properties:
        jobId:
          type: integer
          description: Job ID
          format: int64
        reasonId:
          type: integer
          description: ID of the reason
          format: int64
        name:
          type: string
          description: Name of the reason
        text:
          type: string
          description: Text of the reason
      additionalProperties: false
    Crm.V2.JobHistoryResponse:
      type: object
      properties:
        history:
          type: array
          items:
            $ref: '#/components/schemas/Crm.Contracts.Jobs.JobHistoryItemModel'
          description: List of logs for the job
          nullable: true
      additionalProperties: false
    Crm.Contracts.Jobs.JobHistoryItemModel:
      required:
        - id
        - eventType
        - date
        - usedSchedulingTool
      type: object
      properties:
        id:
          type: integer
          format: int64
        employeeId:
          type: integer
          format: int64
          nullable: true
        eventType:
          type: string
        date:
          type: string
          format: date-time
        usedSchedulingTool:
          $ref: '#/components/schemas/Crm.Jobs.JobSchedulingTool'
      additionalProperties: false
    Crm.Jobs.JobSchedulingTool:
      enum:
        - Manual
        - SmartSchedule
        - SmartDispatch
        - TechnicianRouteOptimization
      type: string
      description: ''
      x-enumNames:
        - Manual
        - SmartSchedule
        - SmartDispatch
        - TechnicianRouteOptimization
    PaginatedResponse_Of_Crm.V2.JobTypeResponse:
      required:
        - page
        - pageSize
        - hasMore
        - data
      type: object
      properties:
        page:
          type: integer
          description: From which page this output has started
          format: int32
        pageSize:
          type: integer
          description: Page size for this query (i.e. how many records were requested to return)
          format: int32
        hasMore:
          type: boolean
          description: True if there are more records in the query than returned in this result
        totalCount:
          type: integer
          description: Total count of records for this query (can optionally be populated)
          format: int32
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Crm.V2.JobTypeResponse'
          description: 'The collection of result items, will never have more than PageSize items'
      additionalProperties: false
      description: Represents paginated API response.
    Crm.V2.JobTypeResponse:
      required:
        - id
        - name
        - modifiedOn
        - externalData
      type: object
      properties:
        id:
          type: integer
          description: ID of the job type
          format: int64
        name:
          type: string
          description: Name of the job type
        modifiedOn:
          type: string
          description: Date/time (in UTC) when job type was last modified
          format: date-time
        externalData:
          type: array
          items:
            $ref: '#/components/schemas/Crm.V2.ExternalDataModel'
          description: "List of external data attached to this job type,\nthat corresponds to the application guid provided in the request."
      additionalProperties: false
    Crm.V2.CreateJobTypeRequest:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: Name of the job type
        externalData:
          oneOf:
            - $ref: '#/components/schemas/Crm.V2.ExternalDataUpdateRequest'
          description: "Optional model that contains a list of external data items\nthat should be attached to this job type."
          nullable: true
      additionalProperties: false
    Crm.V2.UpdateJobTypeRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the job type
        externalData:
          oneOf:
            - $ref: '#/components/schemas/Crm.V2.ExternalDataUpdateRequest'
          description: 'External data update model '
      additionalProperties: false
    Crm.V2.ProjectResponse:
      required:
        - id
        - number
        - customerId
        - locationId
        - customFields
      type: object
      properties:
        id:
          type: integer
          description: ID of the project
          format: int64
        number:
          type: string
          description: Project number
        name:
          type: string
          description: Project name
          nullable: true
        summary:
          type: string
          description: Project summary
          nullable: true
        status:
          type: string
          description: Project summary
          nullable: true
        customerId:
          type: integer
          description: ID of the project's customer
          format: int64
        locationId:
          type: integer
          description: ID of the project's location
          format: int64
        startDate:
          type: string
          description: Start date of the project
          format: date-time
          nullable: true
        targetCompletionDate:
          type: string
          description: Target completion date of the project
          format: date-time
          nullable: true
        actualCompletionDate:
          type: string
          description: Actual completion date of the project
          format: date-time
          nullable: true
        modifiedOn:
          type: string
          description: Projects last modification date
          format: date-time
          nullable: true
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldApiModel'
          description: Custom fields on the project
      additionalProperties: false
    PaginatedResponse_Of_Crm.V2.ProjectResponse:
      required:
        - page
        - pageSize
        - hasMore
        - data
      type: object
      properties:
        page:
          type: integer
          description: From which page this output has started
          format: int32
        pageSize:
          type: integer
          description: Page size for this query (i.e. how many records were requested to return)
          format: int32
        hasMore:
          type: boolean
          description: True if there are more records in the query than returned in this result
        totalCount:
          type: integer
          description: Total count of records for this query (can optionally be populated)
          format: int32
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Crm.V2.ProjectResponse'
          description: 'The collection of result items, will never have more than PageSize items'
      additionalProperties: false
      description: Represents paginated API response.
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: ST-App-Key
      in: header
    apiKeyQuery:
      type: apiKey
      name: servicetitanapplicationkey
      in: query
security:
  - apiKeyHeader: [ ]
  - apiKeyQuery: [ ]