openapi: 3.0.1
info:
  title: Sales & Estimates
  version: '1.0'
servers:
  - url: https://api-integration.servicetitan.io
paths:
  '/sales/v2/tenant/{tenant}/estimates/{id}':
    get:
      tags:
        - Estimates
      summary: Estimates_Get
      operationId: Estimates_Get
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estimates.V2.EstimateResponse'
              example:
                id: 0
                jobId: 0
                projectId: 0
                name: string
                jobNumber: string
                status:
                  value: 0
                  name: string
                summary: string
                modifiedOn: string
                soldOn: string
                soldBy: 0
                active: true
                items:
                  - id: 0
                    sku:
                      id: 0
                      name: string
                      displayName: string
                      type: string
                      soldHours: 0
                      generalLedgerAccountId: 0
                      generalLedgerAccountName: string
                      modifiedOn: string
                    skuAccount: string
                    description: string
                    qty: 0
                    unitRate: 0
                    total: 0
                    itemGroupName: string
                    itemGroupRootId: 0
                    modifiedOn: string
                externalLinks:
                  - name: string
                    url: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
    put:
      tags:
        - Estimates
      summary: Estimates_Update
      operationId: Estimates_Update
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Estimates.V2.UpdateEstimateRequest'
            example:
              name: string
              summary: string
              tax: 0
              items:
                - id: 0
                  skuId: 0
                  skuName: string
                  parentItemId: 0
                  description: string
                  isAddOn: true
                  quantity: 0
                  unitPrice: 0
                  skipUpdatingMembershipPrices: true
                  itemGroupName: string
                  itemGroupRootId: 0
              externalLinks:
                - name: string
                  url: string
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estimates.V2.EstimateResponse'
              example:
                id: 0
                jobId: 0
                projectId: 0
                name: string
                jobNumber: string
                status:
                  value: 0
                  name: string
                summary: string
                modifiedOn: string
                soldOn: string
                soldBy: 0
                active: true
                items:
                  - id: 0
                    sku:
                      id: 0
                      name: string
                      displayName: string
                      type: string
                      soldHours: 0
                      generalLedgerAccountId: 0
                      generalLedgerAccountName: string
                      modifiedOn: string
                    skuAccount: string
                    description: string
                    qty: 0
                    unitRate: 0
                    total: 0
                    itemGroupName: string
                    itemGroupRootId: 0
                    modifiedOn: string
                externalLinks:
                  - name: string
                    url: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/sales/v2/tenant/{tenant}/estimates':
    get:
      tags:
        - Estimates
      summary: Estimates_GetList
      operationId: Estimates_GetList
      parameters:
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
        - name: jobId
          in: query
          description: Format - int64.
          schema:
            type: integer
            format: int64
            nullable: true
        - name: projectId
          in: query
          description: Format - int64.
          schema:
            type: integer
            format: int64
            nullable: true
        - name: jobNumber
          in: query
          schema:
            type: string
        - name: totalGreater
          in: query
          description: Format - decimal.
          schema:
            type: number
            format: decimal
            nullable: true
        - name: totalLess
          in: query
          description: Format - decimal.
          schema:
            type: number
            format: decimal
            nullable: true
        - name: soldById
          in: query
          description: Format - int64.
          schema:
            type: integer
            format: int64
            nullable: true
        - name: soldByEmployeeId
          in: query
          description: Format - int64.
          schema:
            type: integer
            format: int64
            nullable: true
        - name: ids
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
            nullable: true
        - name: pageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
            nullable: true
        - name: includeTotal
          in: query
          schema:
            type: boolean
            nullable: true
        - name: soldAfter
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: soldBefore
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: status
          in: query
          schema:
            type: string
        - name: active
          in: query
          description: 'Values: [True, Any, False]'
          schema:
            type: string
            oneOf:
              - $ref: '#/components/schemas/ActiveQueryFilter'
            nullable: true
        - name: orderBy
          in: query
          schema:
            type: string
        - name: orderByDirection
          in: query
          schema:
            type: string
        - name: createdBefore
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdOnOrAfter
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: modifiedBefore
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: modifiedOnOrAfter
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_Of_Estimates.V2.EstimateResponse'
              example:
                page: 0
                pageSize: 0
                hasMore: true
                totalCount: 0
                data:
                  - id: 0
                    jobId: 0
                    projectId: 0
                    name: string
                    jobNumber: string
                    status:
                      value: 0
                      name: string
                    summary: string
                    modifiedOn: string
                    soldOn: string
                    soldBy: 0
                    active: true
                    items:
                      - id: 0
                        sku:
                          id: 0
                          name: string
                          displayName: string
                          type: string
                          soldHours: 0
                          generalLedgerAccountId: 0
                          generalLedgerAccountName: string
                          modifiedOn: string
                        skuAccount: string
                        description: string
                        qty: 0
                        unitRate: 0
                        total: 0
                        itemGroupName: string
                        itemGroupRootId: 0
                        modifiedOn: string
                    externalLinks:
                      - name: string
                        url: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
    post:
      tags:
        - Estimates
      summary: Estimates_Create
      operationId: Estimates_Create
      parameters:
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Estimates.V2.CreateEstimateRequest'
            example:
              name: string
              summary: string
              tax: 0
              items:
                - id: 0
                  skuId: 0
                  skuName: string
                  parentItemId: 0
                  description: string
                  isAddOn: true
                  quantity: 0
                  unitPrice: 0
                  skipUpdatingMembershipPrices: true
                  itemGroupName: string
                  itemGroupRootId: 0
              externalLinks:
                - name: string
                  url: string
              jobId: 0
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estimates.V2.EstimateResponse'
              example:
                id: 0
                jobId: 0
                projectId: 0
                name: string
                jobNumber: string
                status:
                  value: 0
                  name: string
                summary: string
                modifiedOn: string
                soldOn: string
                soldBy: 0
                active: true
                items:
                  - id: 0
                    sku:
                      id: 0
                      name: string
                      displayName: string
                      type: string
                      soldHours: 0
                      generalLedgerAccountId: 0
                      generalLedgerAccountName: string
                      modifiedOn: string
                    skuAccount: string
                    description: string
                    qty: 0
                    unitRate: 0
                    total: 0
                    itemGroupName: string
                    itemGroupRootId: 0
                    modifiedOn: string
                externalLinks:
                  - name: string
                    url: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/sales/v2/tenant/{tenant}/estimates/items':
    get:
      tags:
        - Estimates
      summary: Estimates_GetItems
      operationId: Estimates_GetItems
      parameters:
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
        - name: estimateId
          in: query
          description: Format - int64.
          schema:
            type: integer
            format: int64
            nullable: true
        - name: ids
          in: query
          schema:
            type: string
        - name: active
          in: query
          description: 'Values: [True, Any, False]'
          schema:
            type: string
            oneOf:
              - $ref: '#/components/schemas/ActiveQueryFilter'
            nullable: true
        - name: createdBefore
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdOnOrAfter
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
            format: date-time
            nullable: true
        - name: page
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
            nullable: true
        - name: pageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
            nullable: true
        - name: includeTotal
          in: query
          schema:
            type: boolean
            nullable: true
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_Of_Estimates.V2.EstimateItemResponse'
              example:
                page: 0
                pageSize: 0
                hasMore: true
                totalCount: 0
                data:
                  - id: 0
                    sku:
                      id: 0
                      name: string
                      displayName: string
                      type: string
                      soldHours: 0
                      generalLedgerAccountId: 0
                      generalLedgerAccountName: string
                      modifiedOn: string
                    skuAccount: string
                    description: string
                    qty: 0
                    unitRate: 0
                    total: 0
                    itemGroupName: string
                    itemGroupRootId: 0
                    modifiedOn: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/sales/v2/tenant/{tenant}/estimates/{id}/sell':
    put:
      tags:
        - Estimates
      summary: Estimates_Sell
      operationId: Estimates_Sell
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Estimates.V2.SellRequest'
            example:
              soldBy: 0
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estimates.V2.EstimateResponse'
              example:
                id: 0
                jobId: 0
                projectId: 0
                name: string
                jobNumber: string
                status:
                  value: 0
                  name: string
                summary: string
                modifiedOn: string
                soldOn: string
                soldBy: 0
                active: true
                items:
                  - id: 0
                    sku:
                      id: 0
                      name: string
                      displayName: string
                      type: string
                      soldHours: 0
                      generalLedgerAccountId: 0
                      generalLedgerAccountName: string
                      modifiedOn: string
                    skuAccount: string
                    description: string
                    qty: 0
                    unitRate: 0
                    total: 0
                    itemGroupName: string
                    itemGroupRootId: 0
                    modifiedOn: string
                externalLinks:
                  - name: string
                    url: string
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/sales/v2/tenant/{tenant}/estimates/{id}/unsell':
    put:
      tags:
        - Estimates
      summary: Estimates_Unsell
      operationId: Estimates_Unsell
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The request has succeeded
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/sales/v2/tenant/{tenant}/estimates/{id}/dismiss':
    put:
      tags:
        - Estimates
      summary: Estimates_Dismiss
      operationId: Estimates_Dismiss
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The request has succeeded
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/sales/v2/tenant/{tenant}/estimates/{id}/items':
    put:
      tags:
        - Estimates
      summary: Estimates_PutItem
      operationId: Estimates_PutItem
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Estimates.V2.EstimateItemCreateUpdateRequest'
            example:
              id: 0
              skuId: 0
              skuName: string
              parentItemId: 0
              description: string
              isAddOn: true
              quantity: 0
              unitPrice: 0
              skipUpdatingMembershipPrices: true
              itemGroupName: string
              itemGroupRootId: 0
      responses:
        '200':
          description: The request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Estimates.V2.EstimateItemUpdateResponse'
              example:
                id: 0
                sku:
                  id: 0
                  name: string
                  displayName: string
                  type: string
                  soldHours: 0
                  generalLedgerAccountId: 0
                  generalLedgerAccountName: string
                  modifiedOn: string
                skuAccount: string
                description: string
                qty: 0
                unitRate: 0
                total: 0
                itemGroupName: string
                itemGroupRootId: 0
                modifiedOn: string
                estimateId: 0
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
  '/sales/v2/tenant/{tenant}/estimates/{id}/items/{itemId}':
    delete:
      tags:
        - Estimates
      summary: Estimates_DeleteItem
      operationId: Estimates_DeleteItem
      parameters:
        - name: id
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: itemId
          in: path
          description: Format - int64.
          required: true
          schema:
            type: integer
            format: int64
        - name: tenant
          in: path
          description: Tenant ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The request has succeeded
        '400':
          description: 'The request cannot be processed, check validation errors or request format'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
              example:
                type: string
                title: string
                status: 0
                traceId: string
                errors: { }
                data: { }
components:
  schemas:
    Estimates.V2.EstimateResponse:
      required:
        - id
        - modifiedOn
        - active
      type: object
      properties:
        id:
          type: integer
          format: int64
        jobId:
          type: integer
          format: int64
          nullable: true
        projectId:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
          nullable: true
        jobNumber:
          type: string
          nullable: true
        status:
          oneOf:
            - $ref: '#/components/schemas/Estimates.V2.EstimateStatusModel'
          nullable: true
        summary:
          type: string
          nullable: true
        modifiedOn:
          type: string
          format: date-time
        soldOn:
          type: string
          format: date-time
          nullable: true
        soldBy:
          type: integer
          format: int64
          nullable: true
        active:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/Estimates.V2.EstimateItemResponse'
          nullable: true
        externalLinks:
          type: array
          items:
            $ref: '#/components/schemas/Estimates.V2.ExternalLinkResponse'
          nullable: true
      additionalProperties: false
    Estimates.V2.EstimateStatusModel:
      required:
        - value
        - name
      type: object
      properties:
        value:
          type: integer
          format: int32
        name:
          type: string
      additionalProperties: false
    Estimates.V2.EstimateItemResponse:
      required:
        - id
        - sku
        - skuAccount
        - description
        - qty
        - unitRate
        - total
        - itemGroupName
        - modifiedOn
      type: object
      properties:
        id:
          type: integer
          format: int64
        sku:
          $ref: '#/components/schemas/Estimates.V2.SkuModel'
        skuAccount:
          type: string
        description:
          type: string
        qty:
          type: number
          format: decimal
        unitRate:
          type: number
          format: decimal
        total:
          type: number
          format: decimal
        itemGroupName:
          type: string
        itemGroupRootId:
          type: integer
          format: int64
          nullable: true
        modifiedOn:
          type: string
          format: date-time
      additionalProperties: false
    Estimates.V2.SkuModel:
      required:
        - id
        - name
        - displayName
        - type
        - soldHours
        - generalLedgerAccountId
        - generalLedgerAccountName
        - modifiedOn
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        displayName:
          type: string
        type:
          type: string
        soldHours:
          type: number
          format: decimal
        generalLedgerAccountId:
          type: integer
          format: int64
        generalLedgerAccountName:
          type: string
        modifiedOn:
          type: string
          format: date-time
      additionalProperties: false
    Estimates.V2.ExternalLinkResponse:
      required:
        - name
        - url
      type: object
      properties:
        name:
          type: string
        url:
          type: string
      additionalProperties: false
    ApiErrorResponse:
      required:
        - type
        - title
        - status
        - traceId
        - errors
        - data
      type: object
      properties:
        type:
          type: string
          description: A URI reference that identifies the problem type
        title:
          type: string
          description: 'A short, human-readable summary of the problem type'
        status:
          type: integer
          description: The HTTP status code generated by server
          format: int32
        traceId:
          type: string
          description: Internal trace ID for advanced diagnostics
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: 'Provides more details about errors occurred, which can potentially be used for visual display'
        data:
          type: object
          additionalProperties: { }
          description: 'Provides additional data, intended for programmatical usage'
      additionalProperties: false
      description: 'Detailed error response, following RFC 7807 recommendations (https://tools.ietf.org/html/rfc7807).'
    PaginatedResponse_Of_Estimates.V2.EstimateResponse:
      required:
        - page
        - pageSize
        - hasMore
        - data
      type: object
      properties:
        page:
          type: integer
          description: From which page this output has started
          format: int32
        pageSize:
          type: integer
          description: Page size for this query (i.e. how many records were requested to return)
          format: int32
        hasMore:
          type: boolean
          description: True if there are more records in the query than returned in this result
        totalCount:
          type: integer
          description: Total count of records for this query (can optionally be populated)
          format: int32
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Estimates.V2.EstimateResponse'
          description: 'The collection of result items, will never have more than PageSize items'
      additionalProperties: false
      description: Represents paginated API response.
    ActiveQueryFilter:
      enum:
        - 'True'
        - Any
        - 'False'
      type: string
      description: ''
      x-enumNames:
        - 'True'
        - Any
        - 'False'
    PaginatedResponse_Of_Estimates.V2.EstimateItemResponse:
      required:
        - page
        - pageSize
        - hasMore
        - data
      type: object
      properties:
        page:
          type: integer
          description: From which page this output has started
          format: int32
        pageSize:
          type: integer
          description: Page size for this query (i.e. how many records were requested to return)
          format: int32
        hasMore:
          type: boolean
          description: True if there are more records in the query than returned in this result
        totalCount:
          type: integer
          description: Total count of records for this query (can optionally be populated)
          format: int32
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Estimates.V2.EstimateItemResponse'
          description: 'The collection of result items, will never have more than PageSize items'
      additionalProperties: false
      description: Represents paginated API response.
    Estimates.V2.CreateEstimateRequest:
      required:
        - jobId
      type: object
      properties:
        name:
          type: string
          nullable: true
        summary:
          type: string
          nullable: true
        tax:
          type: number
          format: decimal
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/Estimates.V2.EstimateItemCreateUpdateRequest'
          nullable: true
        externalLinks:
          type: array
          items:
            $ref: '#/components/schemas/Estimates.V2.ExternalLinkInModel'
          nullable: true
        jobId:
          type: integer
          format: int64
      additionalProperties: false
    Estimates.V2.EstimateItemCreateUpdateRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        skuId:
          type: integer
          format: int64
          nullable: true
        skuName:
          type: string
          nullable: true
        parentItemId:
          type: integer
          format: int64
          nullable: true
        description:
          type: string
          nullable: true
        isAddOn:
          type: boolean
          nullable: true
        quantity:
          type: number
          format: decimal
          nullable: true
        unitPrice:
          type: number
          format: decimal
          nullable: true
        skipUpdatingMembershipPrices:
          type: boolean
          nullable: true
        itemGroupName:
          type: string
          nullable: true
        itemGroupRootId:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    Estimates.V2.ExternalLinkInModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
      additionalProperties: false
    Estimates.V2.UpdateEstimateRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        summary:
          type: string
          nullable: true
        tax:
          type: number
          format: decimal
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/Estimates.V2.EstimateItemCreateUpdateRequest'
          nullable: true
        externalLinks:
          type: array
          items:
            $ref: '#/components/schemas/Estimates.V2.ExternalLinkInModel'
          nullable: true
      additionalProperties: false
    Estimates.V2.SellRequest:
      required:
        - soldBy
      type: object
      properties:
        soldBy:
          type: integer
          format: int64
      additionalProperties: false
    Estimates.V2.EstimateItemUpdateResponse:
      required:
        - id
        - sku
        - skuAccount
        - description
        - qty
        - unitRate
        - total
        - itemGroupName
        - modifiedOn
        - estimateId
      type: object
      properties:
        id:
          type: integer
          format: int64
        sku:
          $ref: '#/components/schemas/Estimates.V2.SkuModel'
        skuAccount:
          type: string
        description:
          type: string
        qty:
          type: number
          format: decimal
        unitRate:
          type: number
          format: decimal
        total:
          type: number
          format: decimal
        itemGroupName:
          type: string
        itemGroupRootId:
          type: integer
          format: int64
          nullable: true
        modifiedOn:
          type: string
          format: date-time
        estimateId:
          type: integer
          format: int64
      additionalProperties: false
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: ST-App-Key
      in: header
    apiKeyQuery:
      type: apiKey
      name: servicetitanapplicationkey
      in: query
security:
  - apiKeyHeader: [ ]
  - apiKeyQuery: [ ]