<?php
/**
 * MembershipsV2LocationRecurringServiceUpdateRequestTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Memberships
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.10.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * MembershipsV2LocationRecurringServiceUpdateRequestTest Class Doc Comment
 *
 * @category    Class
 * @description MembershipsV2LocationRecurringServiceUpdateRequest
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class MembershipsV2LocationRecurringServiceUpdateRequestTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "MembershipsV2LocationRecurringServiceUpdateRequest"
     */
    public function testMembershipsV2LocationRecurringServiceUpdateRequest()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "active"
     */
    public function testPropertyActive()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "recurring_service_type_id"
     */
    public function testPropertyRecurringServiceTypeId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "duration_type"
     */
    public function testPropertyDurationType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "duration_length"
     */
    public function testPropertyDurationLength()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "from"
     */
    public function testPropertyFrom()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "memo"
     */
    public function testPropertyMemo()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "invoice_template_id"
     */
    public function testPropertyInvoiceTemplateId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "invoice_template_for_following_years_id"
     */
    public function testPropertyInvoiceTemplateForFollowingYearsId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "business_unit_id"
     */
    public function testPropertyBusinessUnitId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "job_type_id"
     */
    public function testPropertyJobTypeId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "campaign_id"
     */
    public function testPropertyCampaignId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "priority"
     */
    public function testPropertyPriority()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "job_summary"
     */
    public function testPropertyJobSummary()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "recurrence_type"
     */
    public function testPropertyRecurrenceType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "recurrence_interval"
     */
    public function testPropertyRecurrenceInterval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "recurrence_months"
     */
    public function testPropertyRecurrenceMonths()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "recurrence_days_of_week"
     */
    public function testPropertyRecurrenceDaysOfWeek()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "recurrence_week"
     */
    public function testPropertyRecurrenceWeek()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "recurrence_day_of_nth_week"
     */
    public function testPropertyRecurrenceDayOfNthWeek()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "job_start_time"
     */
    public function testPropertyJobStartTime()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "estimated_payroll_cost"
     */
    public function testPropertyEstimatedPayrollCost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
