<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CompWright\ServiceTitan\Endpoint;

class CallsGetCalls extends \CompWright\ServiceTitan\Runtime\Client\BaseEndpoint implements \CompWright\ServiceTitan\Runtime\Client\Endpoint
{
    use \CompWright\ServiceTitan\Runtime\Client\EndpointTrait;
    protected $tenant;

    /**
     * @param int   $tenant          Tenant ID
     * @param array $queryParameters {
     *
     *     @var string $modifiedAfter format - date-time (as date-time in RFC3339)
     *     @var int $minDuration format - int32
     *     @var string $phoneNumberCalled
     *     @var int $campaignId format - int64
     *     @var int $agentId format - int64
     *     @var string $agentName
     *     @var bool $agentIsExternal
     *     @var int $agentExternalId format - int64
     *     @var string $orderBy
     *     @var string $orderByDirection
     *     @var bool $activeOnly
     *     @var string $createdAfter format - date-time (as date-time in RFC3339)
     *     @var string $createdBefore format - date-time (as date-time in RFC3339)
     *     @var array $ids
     *     @var int $page format - int32
     *     @var int $pageSize Format - int32.
     * }
     */
    public function __construct(int $tenant, array $queryParameters = [])
    {
        $this->tenant = $tenant;
        $this->queryParameters = $queryParameters;
    }

    public function getMethod(): string
    {
        return 'GET';
    }

    public function getUri(): string
    {
        return str_replace(['{tenant}'], [$this->tenant], '/telecom/v2/tenant/{tenant}/calls');
    }

    public function getBody(\Symfony\Component\Serializer\SerializerInterface $serializer, $streamFactory = null): array
    {
        return [[], null];
    }

    public function getExtraHeaders(): array
    {
        return ['Accept' => ['application/json']];
    }

    protected function getQueryOptionsResolver(): \Symfony\Component\OptionsResolver\OptionsResolver
    {
        $optionsResolver = parent::getQueryOptionsResolver();
        $optionsResolver->setDefined(['modifiedAfter', 'minDuration', 'phoneNumberCalled', 'campaignId', 'agentId', 'agentName', 'agentIsExternal', 'agentExternalId', 'orderBy', 'orderByDirection', 'activeOnly', 'createdAfter', 'createdBefore', 'ids', 'page', 'pageSize']);
        $optionsResolver->setRequired([]);
        $optionsResolver->setDefaults([]);
        $optionsResolver->setAllowedTypes('modifiedAfter', ['string', 'null']);
        $optionsResolver->setAllowedTypes('minDuration', ['int', 'null']);
        $optionsResolver->setAllowedTypes('phoneNumberCalled', ['string']);
        $optionsResolver->setAllowedTypes('campaignId', ['int', 'null']);
        $optionsResolver->setAllowedTypes('agentId', ['int', 'null']);
        $optionsResolver->setAllowedTypes('agentName', ['string']);
        $optionsResolver->setAllowedTypes('agentIsExternal', ['bool', 'null']);
        $optionsResolver->setAllowedTypes('agentExternalId', ['int', 'null']);
        $optionsResolver->setAllowedTypes('orderBy', ['string']);
        $optionsResolver->setAllowedTypes('orderByDirection', ['string']);
        $optionsResolver->setAllowedTypes('activeOnly', ['bool']);
        $optionsResolver->setAllowedTypes('createdAfter', ['string', 'null']);
        $optionsResolver->setAllowedTypes('createdBefore', ['string', 'null']);
        $optionsResolver->setAllowedTypes('ids', ['array']);
        $optionsResolver->setAllowedTypes('page', ['int', 'null']);
        $optionsResolver->setAllowedTypes('pageSize', ['int', 'null']);

        return $optionsResolver;
    }

    /**
     * {@inheritdoc}
     *
     * @return \CompWright\ServiceTitan\Model\CollectionResultOfModuleTelecomSharedBundleCallModel|null
     */
    protected function transformResponseBody(string $body, int $status, \Symfony\Component\Serializer\SerializerInterface $serializer, ?string $contentType = null)
    {
        if (is_null($contentType) === false && (200 === $status && mb_strpos($contentType, 'application/json') !== false)) {
            return $serializer->deserialize($body, 'CompWright\\ServiceTitan\\Model\\CollectionResultOfModuleTelecomSharedBundleCallModel', 'json');
        }
    }

    public function getAuthenticationScopes(): array
    {
        return ['apiKeyHeader', 'apiKeyQuery'];
    }
}
