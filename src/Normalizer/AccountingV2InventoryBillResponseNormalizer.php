<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CompWright\ServiceTitan\Normalizer;

use CompWright\ServiceTitan\Runtime\Normalizer\CheckArray;
use Jane\Component\JsonSchemaRuntime\Reference;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class AccountingV2InventoryBillResponseNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;
    use CheckArray;

    /**
     * @return bool
     */
    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'CompWright\\ServiceTitan\\Model\\AccountingV2InventoryBillResponse';
    }

    public function supportsNormalization($data, $format = null)
    {
        return is_object($data) && get_class($data) === 'CompWright\\ServiceTitan\\Model\\AccountingV2InventoryBillResponse';
    }

    /**
     * @return mixed
     */
    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (isset($data['$ref'])) {
            return new Reference($data['$ref'], $context['document-origin']);
        }
        if (isset($data['$recursiveRef'])) {
            return new Reference($data['$recursiveRef'], $context['document-origin']);
        }
        $object = new \CompWright\ServiceTitan\Model\AccountingV2InventoryBillResponse();
        if (null === $data || false === \is_array($data)) {
            return $object;
        }
        if (\array_key_exists('id', $data)) {
            $object->setId($data['id']);
        }
        if (\array_key_exists('purchaseOrderId', $data) && $data['purchaseOrderId'] !== null) {
            $object->setPurchaseOrderId($data['purchaseOrderId']);
        } elseif (\array_key_exists('purchaseOrderId', $data) && $data['purchaseOrderId'] === null) {
            $object->setPurchaseOrderId(null);
        }
        if (\array_key_exists('syncStatus', $data) && $data['syncStatus'] !== null) {
            $object->setSyncStatus($data['syncStatus']);
        } elseif (\array_key_exists('syncStatus', $data) && $data['syncStatus'] === null) {
            $object->setSyncStatus(null);
        }
        if (\array_key_exists('referenceNumber', $data) && $data['referenceNumber'] !== null) {
            $object->setReferenceNumber($data['referenceNumber']);
        } elseif (\array_key_exists('referenceNumber', $data) && $data['referenceNumber'] === null) {
            $object->setReferenceNumber(null);
        }
        if (\array_key_exists('vendorNumber', $data) && $data['vendorNumber'] !== null) {
            $object->setVendorNumber($data['vendorNumber']);
        } elseif (\array_key_exists('vendorNumber', $data) && $data['vendorNumber'] === null) {
            $object->setVendorNumber(null);
        }
        if (\array_key_exists('summary', $data) && $data['summary'] !== null) {
            $object->setSummary($data['summary']);
        } elseif (\array_key_exists('summary', $data) && $data['summary'] === null) {
            $object->setSummary(null);
        }
        if (\array_key_exists('billDate', $data) && $data['billDate'] !== null) {
            $object->setBillDate(\DateTime::createFromFormat('Y-m-d\\TH:i:sP', $data['billDate']));
        } elseif (\array_key_exists('billDate', $data) && $data['billDate'] === null) {
            $object->setBillDate(null);
        }
        if (\array_key_exists('billAmount', $data) && $data['billAmount'] !== null) {
            $object->setBillAmount($data['billAmount']);
        } elseif (\array_key_exists('billAmount', $data) && $data['billAmount'] === null) {
            $object->setBillAmount(null);
        }
        if (\array_key_exists('taxAmount', $data) && $data['taxAmount'] !== null) {
            $object->setTaxAmount($data['taxAmount']);
        } elseif (\array_key_exists('taxAmount', $data) && $data['taxAmount'] === null) {
            $object->setTaxAmount(null);
        }
        if (\array_key_exists('shippingAmount', $data) && $data['shippingAmount'] !== null) {
            $object->setShippingAmount($data['shippingAmount']);
        } elseif (\array_key_exists('shippingAmount', $data) && $data['shippingAmount'] === null) {
            $object->setShippingAmount(null);
        }
        if (\array_key_exists('createdBy', $data) && $data['createdBy'] !== null) {
            $object->setCreatedBy($data['createdBy']);
        } elseif (\array_key_exists('createdBy', $data) && $data['createdBy'] === null) {
            $object->setCreatedBy(null);
        }
        if (\array_key_exists('createdOn', $data) && $data['createdOn'] !== null) {
            $object->setCreatedOn(\DateTime::createFromFormat('Y-m-d\\TH:i:sP', $data['createdOn']));
        } elseif (\array_key_exists('createdOn', $data) && $data['createdOn'] === null) {
            $object->setCreatedOn(null);
        }
        if (\array_key_exists('termName', $data) && $data['termName'] !== null) {
            $object->setTermName($data['termName']);
        } elseif (\array_key_exists('termName', $data) && $data['termName'] === null) {
            $object->setTermName(null);
        }
        if (\array_key_exists('dueDate', $data) && $data['dueDate'] !== null) {
            $object->setDueDate(\DateTime::createFromFormat('Y-m-d\\TH:i:sP', $data['dueDate']));
        } elseif (\array_key_exists('dueDate', $data) && $data['dueDate'] === null) {
            $object->setDueDate(null);
        }
        if (\array_key_exists('shipToDescription', $data) && $data['shipToDescription'] !== null) {
            $object->setShipToDescription($data['shipToDescription']);
        } elseif (\array_key_exists('shipToDescription', $data) && $data['shipToDescription'] === null) {
            $object->setShipToDescription(null);
        }
        if (\array_key_exists('batch', $data) && $data['batch'] !== null) {
            $object->setBatch($data['batch']);
        } elseif (\array_key_exists('batch', $data) && $data['batch'] === null) {
            $object->setBatch(null);
        }
        if (\array_key_exists('businessUnit', $data) && $data['businessUnit'] !== null) {
            $object->setBusinessUnit($data['businessUnit']);
        } elseif (\array_key_exists('businessUnit', $data) && $data['businessUnit'] === null) {
            $object->setBusinessUnit(null);
        }
        if (\array_key_exists('vendor', $data) && $data['vendor'] !== null) {
            $object->setVendor($data['vendor']);
        } elseif (\array_key_exists('vendor', $data) && $data['vendor'] === null) {
            $object->setVendor(null);
        }
        if (\array_key_exists('shipTo', $data) && $data['shipTo'] !== null) {
            $object->setShipTo($data['shipTo']);
        } elseif (\array_key_exists('shipTo', $data) && $data['shipTo'] === null) {
            $object->setShipTo(null);
        }
        if (\array_key_exists('items', $data) && $data['items'] !== null) {
            $values = [];
            foreach ($data['items'] as $value) {
                $values[] = $this->denormalizer->denormalize($value, 'CompWright\\ServiceTitan\\Model\\AccountingV2InventoryBillItemResponse', 'json', $context);
            }
            $object->setItems($values);
        } elseif (\array_key_exists('items', $data) && $data['items'] === null) {
            $object->setItems(null);
        }
        if (\array_key_exists('customFields', $data) && $data['customFields'] !== null) {
            $values_1 = [];
            foreach ($data['customFields'] as $value_1) {
                $values_1[] = $this->denormalizer->denormalize($value_1, 'CompWright\\ServiceTitan\\Model\\AccountingV2CustomFieldResponse', 'json', $context);
            }
            $object->setCustomFields($values_1);
        } elseif (\array_key_exists('customFields', $data) && $data['customFields'] === null) {
            $object->setCustomFields(null);
        }
        if (\array_key_exists('jobId', $data) && $data['jobId'] !== null) {
            $object->setJobId($data['jobId']);
        } elseif (\array_key_exists('jobId', $data) && $data['jobId'] === null) {
            $object->setJobId(null);
        }
        if (\array_key_exists('jobNumber', $data) && $data['jobNumber'] !== null) {
            $object->setJobNumber($data['jobNumber']);
        } elseif (\array_key_exists('jobNumber', $data) && $data['jobNumber'] === null) {
            $object->setJobNumber(null);
        }

        return $object;
    }

    /**
     * @return array|string|int|float|bool|\ArrayObject|null
     */
    public function normalize($object, $format = null, array $context = [])
    {
        $data = [];
        $data['id'] = $object->getId();
        if (null !== $object->getPurchaseOrderId()) {
            $data['purchaseOrderId'] = $object->getPurchaseOrderId();
        }
        if (null !== $object->getSyncStatus()) {
            $data['syncStatus'] = $object->getSyncStatus();
        }
        if (null !== $object->getReferenceNumber()) {
            $data['referenceNumber'] = $object->getReferenceNumber();
        }
        if (null !== $object->getVendorNumber()) {
            $data['vendorNumber'] = $object->getVendorNumber();
        }
        if (null !== $object->getSummary()) {
            $data['summary'] = $object->getSummary();
        }
        if (null !== $object->getBillDate()) {
            $data['billDate'] = $object->getBillDate()->format('Y-m-d\\TH:i:sP');
        }
        if (null !== $object->getBillAmount()) {
            $data['billAmount'] = $object->getBillAmount();
        }
        if (null !== $object->getTaxAmount()) {
            $data['taxAmount'] = $object->getTaxAmount();
        }
        if (null !== $object->getShippingAmount()) {
            $data['shippingAmount'] = $object->getShippingAmount();
        }
        if (null !== $object->getCreatedBy()) {
            $data['createdBy'] = $object->getCreatedBy();
        }
        if (null !== $object->getCreatedOn()) {
            $data['createdOn'] = $object->getCreatedOn()->format('Y-m-d\\TH:i:sP');
        }
        if (null !== $object->getTermName()) {
            $data['termName'] = $object->getTermName();
        }
        if (null !== $object->getDueDate()) {
            $data['dueDate'] = $object->getDueDate()->format('Y-m-d\\TH:i:sP');
        }
        if (null !== $object->getShipToDescription()) {
            $data['shipToDescription'] = $object->getShipToDescription();
        }
        if (null !== $object->getBatch()) {
            $data['batch'] = $object->getBatch();
        }
        if (null !== $object->getBusinessUnit()) {
            $data['businessUnit'] = $object->getBusinessUnit();
        }
        if (null !== $object->getVendor()) {
            $data['vendor'] = $object->getVendor();
        }
        if (null !== $object->getShipTo()) {
            $data['shipTo'] = $object->getShipTo();
        }
        if (null !== $object->getItems()) {
            $values = [];
            foreach ($object->getItems() as $value) {
                $values[] = $this->normalizer->normalize($value, 'json', $context);
            }
            $data['items'] = $values;
        }
        if (null !== $object->getCustomFields()) {
            $values_1 = [];
            foreach ($object->getCustomFields() as $value_1) {
                $values_1[] = $this->normalizer->normalize($value_1, 'json', $context);
            }
            $data['customFields'] = $values_1;
        }
        if (null !== $object->getJobId()) {
            $data['jobId'] = $object->getJobId();
        }
        if (null !== $object->getJobNumber()) {
            $data['jobNumber'] = $object->getJobNumber();
        }

        return $data;
    }
}
