<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CompWright\ServiceTitan\Normalizer;

use CompWright\ServiceTitan\Runtime\Normalizer\CheckArray;
use Jane\Component\JsonSchemaRuntime\Reference;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class AccountingV2PaymentTermPenaltyAPIModelNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;
    use CheckArray;

    /**
     * @return bool
     */
    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'CompWright\\ServiceTitan\\Model\\AccountingV2PaymentTermPenaltyAPIModel';
    }

    public function supportsNormalization($data, $format = null)
    {
        return is_object($data) && get_class($data) === 'CompWright\\ServiceTitan\\Model\\AccountingV2PaymentTermPenaltyAPIModel';
    }

    /**
     * @return mixed
     */
    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (isset($data['$ref'])) {
            return new Reference($data['$ref'], $context['document-origin']);
        }
        if (isset($data['$recursiveRef'])) {
            return new Reference($data['$recursiveRef'], $context['document-origin']);
        }
        $object = new \CompWright\ServiceTitan\Model\AccountingV2PaymentTermPenaltyAPIModel();
        if (null === $data || false === \is_array($data)) {
            return $object;
        }
        if (\array_key_exists('id', $data) && $data['id'] !== null) {
            $object->setId($data['id']);
        } elseif (\array_key_exists('id', $data) && $data['id'] === null) {
            $object->setId(null);
        }
        if (\array_key_exists('penaltyApplyTo', $data) && $data['penaltyApplyTo'] !== null) {
            $object->setPenaltyApplyTo($data['penaltyApplyTo']);
        } elseif (\array_key_exists('penaltyApplyTo', $data) && $data['penaltyApplyTo'] === null) {
            $object->setPenaltyApplyTo(null);
        }
        if (\array_key_exists('penalty', $data) && $data['penalty'] !== null) {
            $object->setPenalty($data['penalty']);
        } elseif (\array_key_exists('penalty', $data) && $data['penalty'] === null) {
            $object->setPenalty(null);
        }
        if (\array_key_exists('penaltyType', $data) && $data['penaltyType'] !== null) {
            $object->setPenaltyType($data['penaltyType']);
        } elseif (\array_key_exists('penaltyType', $data) && $data['penaltyType'] === null) {
            $object->setPenaltyType(null);
        }
        if (\array_key_exists('maxPenaltyAmount', $data) && $data['maxPenaltyAmount'] !== null) {
            $object->setMaxPenaltyAmount($data['maxPenaltyAmount']);
        } elseif (\array_key_exists('maxPenaltyAmount', $data) && $data['maxPenaltyAmount'] === null) {
            $object->setMaxPenaltyAmount(null);
        }
        if (\array_key_exists('penaltyFrequency', $data) && $data['penaltyFrequency'] !== null) {
            $object->setPenaltyFrequency($data['penaltyFrequency']);
        } elseif (\array_key_exists('penaltyFrequency', $data) && $data['penaltyFrequency'] === null) {
            $object->setPenaltyFrequency(null);
        }
        if (\array_key_exists('serviceTaskId', $data) && $data['serviceTaskId'] !== null) {
            $object->setServiceTaskId($data['serviceTaskId']);
        } elseif (\array_key_exists('serviceTaskId', $data) && $data['serviceTaskId'] === null) {
            $object->setServiceTaskId(null);
        }

        return $object;
    }

    /**
     * @return array|string|int|float|bool|\ArrayObject|null
     */
    public function normalize($object, $format = null, array $context = [])
    {
        $data = [];
        if (null !== $object->getId()) {
            $data['id'] = $object->getId();
        }
        if (null !== $object->getPenaltyApplyTo()) {
            $data['penaltyApplyTo'] = $object->getPenaltyApplyTo();
        }
        if (null !== $object->getPenalty()) {
            $data['penalty'] = $object->getPenalty();
        }
        if (null !== $object->getPenaltyType()) {
            $data['penaltyType'] = $object->getPenaltyType();
        }
        if (null !== $object->getMaxPenaltyAmount()) {
            $data['maxPenaltyAmount'] = $object->getMaxPenaltyAmount();
        }
        if (null !== $object->getPenaltyFrequency()) {
            $data['penaltyFrequency'] = $object->getPenaltyFrequency();
        }
        if (null !== $object->getServiceTaskId()) {
            $data['serviceTaskId'] = $object->getServiceTaskId();
        }

        return $data;
    }
}
