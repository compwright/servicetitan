<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CompWright\ServiceTitan\Normalizer;

use CompWright\ServiceTitan\Runtime\Normalizer\CheckArray;
use CompWright\ServiceTitan\Runtime\Normalizer\ValidatorTrait;
use Jane\Component\JsonSchemaRuntime\Reference;
use Symfony\Component\HttpKernel\Kernel;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

if (!class_exists(Kernel::class) or (Kernel::MAJOR_VERSION >= 7 or Kernel::MAJOR_VERSION === 6 and Kernel::MINOR_VERSION === 4)) {
    class DispatchV2NonJobAppointmentUpdateRequestNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
    {
        use DenormalizerAwareTrait;
        use NormalizerAwareTrait;
        use CheckArray;
        use ValidatorTrait;

        public function supportsDenormalization(mixed $data, string $type, ?string $format = null, array $context = []): bool
        {
            return $type === \CompWright\ServiceTitan\Model\DispatchV2NonJobAppointmentUpdateRequest::class;
        }

        public function supportsNormalization(mixed $data, ?string $format = null, array $context = []): bool
        {
            return is_object($data) && get_class($data) === \CompWright\ServiceTitan\Model\DispatchV2NonJobAppointmentUpdateRequest::class;
        }

        public function denormalize(mixed $data, string $type, ?string $format = null, array $context = []): mixed
        {
            if (isset($data['$ref'])) {
                return new Reference($data['$ref'], $context['document-origin']);
            }
            if (isset($data['$recursiveRef'])) {
                return new Reference($data['$recursiveRef'], $context['document-origin']);
            }
            $object = new \CompWright\ServiceTitan\Model\DispatchV2NonJobAppointmentUpdateRequest();
            if (null === $data || false === \is_array($data)) {
                return $object;
            }
            if (\array_key_exists('technicianId', $data)) {
                $object->setTechnicianId($data['technicianId']);
            }
            if (\array_key_exists('start', $data)) {
                $object->setStart(\DateTime::createFromFormat('Y-m-d\TH:i:sP', $data['start']));
            }
            if (\array_key_exists('duration', $data)) {
                $object->setDuration($data['duration']);
            }
            if (\array_key_exists('name', $data)) {
                $object->setName($data['name']);
            }
            if (\array_key_exists('timesheetCodeId', $data)) {
                $object->setTimesheetCodeId($data['timesheetCodeId']);
            }
            if (\array_key_exists('summary', $data) && $data['summary'] !== null) {
                $object->setSummary($data['summary']);
            } elseif (\array_key_exists('summary', $data) && $data['summary'] === null) {
                $object->setSummary(null);
            }
            if (\array_key_exists('clearDispatchBoard', $data) && $data['clearDispatchBoard'] !== null) {
                $object->setClearDispatchBoard($data['clearDispatchBoard']);
            } elseif (\array_key_exists('clearDispatchBoard', $data) && $data['clearDispatchBoard'] === null) {
                $object->setClearDispatchBoard(null);
            }
            if (\array_key_exists('clearTechnicianView', $data) && $data['clearTechnicianView'] !== null) {
                $object->setClearTechnicianView($data['clearTechnicianView']);
            } elseif (\array_key_exists('clearTechnicianView', $data) && $data['clearTechnicianView'] === null) {
                $object->setClearTechnicianView(null);
            }
            if (\array_key_exists('removeTechnicianFromCapacityPlanning', $data) && $data['removeTechnicianFromCapacityPlanning'] !== null) {
                $object->setRemoveTechnicianFromCapacityPlanning($data['removeTechnicianFromCapacityPlanning']);
            } elseif (\array_key_exists('removeTechnicianFromCapacityPlanning', $data) && $data['removeTechnicianFromCapacityPlanning'] === null) {
                $object->setRemoveTechnicianFromCapacityPlanning(null);
            }

            return $object;
        }

        public function normalize(mixed $object, ?string $format = null, array $context = []): array|string|int|float|bool|\ArrayObject|null
        {
            $data = [];
            $data['technicianId'] = $object->getTechnicianId();
            $data['start'] = $object->getStart()?->format('Y-m-d\TH:i:sP');
            $data['duration'] = $object->getDuration();
            $data['name'] = $object->getName();
            $data['timesheetCodeId'] = $object->getTimesheetCodeId();
            if ($object->isInitialized('summary') && null !== $object->getSummary()) {
                $data['summary'] = $object->getSummary();
            }
            if ($object->isInitialized('clearDispatchBoard') && null !== $object->getClearDispatchBoard()) {
                $data['clearDispatchBoard'] = $object->getClearDispatchBoard();
            }
            if ($object->isInitialized('clearTechnicianView') && null !== $object->getClearTechnicianView()) {
                $data['clearTechnicianView'] = $object->getClearTechnicianView();
            }
            if ($object->isInitialized('removeTechnicianFromCapacityPlanning') && null !== $object->getRemoveTechnicianFromCapacityPlanning()) {
                $data['removeTechnicianFromCapacityPlanning'] = $object->getRemoveTechnicianFromCapacityPlanning();
            }

            return $data;
        }

        public function getSupportedTypes(?string $format = null): array
        {
            return [\CompWright\ServiceTitan\Model\DispatchV2NonJobAppointmentUpdateRequest::class => false];
        }
    }
} else {
    class DispatchV2NonJobAppointmentUpdateRequestNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
    {
        use DenormalizerAwareTrait;
        use NormalizerAwareTrait;
        use CheckArray;
        use ValidatorTrait;

        public function supportsDenormalization($data, $type, ?string $format = null, array $context = []): bool
        {
            return $type === \CompWright\ServiceTitan\Model\DispatchV2NonJobAppointmentUpdateRequest::class;
        }

        public function supportsNormalization(mixed $data, ?string $format = null, array $context = []): bool
        {
            return is_object($data) && get_class($data) === \CompWright\ServiceTitan\Model\DispatchV2NonJobAppointmentUpdateRequest::class;
        }

        public function denormalize($data, $type, $format = null, array $context = [])
        {
            if (isset($data['$ref'])) {
                return new Reference($data['$ref'], $context['document-origin']);
            }
            if (isset($data['$recursiveRef'])) {
                return new Reference($data['$recursiveRef'], $context['document-origin']);
            }
            $object = new \CompWright\ServiceTitan\Model\DispatchV2NonJobAppointmentUpdateRequest();
            if (null === $data || false === \is_array($data)) {
                return $object;
            }
            if (\array_key_exists('technicianId', $data)) {
                $object->setTechnicianId($data['technicianId']);
            }
            if (\array_key_exists('start', $data)) {
                $object->setStart(\DateTime::createFromFormat('Y-m-d\TH:i:sP', $data['start']));
            }
            if (\array_key_exists('duration', $data)) {
                $object->setDuration($data['duration']);
            }
            if (\array_key_exists('name', $data)) {
                $object->setName($data['name']);
            }
            if (\array_key_exists('timesheetCodeId', $data)) {
                $object->setTimesheetCodeId($data['timesheetCodeId']);
            }
            if (\array_key_exists('summary', $data) && $data['summary'] !== null) {
                $object->setSummary($data['summary']);
            } elseif (\array_key_exists('summary', $data) && $data['summary'] === null) {
                $object->setSummary(null);
            }
            if (\array_key_exists('clearDispatchBoard', $data) && $data['clearDispatchBoard'] !== null) {
                $object->setClearDispatchBoard($data['clearDispatchBoard']);
            } elseif (\array_key_exists('clearDispatchBoard', $data) && $data['clearDispatchBoard'] === null) {
                $object->setClearDispatchBoard(null);
            }
            if (\array_key_exists('clearTechnicianView', $data) && $data['clearTechnicianView'] !== null) {
                $object->setClearTechnicianView($data['clearTechnicianView']);
            } elseif (\array_key_exists('clearTechnicianView', $data) && $data['clearTechnicianView'] === null) {
                $object->setClearTechnicianView(null);
            }
            if (\array_key_exists('removeTechnicianFromCapacityPlanning', $data) && $data['removeTechnicianFromCapacityPlanning'] !== null) {
                $object->setRemoveTechnicianFromCapacityPlanning($data['removeTechnicianFromCapacityPlanning']);
            } elseif (\array_key_exists('removeTechnicianFromCapacityPlanning', $data) && $data['removeTechnicianFromCapacityPlanning'] === null) {
                $object->setRemoveTechnicianFromCapacityPlanning(null);
            }

            return $object;
        }

        /**
         * @return array|string|int|float|bool|\ArrayObject|null
         */
        public function normalize($object, $format = null, array $context = [])
        {
            $data = [];
            $data['technicianId'] = $object->getTechnicianId();
            $data['start'] = $object->getStart()?->format('Y-m-d\TH:i:sP');
            $data['duration'] = $object->getDuration();
            $data['name'] = $object->getName();
            $data['timesheetCodeId'] = $object->getTimesheetCodeId();
            if ($object->isInitialized('summary') && null !== $object->getSummary()) {
                $data['summary'] = $object->getSummary();
            }
            if ($object->isInitialized('clearDispatchBoard') && null !== $object->getClearDispatchBoard()) {
                $data['clearDispatchBoard'] = $object->getClearDispatchBoard();
            }
            if ($object->isInitialized('clearTechnicianView') && null !== $object->getClearTechnicianView()) {
                $data['clearTechnicianView'] = $object->getClearTechnicianView();
            }
            if ($object->isInitialized('removeTechnicianFromCapacityPlanning') && null !== $object->getRemoveTechnicianFromCapacityPlanning()) {
                $data['removeTechnicianFromCapacityPlanning'] = $object->getRemoveTechnicianFromCapacityPlanning();
            }

            return $data;
        }

        public function getSupportedTypes(?string $format = null): array
        {
            return [\CompWright\ServiceTitan\Model\DispatchV2NonJobAppointmentUpdateRequest::class => false];
        }
    }
}
