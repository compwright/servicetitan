<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CompWright\ServiceTitan\Normalizer;

use CompWright\ServiceTitan\Runtime\Normalizer\CheckArray;
use CompWright\ServiceTitan\Runtime\Normalizer\ValidatorTrait;
use Symfony\Component\HttpKernel\Kernel;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

if (!class_exists(Kernel::class) or (Kernel::MAJOR_VERSION >= 7 or Kernel::MAJOR_VERSION === 6 and Kernel::MINOR_VERSION === 4)) {
    class JaneObjectNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
    {
        use DenormalizerAwareTrait;
        use NormalizerAwareTrait;
        use CheckArray;
        use ValidatorTrait;
        protected $normalizers = [
            \CompWright\ServiceTitan\Model\ModuleTelecomSharedDetailedBundleCallModel::class => ModuleTelecomSharedDetailedBundleCallModelNormalizer::class,

            \CompWright\ServiceTitan\Model\ModuleAdminSharedBusinessUnitModel::class => ModuleAdminSharedBusinessUnitModelNormalizer::class,

            \CompWright\ServiceTitan\Model\ModuleAdminSharedBusinessUnitAddressModel::class => ModuleAdminSharedBusinessUnitAddressModelNormalizer::class,

            \CompWright\ServiceTitan\Model\ModuleAdminSharedBusinessUnitTenantModel::class => ModuleAdminSharedBusinessUnitTenantModelNormalizer::class,

            \CompWright\ServiceTitan\Model\JobTypeModel::class => JobTypeModelNormalizer::class,

            \CompWright\ServiceTitan\Model\ModuleTelecomSharedDetailedCallModel::class => ModuleTelecomSharedDetailedCallModelNormalizer::class,

            \CompWright\ServiceTitan\Model\ModuleTelecomSharedCallReasonModel::class => ModuleTelecomSharedCallReasonModelNormalizer::class,

            \CompWright\ServiceTitan\Model\ServicesNamedModel::class => ServicesNamedModelNormalizer::class,

            \CompWright\ServiceTitan\Model\CrmContractsCustomersCustomerModel::class => CrmContractsCustomersCustomerModelNormalizer::class,

            \CompWright\ServiceTitan\Model\AddressOutput::class => AddressOutputNormalizer::class,

            \CompWright\ServiceTitan\Model\ContactsContractsContactOutputModel::class => ContactsContractsContactOutputModelNormalizer::class,

            \CompWright\ServiceTitan\Model\MembershipsMembershipModel::class => MembershipsMembershipModelNormalizer::class,

            \CompWright\ServiceTitan\Model\MembershipsMembershipTypeModel::class => MembershipsMembershipTypeModelNormalizer::class,

            \CompWright\ServiceTitan\Model\CustomFieldApiModel::class => CustomFieldApiModelNormalizer::class,

            \CompWright\ServiceTitan\Model\CrmContractsCustomersCustomerPhoneModel::class => CrmContractsCustomersCustomerPhoneModelNormalizer::class,

            \CompWright\ServiceTitan\Model\MarketingCoreCampaignModel::class => MarketingCoreCampaignModelNormalizer::class,

            \CompWright\ServiceTitan\Model\MarketingCoreCampaignCategoryModel::class => MarketingCoreCampaignCategoryModelNormalizer::class,

            \CompWright\ServiceTitan\Model\ModuleTelecomSharedCallAgentModel::class => ModuleTelecomSharedCallAgentModelNormalizer::class,

            \CompWright\ServiceTitan\Model\CollectionResultOfModuleTelecomSharedBundleCallModel::class => CollectionResultOfModuleTelecomSharedBundleCallModelNormalizer::class,

            \CompWright\ServiceTitan\Model\ModuleTelecomSharedBundleCallModel::class => ModuleTelecomSharedBundleCallModelNormalizer::class,

            \CompWright\ServiceTitan\Model\ModuleTelecomSharedCallModel::class => ModuleTelecomSharedCallModelNormalizer::class,

            \CompWright\ServiceTitan\Model\ModuleTelecomSharedCallInUpdateModelV2::class => ModuleTelecomSharedCallInUpdateModelV2Normalizer::class,

            \CompWright\ServiceTitan\Model\ModuleTelecomSharedReasonInModel::class => ModuleTelecomSharedReasonInModelNormalizer::class,

            \CompWright\ServiceTitan\Model\CustomerInModel::class => CustomerInModelNormalizer::class,

            \CompWright\ServiceTitan\Model\AddressInput::class => AddressInputNormalizer::class,

            \CompWright\ServiceTitan\Model\ContactsContractsContactInputModel::class => ContactsContractsContactInputModelNormalizer::class,

            \CompWright\ServiceTitan\Model\LocationInModel::class => LocationInModelNormalizer::class,

            \Jane\Component\JsonSchemaRuntime\Reference::class => \CompWright\ServiceTitan\Runtime\Normalizer\ReferenceNormalizer::class,
        ];
        protected $normalizersCache = [];

        public function supportsDenormalization($data, $type, $format = null, array $context = []): bool
        {
            return array_key_exists($type, $this->normalizers);
        }

        public function supportsNormalization($data, $format = null, array $context = []): bool
        {
            return is_object($data) && array_key_exists(get_class($data), $this->normalizers);
        }

        public function normalize(mixed $object, ?string $format = null, array $context = []): array|string|int|float|bool|\ArrayObject|null
        {
            $normalizerClass = $this->normalizers[get_class($object)];
            $normalizer = $this->getNormalizer($normalizerClass);

            return $normalizer->normalize($object, $format, $context);
        }

        public function denormalize(mixed $data, string $type, ?string $format = null, array $context = []): mixed
        {
            $denormalizerClass = $this->normalizers[$type];
            $denormalizer = $this->getNormalizer($denormalizerClass);

            return $denormalizer->denormalize($data, $type, $format, $context);
        }

        private function getNormalizer(string $normalizerClass)
        {
            return $this->normalizersCache[$normalizerClass] ?? $this->initNormalizer($normalizerClass);
        }

        private function initNormalizer(string $normalizerClass)
        {
            $normalizer = new $normalizerClass();
            $normalizer->setNormalizer($this->normalizer);
            $normalizer->setDenormalizer($this->denormalizer);
            $this->normalizersCache[$normalizerClass] = $normalizer;

            return $normalizer;
        }

        public function getSupportedTypes(?string $format = null): array
        {
            return [
                \CompWright\ServiceTitan\Model\ModuleTelecomSharedDetailedBundleCallModel::class => false,
                \CompWright\ServiceTitan\Model\ModuleAdminSharedBusinessUnitModel::class => false,
                \CompWright\ServiceTitan\Model\ModuleAdminSharedBusinessUnitAddressModel::class => false,
                \CompWright\ServiceTitan\Model\ModuleAdminSharedBusinessUnitTenantModel::class => false,
                \CompWright\ServiceTitan\Model\JobTypeModel::class => false,
                \CompWright\ServiceTitan\Model\ModuleTelecomSharedDetailedCallModel::class => false,
                \CompWright\ServiceTitan\Model\ModuleTelecomSharedCallReasonModel::class => false,
                \CompWright\ServiceTitan\Model\ServicesNamedModel::class => false,
                \CompWright\ServiceTitan\Model\CrmContractsCustomersCustomerModel::class => false,
                \CompWright\ServiceTitan\Model\AddressOutput::class => false,
                \CompWright\ServiceTitan\Model\ContactsContractsContactOutputModel::class => false,
                \CompWright\ServiceTitan\Model\MembershipsMembershipModel::class => false,
                \CompWright\ServiceTitan\Model\MembershipsMembershipTypeModel::class => false,
                \CompWright\ServiceTitan\Model\CustomFieldApiModel::class => false,
                \CompWright\ServiceTitan\Model\CrmContractsCustomersCustomerPhoneModel::class => false,
                \CompWright\ServiceTitan\Model\MarketingCoreCampaignModel::class => false,
                \CompWright\ServiceTitan\Model\MarketingCoreCampaignCategoryModel::class => false,
                \CompWright\ServiceTitan\Model\ModuleTelecomSharedCallAgentModel::class => false,
                \CompWright\ServiceTitan\Model\CollectionResultOfModuleTelecomSharedBundleCallModel::class => false,
                \CompWright\ServiceTitan\Model\ModuleTelecomSharedBundleCallModel::class => false,
                \CompWright\ServiceTitan\Model\ModuleTelecomSharedCallModel::class => false,
                \CompWright\ServiceTitan\Model\ModuleTelecomSharedCallInUpdateModelV2::class => false,
                \CompWright\ServiceTitan\Model\ModuleTelecomSharedReasonInModel::class => false,
                \CompWright\ServiceTitan\Model\CustomerInModel::class => false,
                \CompWright\ServiceTitan\Model\AddressInput::class => false,
                \CompWright\ServiceTitan\Model\ContactsContractsContactInputModel::class => false,
                \CompWright\ServiceTitan\Model\LocationInModel::class => false,
                \Jane\Component\JsonSchemaRuntime\Reference::class => false,
            ];
        }
    }
} else {
    class JaneObjectNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
    {
        use DenormalizerAwareTrait;
        use NormalizerAwareTrait;
        use CheckArray;
        use ValidatorTrait;
        protected $normalizers = [
            \CompWright\ServiceTitan\Model\ModuleTelecomSharedDetailedBundleCallModel::class => ModuleTelecomSharedDetailedBundleCallModelNormalizer::class,

            \CompWright\ServiceTitan\Model\ModuleAdminSharedBusinessUnitModel::class => ModuleAdminSharedBusinessUnitModelNormalizer::class,

            \CompWright\ServiceTitan\Model\ModuleAdminSharedBusinessUnitAddressModel::class => ModuleAdminSharedBusinessUnitAddressModelNormalizer::class,

            \CompWright\ServiceTitan\Model\ModuleAdminSharedBusinessUnitTenantModel::class => ModuleAdminSharedBusinessUnitTenantModelNormalizer::class,

            \CompWright\ServiceTitan\Model\JobTypeModel::class => JobTypeModelNormalizer::class,

            \CompWright\ServiceTitan\Model\ModuleTelecomSharedDetailedCallModel::class => ModuleTelecomSharedDetailedCallModelNormalizer::class,

            \CompWright\ServiceTitan\Model\ModuleTelecomSharedCallReasonModel::class => ModuleTelecomSharedCallReasonModelNormalizer::class,

            \CompWright\ServiceTitan\Model\ServicesNamedModel::class => ServicesNamedModelNormalizer::class,

            \CompWright\ServiceTitan\Model\CrmContractsCustomersCustomerModel::class => CrmContractsCustomersCustomerModelNormalizer::class,

            \CompWright\ServiceTitan\Model\AddressOutput::class => AddressOutputNormalizer::class,

            \CompWright\ServiceTitan\Model\ContactsContractsContactOutputModel::class => ContactsContractsContactOutputModelNormalizer::class,

            \CompWright\ServiceTitan\Model\MembershipsMembershipModel::class => MembershipsMembershipModelNormalizer::class,

            \CompWright\ServiceTitan\Model\MembershipsMembershipTypeModel::class => MembershipsMembershipTypeModelNormalizer::class,

            \CompWright\ServiceTitan\Model\CustomFieldApiModel::class => CustomFieldApiModelNormalizer::class,

            \CompWright\ServiceTitan\Model\CrmContractsCustomersCustomerPhoneModel::class => CrmContractsCustomersCustomerPhoneModelNormalizer::class,

            \CompWright\ServiceTitan\Model\MarketingCoreCampaignModel::class => MarketingCoreCampaignModelNormalizer::class,

            \CompWright\ServiceTitan\Model\MarketingCoreCampaignCategoryModel::class => MarketingCoreCampaignCategoryModelNormalizer::class,

            \CompWright\ServiceTitan\Model\ModuleTelecomSharedCallAgentModel::class => ModuleTelecomSharedCallAgentModelNormalizer::class,

            \CompWright\ServiceTitan\Model\CollectionResultOfModuleTelecomSharedBundleCallModel::class => CollectionResultOfModuleTelecomSharedBundleCallModelNormalizer::class,

            \CompWright\ServiceTitan\Model\ModuleTelecomSharedBundleCallModel::class => ModuleTelecomSharedBundleCallModelNormalizer::class,

            \CompWright\ServiceTitan\Model\ModuleTelecomSharedCallModel::class => ModuleTelecomSharedCallModelNormalizer::class,

            \CompWright\ServiceTitan\Model\ModuleTelecomSharedCallInUpdateModelV2::class => ModuleTelecomSharedCallInUpdateModelV2Normalizer::class,

            \CompWright\ServiceTitan\Model\ModuleTelecomSharedReasonInModel::class => ModuleTelecomSharedReasonInModelNormalizer::class,

            \CompWright\ServiceTitan\Model\CustomerInModel::class => CustomerInModelNormalizer::class,

            \CompWright\ServiceTitan\Model\AddressInput::class => AddressInputNormalizer::class,

            \CompWright\ServiceTitan\Model\ContactsContractsContactInputModel::class => ContactsContractsContactInputModelNormalizer::class,

            \CompWright\ServiceTitan\Model\LocationInModel::class => LocationInModelNormalizer::class,

            \Jane\Component\JsonSchemaRuntime\Reference::class => \CompWright\ServiceTitan\Runtime\Normalizer\ReferenceNormalizer::class,
        ];
        protected $normalizersCache = [];

        public function supportsDenormalization($data, $type, $format = null, array $context = []): bool
        {
            return array_key_exists($type, $this->normalizers);
        }

        public function supportsNormalization($data, $format = null, array $context = []): bool
        {
            return is_object($data) && array_key_exists(get_class($data), $this->normalizers);
        }

        /**
         * @return array|string|int|float|bool|\ArrayObject|null
         */
        public function normalize($object, $format = null, array $context = [])
        {
            $normalizerClass = $this->normalizers[get_class($object)];
            $normalizer = $this->getNormalizer($normalizerClass);

            return $normalizer->normalize($object, $format, $context);
        }

        public function denormalize($data, $type, $format = null, array $context = [])
        {
            $denormalizerClass = $this->normalizers[$type];
            $denormalizer = $this->getNormalizer($denormalizerClass);

            return $denormalizer->denormalize($data, $type, $format, $context);
        }

        private function getNormalizer(string $normalizerClass)
        {
            return $this->normalizersCache[$normalizerClass] ?? $this->initNormalizer($normalizerClass);
        }

        private function initNormalizer(string $normalizerClass)
        {
            $normalizer = new $normalizerClass();
            $normalizer->setNormalizer($this->normalizer);
            $normalizer->setDenormalizer($this->denormalizer);
            $this->normalizersCache[$normalizerClass] = $normalizer;

            return $normalizer;
        }

        public function getSupportedTypes(?string $format = null): array
        {
            return [
                \CompWright\ServiceTitan\Model\ModuleTelecomSharedDetailedBundleCallModel::class => false,
                \CompWright\ServiceTitan\Model\ModuleAdminSharedBusinessUnitModel::class => false,
                \CompWright\ServiceTitan\Model\ModuleAdminSharedBusinessUnitAddressModel::class => false,
                \CompWright\ServiceTitan\Model\ModuleAdminSharedBusinessUnitTenantModel::class => false,
                \CompWright\ServiceTitan\Model\JobTypeModel::class => false,
                \CompWright\ServiceTitan\Model\ModuleTelecomSharedDetailedCallModel::class => false,
                \CompWright\ServiceTitan\Model\ModuleTelecomSharedCallReasonModel::class => false,
                \CompWright\ServiceTitan\Model\ServicesNamedModel::class => false,
                \CompWright\ServiceTitan\Model\CrmContractsCustomersCustomerModel::class => false,
                \CompWright\ServiceTitan\Model\AddressOutput::class => false,
                \CompWright\ServiceTitan\Model\ContactsContractsContactOutputModel::class => false,
                \CompWright\ServiceTitan\Model\MembershipsMembershipModel::class => false,
                \CompWright\ServiceTitan\Model\MembershipsMembershipTypeModel::class => false,
                \CompWright\ServiceTitan\Model\CustomFieldApiModel::class => false,
                \CompWright\ServiceTitan\Model\CrmContractsCustomersCustomerPhoneModel::class => false,
                \CompWright\ServiceTitan\Model\MarketingCoreCampaignModel::class => false,
                \CompWright\ServiceTitan\Model\MarketingCoreCampaignCategoryModel::class => false,
                \CompWright\ServiceTitan\Model\ModuleTelecomSharedCallAgentModel::class => false,
                \CompWright\ServiceTitan\Model\CollectionResultOfModuleTelecomSharedBundleCallModel::class => false,
                \CompWright\ServiceTitan\Model\ModuleTelecomSharedBundleCallModel::class => false,
                \CompWright\ServiceTitan\Model\ModuleTelecomSharedCallModel::class => false,
                \CompWright\ServiceTitan\Model\ModuleTelecomSharedCallInUpdateModelV2::class => false,
                \CompWright\ServiceTitan\Model\ModuleTelecomSharedReasonInModel::class => false,
                \CompWright\ServiceTitan\Model\CustomerInModel::class => false,
                \CompWright\ServiceTitan\Model\AddressInput::class => false,
                \CompWright\ServiceTitan\Model\ContactsContractsContactInputModel::class => false,
                \CompWright\ServiceTitan\Model\LocationInModel::class => false,
                \Jane\Component\JsonSchemaRuntime\Reference::class => false,
            ];
        }
    }
}
