<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CompWright\ServiceTitan\Model;

class PricebookV2ServiceBulkCreateRequest
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Array of materials linked to the service.
     *
     * @var list<PricebookV2SkuLinkBulkCreateRequest>|null
     */
    protected $serviceMaterials;
    /**
     * Array of equipment linked to the service.
     *
     * @var list<PricebookV2SkuLinkBulkCreateRequest>|null
     */
    protected $serviceEquipment;
    /**
     * Recommended services and materials to include with this SKU.
     *
     * @var list<PricebookV2ServiceRecommendationBulkCreateRequest>|null
     */
    protected $recommendations;
    /**
     * Upgrades that can be sold for this SKU.
     *
     * @var list<PricebookV2SkuUpgradeBulkCreateRequest>|null
     */
    protected $upgrades;
    /**
     * Code for the SKU.
     *
     * @var string
     */
    protected $code;
    /**
     * Name that displays with the SKU.
     *
     * @var string|null
     */
    protected $displayName;
    /**
     * Description on the SKU that is displayed with the item.
     *
     * @var string
     */
    protected $description;
    /**
     * Description of the warranty included in this SKU.
     *
     * @var mixed|null
     */
    protected $warranty;
    /**
     * Categories that this SKU belongs to.
     *
     * @var list<int>|null
     */
    protected $categories;
    /**
     * Price of this SKU sold.
     *
     * @var float|null
     */
    protected $price;
    /**
     * The price if the item is sold to a member.
     *
     * @var float|null
     */
    protected $memberPrice;
    /**
     * The price of the SKU is sold as an add-on item.
     *
     * @var float|null
     */
    protected $addOnPrice;
    /**
     * The price if the SKU is sold to a member as an add-on item.
     *
     * @var float|null
     */
    protected $addOnMemberPrice;
    /**
     * Is this SKU taxable.
     *
     * @var bool|null
     */
    protected $taxable;
    /**
     * The accounting account assigned to this SKU.
     *
     * @var string|null
     */
    protected $account;
    /**
     * Hours needed to complete this service.
     *
     * @var float|null
     */
    protected $hours;
    /**
     * Is a labor service.
     *
     * @var bool|null
     */
    protected $isLabor;
    /**
     * Images, videos or PDFs attached to SKU.
     *
     * @var list<PricebookV2SkuAssetRequest>|null
     */
    protected $assets;
    /**
     * Active shows if the SKU is active or inactive.
     *
     * @var bool|null
     */
    protected $active;
    /**
     * A grouping of similar items that you'll then be able to track as a separate columns on the Technical Performance Board.
     *
     * @var string|null
     */
    protected $crossSaleGroup;
    /**
     * True if this task pays commission.
     *
     * @var bool|null
     */
    protected $paysCommission;
    /**
     * Flat rate bonus paid for this task.
     *
     * @var float|null
     */
    protected $commissionBonus;
    /**
     * Optional model that contains a list of external data items
     * that should be attached to this entity.
     *
     * @var mixed|null
     */
    protected $externalData;
    /**
     * @var string|null
     */
    protected $customId;

    /**
     * Array of materials linked to the service.
     *
     * @return list<PricebookV2SkuLinkBulkCreateRequest>|null
     */
    public function getServiceMaterials(): ?array
    {
        return $this->serviceMaterials;
    }

    /**
     * Array of materials linked to the service.
     *
     * @param list<PricebookV2SkuLinkBulkCreateRequest>|null $serviceMaterials
     */
    public function setServiceMaterials(?array $serviceMaterials): self
    {
        $this->initialized['serviceMaterials'] = true;
        $this->serviceMaterials = $serviceMaterials;

        return $this;
    }

    /**
     * Array of equipment linked to the service.
     *
     * @return list<PricebookV2SkuLinkBulkCreateRequest>|null
     */
    public function getServiceEquipment(): ?array
    {
        return $this->serviceEquipment;
    }

    /**
     * Array of equipment linked to the service.
     *
     * @param list<PricebookV2SkuLinkBulkCreateRequest>|null $serviceEquipment
     */
    public function setServiceEquipment(?array $serviceEquipment): self
    {
        $this->initialized['serviceEquipment'] = true;
        $this->serviceEquipment = $serviceEquipment;

        return $this;
    }

    /**
     * Recommended services and materials to include with this SKU.
     *
     * @return list<PricebookV2ServiceRecommendationBulkCreateRequest>|null
     */
    public function getRecommendations(): ?array
    {
        return $this->recommendations;
    }

    /**
     * Recommended services and materials to include with this SKU.
     *
     * @param list<PricebookV2ServiceRecommendationBulkCreateRequest>|null $recommendations
     */
    public function setRecommendations(?array $recommendations): self
    {
        $this->initialized['recommendations'] = true;
        $this->recommendations = $recommendations;

        return $this;
    }

    /**
     * Upgrades that can be sold for this SKU.
     *
     * @return list<PricebookV2SkuUpgradeBulkCreateRequest>|null
     */
    public function getUpgrades(): ?array
    {
        return $this->upgrades;
    }

    /**
     * Upgrades that can be sold for this SKU.
     *
     * @param list<PricebookV2SkuUpgradeBulkCreateRequest>|null $upgrades
     */
    public function setUpgrades(?array $upgrades): self
    {
        $this->initialized['upgrades'] = true;
        $this->upgrades = $upgrades;

        return $this;
    }

    /**
     * Code for the SKU.
     */
    public function getCode(): string
    {
        return $this->code;
    }

    /**
     * Code for the SKU.
     */
    public function setCode(string $code): self
    {
        $this->initialized['code'] = true;
        $this->code = $code;

        return $this;
    }

    /**
     * Name that displays with the SKU.
     */
    public function getDisplayName(): ?string
    {
        return $this->displayName;
    }

    /**
     * Name that displays with the SKU.
     */
    public function setDisplayName(?string $displayName): self
    {
        $this->initialized['displayName'] = true;
        $this->displayName = $displayName;

        return $this;
    }

    /**
     * Description on the SKU that is displayed with the item.
     */
    public function getDescription(): string
    {
        return $this->description;
    }

    /**
     * Description on the SKU that is displayed with the item.
     */
    public function setDescription(string $description): self
    {
        $this->initialized['description'] = true;
        $this->description = $description;

        return $this;
    }

    /**
     * Description of the warranty included in this SKU.
     */
    public function getWarranty()
    {
        return $this->warranty;
    }

    /**
     * Description of the warranty included in this SKU.
     */
    public function setWarranty($warranty): self
    {
        $this->initialized['warranty'] = true;
        $this->warranty = $warranty;

        return $this;
    }

    /**
     * Categories that this SKU belongs to.
     *
     * @return list<int>|null
     */
    public function getCategories(): ?array
    {
        return $this->categories;
    }

    /**
     * Categories that this SKU belongs to.
     *
     * @param list<int>|null $categories
     */
    public function setCategories(?array $categories): self
    {
        $this->initialized['categories'] = true;
        $this->categories = $categories;

        return $this;
    }

    /**
     * Price of this SKU sold.
     */
    public function getPrice(): ?float
    {
        return $this->price;
    }

    /**
     * Price of this SKU sold.
     */
    public function setPrice(?float $price): self
    {
        $this->initialized['price'] = true;
        $this->price = $price;

        return $this;
    }

    /**
     * The price if the item is sold to a member.
     */
    public function getMemberPrice(): ?float
    {
        return $this->memberPrice;
    }

    /**
     * The price if the item is sold to a member.
     */
    public function setMemberPrice(?float $memberPrice): self
    {
        $this->initialized['memberPrice'] = true;
        $this->memberPrice = $memberPrice;

        return $this;
    }

    /**
     * The price of the SKU is sold as an add-on item.
     */
    public function getAddOnPrice(): ?float
    {
        return $this->addOnPrice;
    }

    /**
     * The price of the SKU is sold as an add-on item.
     */
    public function setAddOnPrice(?float $addOnPrice): self
    {
        $this->initialized['addOnPrice'] = true;
        $this->addOnPrice = $addOnPrice;

        return $this;
    }

    /**
     * The price if the SKU is sold to a member as an add-on item.
     */
    public function getAddOnMemberPrice(): ?float
    {
        return $this->addOnMemberPrice;
    }

    /**
     * The price if the SKU is sold to a member as an add-on item.
     */
    public function setAddOnMemberPrice(?float $addOnMemberPrice): self
    {
        $this->initialized['addOnMemberPrice'] = true;
        $this->addOnMemberPrice = $addOnMemberPrice;

        return $this;
    }

    /**
     * Is this SKU taxable.
     */
    public function getTaxable(): ?bool
    {
        return $this->taxable;
    }

    /**
     * Is this SKU taxable.
     */
    public function setTaxable(?bool $taxable): self
    {
        $this->initialized['taxable'] = true;
        $this->taxable = $taxable;

        return $this;
    }

    /**
     * The accounting account assigned to this SKU.
     */
    public function getAccount(): ?string
    {
        return $this->account;
    }

    /**
     * The accounting account assigned to this SKU.
     */
    public function setAccount(?string $account): self
    {
        $this->initialized['account'] = true;
        $this->account = $account;

        return $this;
    }

    /**
     * Hours needed to complete this service.
     */
    public function getHours(): ?float
    {
        return $this->hours;
    }

    /**
     * Hours needed to complete this service.
     */
    public function setHours(?float $hours): self
    {
        $this->initialized['hours'] = true;
        $this->hours = $hours;

        return $this;
    }

    /**
     * Is a labor service.
     */
    public function getIsLabor(): ?bool
    {
        return $this->isLabor;
    }

    /**
     * Is a labor service.
     */
    public function setIsLabor(?bool $isLabor): self
    {
        $this->initialized['isLabor'] = true;
        $this->isLabor = $isLabor;

        return $this;
    }

    /**
     * Images, videos or PDFs attached to SKU.
     *
     * @return list<PricebookV2SkuAssetRequest>|null
     */
    public function getAssets(): ?array
    {
        return $this->assets;
    }

    /**
     * Images, videos or PDFs attached to SKU.
     *
     * @param list<PricebookV2SkuAssetRequest>|null $assets
     */
    public function setAssets(?array $assets): self
    {
        $this->initialized['assets'] = true;
        $this->assets = $assets;

        return $this;
    }

    /**
     * Active shows if the SKU is active or inactive.
     */
    public function getActive(): ?bool
    {
        return $this->active;
    }

    /**
     * Active shows if the SKU is active or inactive.
     */
    public function setActive(?bool $active): self
    {
        $this->initialized['active'] = true;
        $this->active = $active;

        return $this;
    }

    /**
     * A grouping of similar items that you'll then be able to track as a separate columns on the Technical Performance Board.
     */
    public function getCrossSaleGroup(): ?string
    {
        return $this->crossSaleGroup;
    }

    /**
     * A grouping of similar items that you'll then be able to track as a separate columns on the Technical Performance Board.
     */
    public function setCrossSaleGroup(?string $crossSaleGroup): self
    {
        $this->initialized['crossSaleGroup'] = true;
        $this->crossSaleGroup = $crossSaleGroup;

        return $this;
    }

    /**
     * True if this task pays commission.
     */
    public function getPaysCommission(): ?bool
    {
        return $this->paysCommission;
    }

    /**
     * True if this task pays commission.
     */
    public function setPaysCommission(?bool $paysCommission): self
    {
        $this->initialized['paysCommission'] = true;
        $this->paysCommission = $paysCommission;

        return $this;
    }

    /**
     * Flat rate bonus paid for this task.
     */
    public function getCommissionBonus(): ?float
    {
        return $this->commissionBonus;
    }

    /**
     * Flat rate bonus paid for this task.
     */
    public function setCommissionBonus(?float $commissionBonus): self
    {
        $this->initialized['commissionBonus'] = true;
        $this->commissionBonus = $commissionBonus;

        return $this;
    }

    /**
     * Optional model that contains a list of external data items
     * that should be attached to this entity.
     */
    public function getExternalData()
    {
        return $this->externalData;
    }

    /**
     * Optional model that contains a list of external data items
     * that should be attached to this entity.
     */
    public function setExternalData($externalData): self
    {
        $this->initialized['externalData'] = true;
        $this->externalData = $externalData;

        return $this;
    }

    public function getCustomId(): ?string
    {
        return $this->customId;
    }

    public function setCustomId(?string $customId): self
    {
        $this->initialized['customId'] = true;
        $this->customId = $customId;

        return $this;
    }
}
