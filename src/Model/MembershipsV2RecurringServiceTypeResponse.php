<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CompWright\ServiceTitan\Model;

class MembershipsV2RecurringServiceTypeResponse
{
    /**
     * Recurring service type ID.
     *
     * @var int
     */
    protected $id;
    /**
     * When recurring service type was created.
     *
     * @var \DateTime
     */
    protected $createdOn;
    /**
     * ID of the user that created this recurring service type.
     *
     * @var int|null
     */
    protected $createdById;
    /**
     * When recurring service type was modified.
     *
     * @var \DateTime
     */
    protected $modifiedOn;
    /**
     * Whether recurring service type is active.
     *
     * @var bool
     */
    protected $active;
    /**
     * The recurrence type (e.g. Daily, Weekly, Monthly).
     *
     * @var mixed
     */
    protected $recurrenceType;
    /**
     * The recurrence interval for the given recurrence type.
     *
     * @var int
     */
    protected $recurrenceInterval;
    /**
     * A list of months when the recurring service occurs, if it is a seasonal recurrence type.
     *
     * @var string[]
     */
    protected $recurrenceMonths;
    /**
     * The recurrence duration type.
     *
     * @var mixed
     */
    protected $durationType;
    /**
     * The recurrence duration length (number of events).
     *
     * @var int
     */
    protected $durationLength;
    /**
     * Invoice template ID.
     *
     * @var int|null
     */
    protected $invoiceTemplateId;
    /**
     * Business unit ID.
     *
     * @var int|null
     */
    protected $businessUnitId;
    /**
     * Job type ID.
     *
     * @var int|null
     */
    protected $jobTypeId;
    /**
     * Priority.
     *
     * @var mixed
     */
    protected $priority;
    /**
     * Campaign ID.
     *
     * @var int|null
     */
    protected $campaignId;
    /**
     * Job summary.
     *
     * @var string|null
     */
    protected $jobSummary;
    /**
     * Recurring service type name.
     *
     * @var string|null
     */
    protected $name;
    /**
     * Import ID.
     *
     * @var string|null
     */
    protected $importId;

    /**
     * Recurring service type ID.
     */
    public function getId(): int
    {
        return $this->id;
    }

    /**
     * Recurring service type ID.
     */
    public function setId(int $id): self
    {
        $this->id = $id;

        return $this;
    }

    /**
     * When recurring service type was created.
     */
    public function getCreatedOn(): \DateTime
    {
        return $this->createdOn;
    }

    /**
     * When recurring service type was created.
     */
    public function setCreatedOn(\DateTime $createdOn): self
    {
        $this->createdOn = $createdOn;

        return $this;
    }

    /**
     * ID of the user that created this recurring service type.
     */
    public function getCreatedById(): ?int
    {
        return $this->createdById;
    }

    /**
     * ID of the user that created this recurring service type.
     */
    public function setCreatedById(?int $createdById): self
    {
        $this->createdById = $createdById;

        return $this;
    }

    /**
     * When recurring service type was modified.
     */
    public function getModifiedOn(): \DateTime
    {
        return $this->modifiedOn;
    }

    /**
     * When recurring service type was modified.
     */
    public function setModifiedOn(\DateTime $modifiedOn): self
    {
        $this->modifiedOn = $modifiedOn;

        return $this;
    }

    /**
     * Whether recurring service type is active.
     */
    public function getActive(): bool
    {
        return $this->active;
    }

    /**
     * Whether recurring service type is active.
     */
    public function setActive(bool $active): self
    {
        $this->active = $active;

        return $this;
    }

    /**
     * The recurrence type (e.g. Daily, Weekly, Monthly).
     *
     * @return mixed
     */
    public function getRecurrenceType()
    {
        return $this->recurrenceType;
    }

    /**
     * The recurrence type (e.g. Daily, Weekly, Monthly).
     *
     * @param mixed $recurrenceType
     */
    public function setRecurrenceType($recurrenceType): self
    {
        $this->recurrenceType = $recurrenceType;

        return $this;
    }

    /**
     * The recurrence interval for the given recurrence type.
     */
    public function getRecurrenceInterval(): int
    {
        return $this->recurrenceInterval;
    }

    /**
     * The recurrence interval for the given recurrence type.
     */
    public function setRecurrenceInterval(int $recurrenceInterval): self
    {
        $this->recurrenceInterval = $recurrenceInterval;

        return $this;
    }

    /**
     * A list of months when the recurring service occurs, if it is a seasonal recurrence type.
     *
     * @return string[]
     */
    public function getRecurrenceMonths(): array
    {
        return $this->recurrenceMonths;
    }

    /**
     * A list of months when the recurring service occurs, if it is a seasonal recurrence type.
     *
     * @param string[] $recurrenceMonths
     */
    public function setRecurrenceMonths(array $recurrenceMonths): self
    {
        $this->recurrenceMonths = $recurrenceMonths;

        return $this;
    }

    /**
     * The recurrence duration type.
     *
     * @return mixed
     */
    public function getDurationType()
    {
        return $this->durationType;
    }

    /**
     * The recurrence duration type.
     *
     * @param mixed $durationType
     */
    public function setDurationType($durationType): self
    {
        $this->durationType = $durationType;

        return $this;
    }

    /**
     * The recurrence duration length (number of events).
     */
    public function getDurationLength(): int
    {
        return $this->durationLength;
    }

    /**
     * The recurrence duration length (number of events).
     */
    public function setDurationLength(int $durationLength): self
    {
        $this->durationLength = $durationLength;

        return $this;
    }

    /**
     * Invoice template ID.
     */
    public function getInvoiceTemplateId(): ?int
    {
        return $this->invoiceTemplateId;
    }

    /**
     * Invoice template ID.
     */
    public function setInvoiceTemplateId(?int $invoiceTemplateId): self
    {
        $this->invoiceTemplateId = $invoiceTemplateId;

        return $this;
    }

    /**
     * Business unit ID.
     */
    public function getBusinessUnitId(): ?int
    {
        return $this->businessUnitId;
    }

    /**
     * Business unit ID.
     */
    public function setBusinessUnitId(?int $businessUnitId): self
    {
        $this->businessUnitId = $businessUnitId;

        return $this;
    }

    /**
     * Job type ID.
     */
    public function getJobTypeId(): ?int
    {
        return $this->jobTypeId;
    }

    /**
     * Job type ID.
     */
    public function setJobTypeId(?int $jobTypeId): self
    {
        $this->jobTypeId = $jobTypeId;

        return $this;
    }

    /**
     * Priority.
     *
     * @return mixed
     */
    public function getPriority()
    {
        return $this->priority;
    }

    /**
     * Priority.
     *
     * @param mixed $priority
     */
    public function setPriority($priority): self
    {
        $this->priority = $priority;

        return $this;
    }

    /**
     * Campaign ID.
     */
    public function getCampaignId(): ?int
    {
        return $this->campaignId;
    }

    /**
     * Campaign ID.
     */
    public function setCampaignId(?int $campaignId): self
    {
        $this->campaignId = $campaignId;

        return $this;
    }

    /**
     * Job summary.
     */
    public function getJobSummary(): ?string
    {
        return $this->jobSummary;
    }

    /**
     * Job summary.
     */
    public function setJobSummary(?string $jobSummary): self
    {
        $this->jobSummary = $jobSummary;

        return $this;
    }

    /**
     * Recurring service type name.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Recurring service type name.
     */
    public function setName(?string $name): self
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Import ID.
     */
    public function getImportId(): ?string
    {
        return $this->importId;
    }

    /**
     * Import ID.
     */
    public function setImportId(?string $importId): self
    {
        $this->importId = $importId;

        return $this;
    }
}
