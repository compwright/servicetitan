<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CompWright\ServiceTitan\Model;

class MembershipsV2MembershipTypeRecurringServiceItemResponse
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * ID of the recurring service item.
     *
     * @var int
     */
    protected $id;
    /**
     * Membership type ID associated with the item.
     *
     * @var int
     */
    protected $membershipTypeId;
    /**
     * Recurring service type ID associated with the item.
     *
     * @var int
     */
    protected $recurringServiceTypeId;
    /**
     * Number of weeks or months (depending on offset type) between membership start and recurring service start.
     *
     * @var int
     */
    protected $offset;
    /**
     * Offset type of the recurring service type associated to this item, can be weeks (0) or months (1).
     */
    protected $offsetType;
    /**
     * The percentage of deferred revenue allocated to the recurring service item.
     *
     * @var float
     */
    protected $allocation;
    /**
     * Import ID.
     *
     * @var string|null
     */
    protected $importId;
    /**
     * When recurring service item was created.
     *
     * @var \DateTime
     */
    protected $createdOn;
    /**
     * ID of the user that created this recurring service item.
     *
     * @var int|null
     */
    protected $createdById;

    /**
     * ID of the recurring service item.
     */
    public function getId(): int
    {
        return $this->id;
    }

    /**
     * ID of the recurring service item.
     */
    public function setId(int $id): self
    {
        $this->initialized['id'] = true;
        $this->id = $id;

        return $this;
    }

    /**
     * Membership type ID associated with the item.
     */
    public function getMembershipTypeId(): int
    {
        return $this->membershipTypeId;
    }

    /**
     * Membership type ID associated with the item.
     */
    public function setMembershipTypeId(int $membershipTypeId): self
    {
        $this->initialized['membershipTypeId'] = true;
        $this->membershipTypeId = $membershipTypeId;

        return $this;
    }

    /**
     * Recurring service type ID associated with the item.
     */
    public function getRecurringServiceTypeId(): int
    {
        return $this->recurringServiceTypeId;
    }

    /**
     * Recurring service type ID associated with the item.
     */
    public function setRecurringServiceTypeId(int $recurringServiceTypeId): self
    {
        $this->initialized['recurringServiceTypeId'] = true;
        $this->recurringServiceTypeId = $recurringServiceTypeId;

        return $this;
    }

    /**
     * Number of weeks or months (depending on offset type) between membership start and recurring service start.
     */
    public function getOffset(): int
    {
        return $this->offset;
    }

    /**
     * Number of weeks or months (depending on offset type) between membership start and recurring service start.
     */
    public function setOffset(int $offset): self
    {
        $this->initialized['offset'] = true;
        $this->offset = $offset;

        return $this;
    }

    /**
     * Offset type of the recurring service type associated to this item, can be weeks (0) or months (1).
     */
    public function getOffsetType()
    {
        return $this->offsetType;
    }

    /**
     * Offset type of the recurring service type associated to this item, can be weeks (0) or months (1).
     */
    public function setOffsetType($offsetType): self
    {
        $this->initialized['offsetType'] = true;
        $this->offsetType = $offsetType;

        return $this;
    }

    /**
     * The percentage of deferred revenue allocated to the recurring service item.
     */
    public function getAllocation(): float
    {
        return $this->allocation;
    }

    /**
     * The percentage of deferred revenue allocated to the recurring service item.
     */
    public function setAllocation(float $allocation): self
    {
        $this->initialized['allocation'] = true;
        $this->allocation = $allocation;

        return $this;
    }

    /**
     * Import ID.
     */
    public function getImportId(): ?string
    {
        return $this->importId;
    }

    /**
     * Import ID.
     */
    public function setImportId(?string $importId): self
    {
        $this->initialized['importId'] = true;
        $this->importId = $importId;

        return $this;
    }

    /**
     * When recurring service item was created.
     */
    public function getCreatedOn(): \DateTime
    {
        return $this->createdOn;
    }

    /**
     * When recurring service item was created.
     */
    public function setCreatedOn(\DateTime $createdOn): self
    {
        $this->initialized['createdOn'] = true;
        $this->createdOn = $createdOn;

        return $this;
    }

    /**
     * ID of the user that created this recurring service item.
     */
    public function getCreatedById(): ?int
    {
        return $this->createdById;
    }

    /**
     * ID of the user that created this recurring service item.
     */
    public function setCreatedById(?int $createdById): self
    {
        $this->initialized['createdById'] = true;
        $this->createdById = $createdById;

        return $this;
    }
}
