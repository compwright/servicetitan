<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CompWright\ServiceTitan\Model;

class InventoryV2UpdatePurchaseOrderItemRequest
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Id of purchase order item to update.
     *
     * @var int
     */
    protected $id;
    /**
     * Id of the SKU from pricebook, can be any active material or equipment.
     *
     * @var int
     */
    protected $skuId;
    /**
     * Item description.
     *
     * @var string
     */
    protected $description;
    /**
     * Part number of this item for current vendor.
     *
     * @var string
     */
    protected $vendorPartNumber;
    /**
     * Item quantity.
     *
     * @var float
     */
    protected $quantity;
    /**
     * Item cost.
     *
     * @var float
     */
    protected $cost;

    /**
     * Id of purchase order item to update.
     */
    public function getId(): int
    {
        return $this->id;
    }

    /**
     * Id of purchase order item to update.
     */
    public function setId(int $id): self
    {
        $this->initialized['id'] = true;
        $this->id = $id;

        return $this;
    }

    /**
     * Id of the SKU from pricebook, can be any active material or equipment.
     */
    public function getSkuId(): int
    {
        return $this->skuId;
    }

    /**
     * Id of the SKU from pricebook, can be any active material or equipment.
     */
    public function setSkuId(int $skuId): self
    {
        $this->initialized['skuId'] = true;
        $this->skuId = $skuId;

        return $this;
    }

    /**
     * Item description.
     */
    public function getDescription(): string
    {
        return $this->description;
    }

    /**
     * Item description.
     */
    public function setDescription(string $description): self
    {
        $this->initialized['description'] = true;
        $this->description = $description;

        return $this;
    }

    /**
     * Part number of this item for current vendor.
     */
    public function getVendorPartNumber(): string
    {
        return $this->vendorPartNumber;
    }

    /**
     * Part number of this item for current vendor.
     */
    public function setVendorPartNumber(string $vendorPartNumber): self
    {
        $this->initialized['vendorPartNumber'] = true;
        $this->vendorPartNumber = $vendorPartNumber;

        return $this;
    }

    /**
     * Item quantity.
     */
    public function getQuantity(): float
    {
        return $this->quantity;
    }

    /**
     * Item quantity.
     */
    public function setQuantity(float $quantity): self
    {
        $this->initialized['quantity'] = true;
        $this->quantity = $quantity;

        return $this;
    }

    /**
     * Item cost.
     */
    public function getCost(): float
    {
        return $this->cost;
    }

    /**
     * Item cost.
     */
    public function setCost(float $cost): self
    {
        $this->initialized['cost'] = true;
        $this->cost = $cost;

        return $this;
    }
}
