<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CompWright\ServiceTitan\Model;

class PayrollV2GrossPayItemsGrossPayItemResponse
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The gross pay item ID.
     *
     * @var int|null
     */
    protected $id;
    /**
     * The employee/technician ID.
     *
     * @var int|null
     */
    protected $employeeId;
    /**
     * The employee type.
     *
     * @var mixed|null
     */
    protected $employeeType;
    /**
     * The business unit name.
     *
     * @var string|null
     */
    protected $businessUnitName;
    /**
     * The payroll ID.
     *
     * @var int
     */
    protected $payrollId;
    /**
     * The date (UTC) of the gross pay item.
     *
     * @var \DateTime
     */
    protected $date;
    /**
     * The activity.
     *
     * @var string|null
     */
    protected $activity;
    /**
     * The payroll activity code ID.
     *
     * @var int|null
     */
    protected $activityCodeId;
    /**
     * The payroll activity code name.
     *
     * @var string|null
     */
    protected $activityCode;
    /**
     * The amount.
     *
     * @var float
     */
    protected $amount;
    /**
     * The amount adjustment.
     *
     * @var float|null
     */
    protected $amountAdjustment;
    /**
     * The payout business unit name.
     *
     * @var string|null
     */
    protected $payoutBusinessUnitName;
    /**
     * Type of the gross pay item.
     */
    protected $grossPayItemType;
    /**
     * The start time (UTC).
     *
     * @var \DateTime|null
     */
    protected $startedOn;
    /**
     * The end time (UTC).
     *
     * @var \DateTime|null
     */
    protected $endedOn;
    /**
     * The paid duration in hours.
     *
     * @var float|null
     */
    protected $paidDurationHours;
    /**
     * Type of the paid time.
     *
     * @var mixed|null
     */
    protected $paidTimeType;
    /**
     * The job ID.
     *
     * @var int
     */
    protected $jobId;
    /**
     * The job number.
     *
     * @var string|null
     */
    protected $jobNumber;
    /**
     * Name of the job type.
     *
     * @var string|null
     */
    protected $jobTypeName;
    /**
     * The project number.
     *
     * @var string|null
     */
    protected $projectNumber;
    /**
     * The project ID.
     *
     * @var int|null
     */
    protected $projectId;
    /**
     * The invoice ID.
     *
     * @var int|null
     */
    protected $invoiceId;
    /**
     * The invoice number.
     *
     * @var string|null
     */
    protected $invoiceNumber;
    /**
     * The invoice item ID.
     *
     * @var int|null
     */
    protected $invoiceItemId;
    /**
     * The customer ID.
     *
     * @var int|null
     */
    protected $customerId;
    /**
     * The customer name.
     *
     * @var string|null
     */
    protected $customerName;
    /**
     * The location ID.
     *
     * @var int|null
     */
    protected $locationId;
    /**
     * The location name.
     *
     * @var string|null
     */
    protected $locationName;
    /**
     * The location address.
     *
     * @var string|null
     */
    protected $locationAddress;
    /**
     * The location zip.
     *
     * @var string|null
     */
    protected $locationZip;
    /**
     * The zone name.
     *
     * @var string|null
     */
    protected $zoneName;
    /**
     * The tax zone name.
     *
     * @var string|null
     */
    protected $taxZoneName;
    /**
     * ID of the labor type.
     *
     * @var int|null
     */
    protected $laborTypeId;
    /**
     * Code of the labor type.
     *
     * @var string|null
     */
    protected $laborTypeCode;
    /**
     * Defines whether it's a prevailing wage job.
     *
     * @var bool|null
     */
    protected $isPrevailingWageJob;

    /**
     * The gross pay item ID.
     */
    public function getId(): ?int
    {
        return $this->id;
    }

    /**
     * The gross pay item ID.
     */
    public function setId(?int $id): self
    {
        $this->initialized['id'] = true;
        $this->id = $id;

        return $this;
    }

    /**
     * The employee/technician ID.
     */
    public function getEmployeeId(): ?int
    {
        return $this->employeeId;
    }

    /**
     * The employee/technician ID.
     */
    public function setEmployeeId(?int $employeeId): self
    {
        $this->initialized['employeeId'] = true;
        $this->employeeId = $employeeId;

        return $this;
    }

    /**
     * The employee type.
     */
    public function getEmployeeType()
    {
        return $this->employeeType;
    }

    /**
     * The employee type.
     */
    public function setEmployeeType($employeeType): self
    {
        $this->initialized['employeeType'] = true;
        $this->employeeType = $employeeType;

        return $this;
    }

    /**
     * The business unit name.
     */
    public function getBusinessUnitName(): ?string
    {
        return $this->businessUnitName;
    }

    /**
     * The business unit name.
     */
    public function setBusinessUnitName(?string $businessUnitName): self
    {
        $this->initialized['businessUnitName'] = true;
        $this->businessUnitName = $businessUnitName;

        return $this;
    }

    /**
     * The payroll ID.
     */
    public function getPayrollId(): int
    {
        return $this->payrollId;
    }

    /**
     * The payroll ID.
     */
    public function setPayrollId(int $payrollId): self
    {
        $this->initialized['payrollId'] = true;
        $this->payrollId = $payrollId;

        return $this;
    }

    /**
     * The date (UTC) of the gross pay item.
     */
    public function getDate(): \DateTime
    {
        return $this->date;
    }

    /**
     * The date (UTC) of the gross pay item.
     */
    public function setDate(\DateTime $date): self
    {
        $this->initialized['date'] = true;
        $this->date = $date;

        return $this;
    }

    /**
     * The activity.
     */
    public function getActivity(): ?string
    {
        return $this->activity;
    }

    /**
     * The activity.
     */
    public function setActivity(?string $activity): self
    {
        $this->initialized['activity'] = true;
        $this->activity = $activity;

        return $this;
    }

    /**
     * The payroll activity code ID.
     */
    public function getActivityCodeId(): ?int
    {
        return $this->activityCodeId;
    }

    /**
     * The payroll activity code ID.
     */
    public function setActivityCodeId(?int $activityCodeId): self
    {
        $this->initialized['activityCodeId'] = true;
        $this->activityCodeId = $activityCodeId;

        return $this;
    }

    /**
     * The payroll activity code name.
     */
    public function getActivityCode(): ?string
    {
        return $this->activityCode;
    }

    /**
     * The payroll activity code name.
     */
    public function setActivityCode(?string $activityCode): self
    {
        $this->initialized['activityCode'] = true;
        $this->activityCode = $activityCode;

        return $this;
    }

    /**
     * The amount.
     */
    public function getAmount(): float
    {
        return $this->amount;
    }

    /**
     * The amount.
     */
    public function setAmount(float $amount): self
    {
        $this->initialized['amount'] = true;
        $this->amount = $amount;

        return $this;
    }

    /**
     * The amount adjustment.
     */
    public function getAmountAdjustment(): ?float
    {
        return $this->amountAdjustment;
    }

    /**
     * The amount adjustment.
     */
    public function setAmountAdjustment(?float $amountAdjustment): self
    {
        $this->initialized['amountAdjustment'] = true;
        $this->amountAdjustment = $amountAdjustment;

        return $this;
    }

    /**
     * The payout business unit name.
     */
    public function getPayoutBusinessUnitName(): ?string
    {
        return $this->payoutBusinessUnitName;
    }

    /**
     * The payout business unit name.
     */
    public function setPayoutBusinessUnitName(?string $payoutBusinessUnitName): self
    {
        $this->initialized['payoutBusinessUnitName'] = true;
        $this->payoutBusinessUnitName = $payoutBusinessUnitName;

        return $this;
    }

    /**
     * Type of the gross pay item.
     */
    public function getGrossPayItemType()
    {
        return $this->grossPayItemType;
    }

    /**
     * Type of the gross pay item.
     */
    public function setGrossPayItemType($grossPayItemType): self
    {
        $this->initialized['grossPayItemType'] = true;
        $this->grossPayItemType = $grossPayItemType;

        return $this;
    }

    /**
     * The start time (UTC).
     */
    public function getStartedOn(): ?\DateTime
    {
        return $this->startedOn;
    }

    /**
     * The start time (UTC).
     */
    public function setStartedOn(?\DateTime $startedOn): self
    {
        $this->initialized['startedOn'] = true;
        $this->startedOn = $startedOn;

        return $this;
    }

    /**
     * The end time (UTC).
     */
    public function getEndedOn(): ?\DateTime
    {
        return $this->endedOn;
    }

    /**
     * The end time (UTC).
     */
    public function setEndedOn(?\DateTime $endedOn): self
    {
        $this->initialized['endedOn'] = true;
        $this->endedOn = $endedOn;

        return $this;
    }

    /**
     * The paid duration in hours.
     */
    public function getPaidDurationHours(): ?float
    {
        return $this->paidDurationHours;
    }

    /**
     * The paid duration in hours.
     */
    public function setPaidDurationHours(?float $paidDurationHours): self
    {
        $this->initialized['paidDurationHours'] = true;
        $this->paidDurationHours = $paidDurationHours;

        return $this;
    }

    /**
     * Type of the paid time.
     */
    public function getPaidTimeType()
    {
        return $this->paidTimeType;
    }

    /**
     * Type of the paid time.
     */
    public function setPaidTimeType($paidTimeType): self
    {
        $this->initialized['paidTimeType'] = true;
        $this->paidTimeType = $paidTimeType;

        return $this;
    }

    /**
     * The job ID.
     */
    public function getJobId(): int
    {
        return $this->jobId;
    }

    /**
     * The job ID.
     */
    public function setJobId(int $jobId): self
    {
        $this->initialized['jobId'] = true;
        $this->jobId = $jobId;

        return $this;
    }

    /**
     * The job number.
     */
    public function getJobNumber(): ?string
    {
        return $this->jobNumber;
    }

    /**
     * The job number.
     */
    public function setJobNumber(?string $jobNumber): self
    {
        $this->initialized['jobNumber'] = true;
        $this->jobNumber = $jobNumber;

        return $this;
    }

    /**
     * Name of the job type.
     */
    public function getJobTypeName(): ?string
    {
        return $this->jobTypeName;
    }

    /**
     * Name of the job type.
     */
    public function setJobTypeName(?string $jobTypeName): self
    {
        $this->initialized['jobTypeName'] = true;
        $this->jobTypeName = $jobTypeName;

        return $this;
    }

    /**
     * The project number.
     */
    public function getProjectNumber(): ?string
    {
        return $this->projectNumber;
    }

    /**
     * The project number.
     */
    public function setProjectNumber(?string $projectNumber): self
    {
        $this->initialized['projectNumber'] = true;
        $this->projectNumber = $projectNumber;

        return $this;
    }

    /**
     * The project ID.
     */
    public function getProjectId(): ?int
    {
        return $this->projectId;
    }

    /**
     * The project ID.
     */
    public function setProjectId(?int $projectId): self
    {
        $this->initialized['projectId'] = true;
        $this->projectId = $projectId;

        return $this;
    }

    /**
     * The invoice ID.
     */
    public function getInvoiceId(): ?int
    {
        return $this->invoiceId;
    }

    /**
     * The invoice ID.
     */
    public function setInvoiceId(?int $invoiceId): self
    {
        $this->initialized['invoiceId'] = true;
        $this->invoiceId = $invoiceId;

        return $this;
    }

    /**
     * The invoice number.
     */
    public function getInvoiceNumber(): ?string
    {
        return $this->invoiceNumber;
    }

    /**
     * The invoice number.
     */
    public function setInvoiceNumber(?string $invoiceNumber): self
    {
        $this->initialized['invoiceNumber'] = true;
        $this->invoiceNumber = $invoiceNumber;

        return $this;
    }

    /**
     * The invoice item ID.
     */
    public function getInvoiceItemId(): ?int
    {
        return $this->invoiceItemId;
    }

    /**
     * The invoice item ID.
     */
    public function setInvoiceItemId(?int $invoiceItemId): self
    {
        $this->initialized['invoiceItemId'] = true;
        $this->invoiceItemId = $invoiceItemId;

        return $this;
    }

    /**
     * The customer ID.
     */
    public function getCustomerId(): ?int
    {
        return $this->customerId;
    }

    /**
     * The customer ID.
     */
    public function setCustomerId(?int $customerId): self
    {
        $this->initialized['customerId'] = true;
        $this->customerId = $customerId;

        return $this;
    }

    /**
     * The customer name.
     */
    public function getCustomerName(): ?string
    {
        return $this->customerName;
    }

    /**
     * The customer name.
     */
    public function setCustomerName(?string $customerName): self
    {
        $this->initialized['customerName'] = true;
        $this->customerName = $customerName;

        return $this;
    }

    /**
     * The location ID.
     */
    public function getLocationId(): ?int
    {
        return $this->locationId;
    }

    /**
     * The location ID.
     */
    public function setLocationId(?int $locationId): self
    {
        $this->initialized['locationId'] = true;
        $this->locationId = $locationId;

        return $this;
    }

    /**
     * The location name.
     */
    public function getLocationName(): ?string
    {
        return $this->locationName;
    }

    /**
     * The location name.
     */
    public function setLocationName(?string $locationName): self
    {
        $this->initialized['locationName'] = true;
        $this->locationName = $locationName;

        return $this;
    }

    /**
     * The location address.
     */
    public function getLocationAddress(): ?string
    {
        return $this->locationAddress;
    }

    /**
     * The location address.
     */
    public function setLocationAddress(?string $locationAddress): self
    {
        $this->initialized['locationAddress'] = true;
        $this->locationAddress = $locationAddress;

        return $this;
    }

    /**
     * The location zip.
     */
    public function getLocationZip(): ?string
    {
        return $this->locationZip;
    }

    /**
     * The location zip.
     */
    public function setLocationZip(?string $locationZip): self
    {
        $this->initialized['locationZip'] = true;
        $this->locationZip = $locationZip;

        return $this;
    }

    /**
     * The zone name.
     */
    public function getZoneName(): ?string
    {
        return $this->zoneName;
    }

    /**
     * The zone name.
     */
    public function setZoneName(?string $zoneName): self
    {
        $this->initialized['zoneName'] = true;
        $this->zoneName = $zoneName;

        return $this;
    }

    /**
     * The tax zone name.
     */
    public function getTaxZoneName(): ?string
    {
        return $this->taxZoneName;
    }

    /**
     * The tax zone name.
     */
    public function setTaxZoneName(?string $taxZoneName): self
    {
        $this->initialized['taxZoneName'] = true;
        $this->taxZoneName = $taxZoneName;

        return $this;
    }

    /**
     * ID of the labor type.
     */
    public function getLaborTypeId(): ?int
    {
        return $this->laborTypeId;
    }

    /**
     * ID of the labor type.
     */
    public function setLaborTypeId(?int $laborTypeId): self
    {
        $this->initialized['laborTypeId'] = true;
        $this->laborTypeId = $laborTypeId;

        return $this;
    }

    /**
     * Code of the labor type.
     */
    public function getLaborTypeCode(): ?string
    {
        return $this->laborTypeCode;
    }

    /**
     * Code of the labor type.
     */
    public function setLaborTypeCode(?string $laborTypeCode): self
    {
        $this->initialized['laborTypeCode'] = true;
        $this->laborTypeCode = $laborTypeCode;

        return $this;
    }

    /**
     * Defines whether it's a prevailing wage job.
     */
    public function getIsPrevailingWageJob(): ?bool
    {
        return $this->isPrevailingWageJob;
    }

    /**
     * Defines whether it's a prevailing wage job.
     */
    public function setIsPrevailingWageJob(?bool $isPrevailingWageJob): self
    {
        $this->initialized['isPrevailingWageJob'] = true;
        $this->isPrevailingWageJob = $isPrevailingWageJob;

        return $this;
    }
}
