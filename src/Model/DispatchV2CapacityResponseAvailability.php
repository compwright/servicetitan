<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CompWright\ServiceTitan\Model;

class DispatchV2CapacityResponseAvailability
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * When the availability time frame starts.
     *
     * @var \DateTime
     */
    protected $start;
    /**
     * When the availability time frame ends.
     *
     * @var \DateTime
     */
    protected $end;
    /**
     * Business units that the availability applies to.
     *
     * @var list<int>
     */
    protected $businessUnitIds;
    /**
     * Number of jobs that total capacity can allow to be booked during this time frame.
     *
     * @var float
     */
    protected $totalAvailability;
    /**
     * Number of remaining jobs that can be booked during this time frame.
     *
     * @var float
     */
    protected $openAvailability;
    /**
     * Technician details for this availability time frame.
     *
     * @var list<DispatchV2CapacityResponseTechnician>
     */
    protected $technicians;
    /**
     * Indicate if Ideal Booking Percentage is exceeded.
     *
     * @var bool
     */
    protected $isExceedingIdealBookingPercentage;

    /**
     * When the availability time frame starts.
     */
    public function getStart(): \DateTime
    {
        return $this->start;
    }

    /**
     * When the availability time frame starts.
     */
    public function setStart(\DateTime $start): self
    {
        $this->initialized['start'] = true;
        $this->start = $start;

        return $this;
    }

    /**
     * When the availability time frame ends.
     */
    public function getEnd(): \DateTime
    {
        return $this->end;
    }

    /**
     * When the availability time frame ends.
     */
    public function setEnd(\DateTime $end): self
    {
        $this->initialized['end'] = true;
        $this->end = $end;

        return $this;
    }

    /**
     * Business units that the availability applies to.
     *
     * @return list<int>
     */
    public function getBusinessUnitIds(): array
    {
        return $this->businessUnitIds;
    }

    /**
     * Business units that the availability applies to.
     *
     * @param list<int> $businessUnitIds
     */
    public function setBusinessUnitIds(array $businessUnitIds): self
    {
        $this->initialized['businessUnitIds'] = true;
        $this->businessUnitIds = $businessUnitIds;

        return $this;
    }

    /**
     * Number of jobs that total capacity can allow to be booked during this time frame.
     */
    public function getTotalAvailability(): float
    {
        return $this->totalAvailability;
    }

    /**
     * Number of jobs that total capacity can allow to be booked during this time frame.
     */
    public function setTotalAvailability(float $totalAvailability): self
    {
        $this->initialized['totalAvailability'] = true;
        $this->totalAvailability = $totalAvailability;

        return $this;
    }

    /**
     * Number of remaining jobs that can be booked during this time frame.
     */
    public function getOpenAvailability(): float
    {
        return $this->openAvailability;
    }

    /**
     * Number of remaining jobs that can be booked during this time frame.
     */
    public function setOpenAvailability(float $openAvailability): self
    {
        $this->initialized['openAvailability'] = true;
        $this->openAvailability = $openAvailability;

        return $this;
    }

    /**
     * Technician details for this availability time frame.
     *
     * @return list<DispatchV2CapacityResponseTechnician>
     */
    public function getTechnicians(): array
    {
        return $this->technicians;
    }

    /**
     * Technician details for this availability time frame.
     *
     * @param list<DispatchV2CapacityResponseTechnician> $technicians
     */
    public function setTechnicians(array $technicians): self
    {
        $this->initialized['technicians'] = true;
        $this->technicians = $technicians;

        return $this;
    }

    /**
     * Indicate if Ideal Booking Percentage is exceeded.
     */
    public function getIsExceedingIdealBookingPercentage(): bool
    {
        return $this->isExceedingIdealBookingPercentage;
    }

    /**
     * Indicate if Ideal Booking Percentage is exceeded.
     */
    public function setIsExceedingIdealBookingPercentage(bool $isExceedingIdealBookingPercentage): self
    {
        $this->initialized['isExceedingIdealBookingPercentage'] = true;
        $this->isExceedingIdealBookingPercentage = $isExceedingIdealBookingPercentage;

        return $this;
    }
}
