<?php
/**
 * TenantSettingsV2BusinessUnitResponse
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  CompWright\ServiceTitan
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Settings
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: Jonathon Hill, CompWright Enterprises LLC (https://compwright.com)
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace CompWright\ServiceTitan\Model;

use \ArrayAccess;
use \CompWright\ServiceTitan\ObjectSerializer;

/**
 * TenantSettingsV2BusinessUnitResponse Class Doc Comment
 *
 * @category Class
 * @package  CompWright\ServiceTitan
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class TenantSettingsV2BusinessUnitResponse implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'TenantSettings.V2.BusinessUnitResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'int',
        'active' => 'bool',
        'name' => 'string',
        'official_name' => 'string',
        'email' => 'string',
        'currency' => 'string',
        'phone_number' => 'string',
        'invoice_header' => 'string',
        'invoice_message' => 'string',
        'default_tax_rate' => 'float',
        'authorization_paragraph' => 'string',
        'acknowledgement_paragraph' => 'string',
        'address' => 'OneOfTenantSettingsV2BusinessUnitAddressResponse',
        'material_sku' => 'string',
        'quickbooks_class' => 'string',
        'account_code' => 'string',
        'franchise_id' => 'string',
        'concept_code' => 'string',
        'corporate_contract_number' => 'string',
        'tenant' => 'OneOfTenantSettingsV2BusinessUnitTenantResponse',
        'created_on' => '\DateTime',
        'modified_on' => '\DateTime',
        'external_data' => '\CompWright\ServiceTitan\Model\TenantSettingsV2ExternalDataModel[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'int64',
        'active' => null,
        'name' => null,
        'official_name' => null,
        'email' => null,
        'currency' => null,
        'phone_number' => null,
        'invoice_header' => null,
        'invoice_message' => null,
        'default_tax_rate' => 'decimal',
        'authorization_paragraph' => null,
        'acknowledgement_paragraph' => null,
        'address' => null,
        'material_sku' => null,
        'quickbooks_class' => null,
        'account_code' => null,
        'franchise_id' => null,
        'concept_code' => null,
        'corporate_contract_number' => null,
        'tenant' => null,
        'created_on' => 'date-time',
        'modified_on' => 'date-time',
        'external_data' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'active' => 'active',
        'name' => 'name',
        'official_name' => 'officialName',
        'email' => 'email',
        'currency' => 'currency',
        'phone_number' => 'phoneNumber',
        'invoice_header' => 'invoiceHeader',
        'invoice_message' => 'invoiceMessage',
        'default_tax_rate' => 'defaultTaxRate',
        'authorization_paragraph' => 'authorizationParagraph',
        'acknowledgement_paragraph' => 'acknowledgementParagraph',
        'address' => 'address',
        'material_sku' => 'materialSku',
        'quickbooks_class' => 'quickbooksClass',
        'account_code' => 'accountCode',
        'franchise_id' => 'franchiseId',
        'concept_code' => 'conceptCode',
        'corporate_contract_number' => 'corporateContractNumber',
        'tenant' => 'tenant',
        'created_on' => 'createdOn',
        'modified_on' => 'modifiedOn',
        'external_data' => 'externalData'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'active' => 'setActive',
        'name' => 'setName',
        'official_name' => 'setOfficialName',
        'email' => 'setEmail',
        'currency' => 'setCurrency',
        'phone_number' => 'setPhoneNumber',
        'invoice_header' => 'setInvoiceHeader',
        'invoice_message' => 'setInvoiceMessage',
        'default_tax_rate' => 'setDefaultTaxRate',
        'authorization_paragraph' => 'setAuthorizationParagraph',
        'acknowledgement_paragraph' => 'setAcknowledgementParagraph',
        'address' => 'setAddress',
        'material_sku' => 'setMaterialSku',
        'quickbooks_class' => 'setQuickbooksClass',
        'account_code' => 'setAccountCode',
        'franchise_id' => 'setFranchiseId',
        'concept_code' => 'setConceptCode',
        'corporate_contract_number' => 'setCorporateContractNumber',
        'tenant' => 'setTenant',
        'created_on' => 'setCreatedOn',
        'modified_on' => 'setModifiedOn',
        'external_data' => 'setExternalData'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'active' => 'getActive',
        'name' => 'getName',
        'official_name' => 'getOfficialName',
        'email' => 'getEmail',
        'currency' => 'getCurrency',
        'phone_number' => 'getPhoneNumber',
        'invoice_header' => 'getInvoiceHeader',
        'invoice_message' => 'getInvoiceMessage',
        'default_tax_rate' => 'getDefaultTaxRate',
        'authorization_paragraph' => 'getAuthorizationParagraph',
        'acknowledgement_paragraph' => 'getAcknowledgementParagraph',
        'address' => 'getAddress',
        'material_sku' => 'getMaterialSku',
        'quickbooks_class' => 'getQuickbooksClass',
        'account_code' => 'getAccountCode',
        'franchise_id' => 'getFranchiseId',
        'concept_code' => 'getConceptCode',
        'corporate_contract_number' => 'getCorporateContractNumber',
        'tenant' => 'getTenant',
        'created_on' => 'getCreatedOn',
        'modified_on' => 'getModifiedOn',
        'external_data' => 'getExternalData'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['active'] = $data['active'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['official_name'] = $data['official_name'] ?? null;
        $this->container['email'] = $data['email'] ?? null;
        $this->container['currency'] = $data['currency'] ?? null;
        $this->container['phone_number'] = $data['phone_number'] ?? null;
        $this->container['invoice_header'] = $data['invoice_header'] ?? null;
        $this->container['invoice_message'] = $data['invoice_message'] ?? null;
        $this->container['default_tax_rate'] = $data['default_tax_rate'] ?? null;
        $this->container['authorization_paragraph'] = $data['authorization_paragraph'] ?? null;
        $this->container['acknowledgement_paragraph'] = $data['acknowledgement_paragraph'] ?? null;
        $this->container['address'] = $data['address'] ?? null;
        $this->container['material_sku'] = $data['material_sku'] ?? null;
        $this->container['quickbooks_class'] = $data['quickbooks_class'] ?? null;
        $this->container['account_code'] = $data['account_code'] ?? null;
        $this->container['franchise_id'] = $data['franchise_id'] ?? null;
        $this->container['concept_code'] = $data['concept_code'] ?? null;
        $this->container['corporate_contract_number'] = $data['corporate_contract_number'] ?? null;
        $this->container['tenant'] = $data['tenant'] ?? null;
        $this->container['created_on'] = $data['created_on'] ?? null;
        $this->container['modified_on'] = $data['modified_on'] ?? null;
        $this->container['external_data'] = $data['external_data'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['id'] === null) {
            $invalidProperties[] = "'id' can't be null";
        }
        if ($this->container['active'] === null) {
            $invalidProperties[] = "'active' can't be null";
        }
        if ($this->container['name'] === null) {
            $invalidProperties[] = "'name' can't be null";
        }
        if ($this->container['created_on'] === null) {
            $invalidProperties[] = "'created_on' can't be null";
        }
        if ($this->container['modified_on'] === null) {
            $invalidProperties[] = "'modified_on' can't be null";
        }
        if ($this->container['external_data'] === null) {
            $invalidProperties[] = "'external_data' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets active
     *
     * @return bool
     */
    public function getActive()
    {
        return $this->container['active'];
    }

    /**
     * Sets active
     *
     * @param bool $active active
     *
     * @return self
     */
    public function setActive($active)
    {
        $this->container['active'] = $active;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets official_name
     *
     * @return string|null
     */
    public function getOfficialName()
    {
        return $this->container['official_name'];
    }

    /**
     * Sets official_name
     *
     * @param string|null $official_name official_name
     *
     * @return self
     */
    public function setOfficialName($official_name)
    {
        $this->container['official_name'] = $official_name;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string|null
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string|null $email email
     *
     * @return self
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string|null
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string|null $currency currency
     *
     * @return self
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets phone_number
     *
     * @return string|null
     */
    public function getPhoneNumber()
    {
        return $this->container['phone_number'];
    }

    /**
     * Sets phone_number
     *
     * @param string|null $phone_number phone_number
     *
     * @return self
     */
    public function setPhoneNumber($phone_number)
    {
        $this->container['phone_number'] = $phone_number;

        return $this;
    }

    /**
     * Gets invoice_header
     *
     * @return string|null
     */
    public function getInvoiceHeader()
    {
        return $this->container['invoice_header'];
    }

    /**
     * Sets invoice_header
     *
     * @param string|null $invoice_header invoice_header
     *
     * @return self
     */
    public function setInvoiceHeader($invoice_header)
    {
        $this->container['invoice_header'] = $invoice_header;

        return $this;
    }

    /**
     * Gets invoice_message
     *
     * @return string|null
     */
    public function getInvoiceMessage()
    {
        return $this->container['invoice_message'];
    }

    /**
     * Sets invoice_message
     *
     * @param string|null $invoice_message invoice_message
     *
     * @return self
     */
    public function setInvoiceMessage($invoice_message)
    {
        $this->container['invoice_message'] = $invoice_message;

        return $this;
    }

    /**
     * Gets default_tax_rate
     *
     * @return float|null
     */
    public function getDefaultTaxRate()
    {
        return $this->container['default_tax_rate'];
    }

    /**
     * Sets default_tax_rate
     *
     * @param float|null $default_tax_rate default_tax_rate
     *
     * @return self
     */
    public function setDefaultTaxRate($default_tax_rate)
    {
        $this->container['default_tax_rate'] = $default_tax_rate;

        return $this;
    }

    /**
     * Gets authorization_paragraph
     *
     * @return string|null
     */
    public function getAuthorizationParagraph()
    {
        return $this->container['authorization_paragraph'];
    }

    /**
     * Sets authorization_paragraph
     *
     * @param string|null $authorization_paragraph authorization_paragraph
     *
     * @return self
     */
    public function setAuthorizationParagraph($authorization_paragraph)
    {
        $this->container['authorization_paragraph'] = $authorization_paragraph;

        return $this;
    }

    /**
     * Gets acknowledgement_paragraph
     *
     * @return string|null
     */
    public function getAcknowledgementParagraph()
    {
        return $this->container['acknowledgement_paragraph'];
    }

    /**
     * Sets acknowledgement_paragraph
     *
     * @param string|null $acknowledgement_paragraph acknowledgement_paragraph
     *
     * @return self
     */
    public function setAcknowledgementParagraph($acknowledgement_paragraph)
    {
        $this->container['acknowledgement_paragraph'] = $acknowledgement_paragraph;

        return $this;
    }

    /**
     * Gets address
     *
     * @return OneOfTenantSettingsV2BusinessUnitAddressResponse|null
     */
    public function getAddress()
    {
        return $this->container['address'];
    }

    /**
     * Sets address
     *
     * @param OneOfTenantSettingsV2BusinessUnitAddressResponse|null $address address
     *
     * @return self
     */
    public function setAddress($address)
    {
        $this->container['address'] = $address;

        return $this;
    }

    /**
     * Gets material_sku
     *
     * @return string|null
     */
    public function getMaterialSku()
    {
        return $this->container['material_sku'];
    }

    /**
     * Sets material_sku
     *
     * @param string|null $material_sku material_sku
     *
     * @return self
     */
    public function setMaterialSku($material_sku)
    {
        $this->container['material_sku'] = $material_sku;

        return $this;
    }

    /**
     * Gets quickbooks_class
     *
     * @return string|null
     */
    public function getQuickbooksClass()
    {
        return $this->container['quickbooks_class'];
    }

    /**
     * Sets quickbooks_class
     *
     * @param string|null $quickbooks_class quickbooks_class
     *
     * @return self
     */
    public function setQuickbooksClass($quickbooks_class)
    {
        $this->container['quickbooks_class'] = $quickbooks_class;

        return $this;
    }

    /**
     * Gets account_code
     *
     * @return string|null
     */
    public function getAccountCode()
    {
        return $this->container['account_code'];
    }

    /**
     * Sets account_code
     *
     * @param string|null $account_code account_code
     *
     * @return self
     */
    public function setAccountCode($account_code)
    {
        $this->container['account_code'] = $account_code;

        return $this;
    }

    /**
     * Gets franchise_id
     *
     * @return string|null
     */
    public function getFranchiseId()
    {
        return $this->container['franchise_id'];
    }

    /**
     * Sets franchise_id
     *
     * @param string|null $franchise_id franchise_id
     *
     * @return self
     */
    public function setFranchiseId($franchise_id)
    {
        $this->container['franchise_id'] = $franchise_id;

        return $this;
    }

    /**
     * Gets concept_code
     *
     * @return string|null
     */
    public function getConceptCode()
    {
        return $this->container['concept_code'];
    }

    /**
     * Sets concept_code
     *
     * @param string|null $concept_code concept_code
     *
     * @return self
     */
    public function setConceptCode($concept_code)
    {
        $this->container['concept_code'] = $concept_code;

        return $this;
    }

    /**
     * Gets corporate_contract_number
     *
     * @return string|null
     */
    public function getCorporateContractNumber()
    {
        return $this->container['corporate_contract_number'];
    }

    /**
     * Sets corporate_contract_number
     *
     * @param string|null $corporate_contract_number corporate_contract_number
     *
     * @return self
     */
    public function setCorporateContractNumber($corporate_contract_number)
    {
        $this->container['corporate_contract_number'] = $corporate_contract_number;

        return $this;
    }

    /**
     * Gets tenant
     *
     * @return OneOfTenantSettingsV2BusinessUnitTenantResponse|null
     */
    public function getTenant()
    {
        return $this->container['tenant'];
    }

    /**
     * Sets tenant
     *
     * @param OneOfTenantSettingsV2BusinessUnitTenantResponse|null $tenant tenant
     *
     * @return self
     */
    public function setTenant($tenant)
    {
        $this->container['tenant'] = $tenant;

        return $this;
    }

    /**
     * Gets created_on
     *
     * @return \DateTime
     */
    public function getCreatedOn()
    {
        return $this->container['created_on'];
    }

    /**
     * Sets created_on
     *
     * @param \DateTime $created_on created_on
     *
     * @return self
     */
    public function setCreatedOn($created_on)
    {
        $this->container['created_on'] = $created_on;

        return $this;
    }

    /**
     * Gets modified_on
     *
     * @return \DateTime
     */
    public function getModifiedOn()
    {
        return $this->container['modified_on'];
    }

    /**
     * Sets modified_on
     *
     * @param \DateTime $modified_on modified_on
     *
     * @return self
     */
    public function setModifiedOn($modified_on)
    {
        $this->container['modified_on'] = $modified_on;

        return $this;
    }

    /**
     * Gets external_data
     *
     * @return \CompWright\ServiceTitan\Model\TenantSettingsV2ExternalDataModel[]
     */
    public function getExternalData()
    {
        return $this->container['external_data'];
    }

    /**
     * Sets external_data
     *
     * @param \CompWright\ServiceTitan\Model\TenantSettingsV2ExternalDataModel[] $external_data Optional model that contains a list of external data items that should be attached to this job. that should be attached to this vendor.
     *
     * @return self
     */
    public function setExternalData($external_data)
    {
        $this->container['external_data'] = $external_data;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


