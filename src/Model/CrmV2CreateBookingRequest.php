<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CompWright\ServiceTitan\Model;

class CrmV2CreateBookingRequest
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Source of the booking.
     *
     * @var string
     */
    protected $source;
    /**
     * Name of the customer.
     *
     * @var string
     */
    protected $name;
    /**
     * Address of the booking.
     *
     * @var mixed|null
     */
    protected $address;
    /**
     * Contacts for the booking.
     *
     * @var list<CrmV2BookingContactModel>|null
     */
    protected $contacts;
    /**
     * Type of the customer (Residential/Commercial).
     *
     * @var string|null
     */
    protected $customerType;
    /**
     * Booking's start Date(time) in UTC.
     *
     * @var \DateTime|null
     */
    protected $start;
    /**
     * Summary of the booking.
     *
     * @var string
     */
    protected $summary;
    /**
     * ID of the booking's campaign.
     *
     * @var int|null
     */
    protected $campaignId;
    /**
     * ID of the booking's business unit.
     *
     * @var int|null
     */
    protected $businessUnitId;
    /**
     * ID of the booking's job type.
     *
     * @var int|null
     */
    protected $jobTypeId;
    /**
     * Booking priority.
     *
     * @var mixed|null
     */
    protected $priority;
    /**
     * True if first time client.
     *
     * @var bool
     */
    protected $isFirstTimeClient;
    /**
     * Uploaded images.
     *
     * @var list<string>|null
     */
    protected $uploadedImages;
    /**
     * Returns true if customer should receive email when booking is created.
     *
     * @var bool|null
     */
    protected $isSendConfirmationEmail;
    /**
     * External ID of booking.
     *
     * @var string
     */
    protected $externalId;

    /**
     * Source of the booking.
     */
    public function getSource(): string
    {
        return $this->source;
    }

    /**
     * Source of the booking.
     */
    public function setSource(string $source): self
    {
        $this->initialized['source'] = true;
        $this->source = $source;

        return $this;
    }

    /**
     * Name of the customer.
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Name of the customer.
     */
    public function setName(string $name): self
    {
        $this->initialized['name'] = true;
        $this->name = $name;

        return $this;
    }

    /**
     * Address of the booking.
     */
    public function getAddress()
    {
        return $this->address;
    }

    /**
     * Address of the booking.
     */
    public function setAddress($address): self
    {
        $this->initialized['address'] = true;
        $this->address = $address;

        return $this;
    }

    /**
     * Contacts for the booking.
     *
     * @return list<CrmV2BookingContactModel>|null
     */
    public function getContacts(): ?array
    {
        return $this->contacts;
    }

    /**
     * Contacts for the booking.
     *
     * @param list<CrmV2BookingContactModel>|null $contacts
     */
    public function setContacts(?array $contacts): self
    {
        $this->initialized['contacts'] = true;
        $this->contacts = $contacts;

        return $this;
    }

    /**
     * Type of the customer (Residential/Commercial).
     */
    public function getCustomerType(): ?string
    {
        return $this->customerType;
    }

    /**
     * Type of the customer (Residential/Commercial).
     */
    public function setCustomerType(?string $customerType): self
    {
        $this->initialized['customerType'] = true;
        $this->customerType = $customerType;

        return $this;
    }

    /**
     * Booking's start Date(time) in UTC.
     */
    public function getStart(): ?\DateTime
    {
        return $this->start;
    }

    /**
     * Booking's start Date(time) in UTC.
     */
    public function setStart(?\DateTime $start): self
    {
        $this->initialized['start'] = true;
        $this->start = $start;

        return $this;
    }

    /**
     * Summary of the booking.
     */
    public function getSummary(): string
    {
        return $this->summary;
    }

    /**
     * Summary of the booking.
     */
    public function setSummary(string $summary): self
    {
        $this->initialized['summary'] = true;
        $this->summary = $summary;

        return $this;
    }

    /**
     * ID of the booking's campaign.
     */
    public function getCampaignId(): ?int
    {
        return $this->campaignId;
    }

    /**
     * ID of the booking's campaign.
     */
    public function setCampaignId(?int $campaignId): self
    {
        $this->initialized['campaignId'] = true;
        $this->campaignId = $campaignId;

        return $this;
    }

    /**
     * ID of the booking's business unit.
     */
    public function getBusinessUnitId(): ?int
    {
        return $this->businessUnitId;
    }

    /**
     * ID of the booking's business unit.
     */
    public function setBusinessUnitId(?int $businessUnitId): self
    {
        $this->initialized['businessUnitId'] = true;
        $this->businessUnitId = $businessUnitId;

        return $this;
    }

    /**
     * ID of the booking's job type.
     */
    public function getJobTypeId(): ?int
    {
        return $this->jobTypeId;
    }

    /**
     * ID of the booking's job type.
     */
    public function setJobTypeId(?int $jobTypeId): self
    {
        $this->initialized['jobTypeId'] = true;
        $this->jobTypeId = $jobTypeId;

        return $this;
    }

    /**
     * Booking priority.
     */
    public function getPriority()
    {
        return $this->priority;
    }

    /**
     * Booking priority.
     */
    public function setPriority($priority): self
    {
        $this->initialized['priority'] = true;
        $this->priority = $priority;

        return $this;
    }

    /**
     * True if first time client.
     */
    public function getIsFirstTimeClient(): bool
    {
        return $this->isFirstTimeClient;
    }

    /**
     * True if first time client.
     */
    public function setIsFirstTimeClient(bool $isFirstTimeClient): self
    {
        $this->initialized['isFirstTimeClient'] = true;
        $this->isFirstTimeClient = $isFirstTimeClient;

        return $this;
    }

    /**
     * Uploaded images.
     *
     * @return list<string>|null
     */
    public function getUploadedImages(): ?array
    {
        return $this->uploadedImages;
    }

    /**
     * Uploaded images.
     *
     * @param list<string>|null $uploadedImages
     */
    public function setUploadedImages(?array $uploadedImages): self
    {
        $this->initialized['uploadedImages'] = true;
        $this->uploadedImages = $uploadedImages;

        return $this;
    }

    /**
     * Returns true if customer should receive email when booking is created.
     */
    public function getIsSendConfirmationEmail(): ?bool
    {
        return $this->isSendConfirmationEmail;
    }

    /**
     * Returns true if customer should receive email when booking is created.
     */
    public function setIsSendConfirmationEmail(?bool $isSendConfirmationEmail): self
    {
        $this->initialized['isSendConfirmationEmail'] = true;
        $this->isSendConfirmationEmail = $isSendConfirmationEmail;

        return $this;
    }

    /**
     * External ID of booking.
     */
    public function getExternalId(): string
    {
        return $this->externalId;
    }

    /**
     * External ID of booking.
     */
    public function setExternalId(string $externalId): self
    {
        $this->initialized['externalId'] = true;
        $this->externalId = $externalId;

        return $this;
    }
}
