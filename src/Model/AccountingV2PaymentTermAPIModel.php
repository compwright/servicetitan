<?php
/**
 * AccountingV2PaymentTermAPIModel
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  CompWright\ServiceTitan
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Accounting
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: Jonathon Hill, CompWright Enterprises LLC (https://compwright.com)
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace CompWright\ServiceTitan\Model;

use \ArrayAccess;
use \CompWright\ServiceTitan\ObjectSerializer;

/**
 * AccountingV2PaymentTermAPIModel Class Doc Comment
 *
 * @category Class
 * @package  CompWright\ServiceTitan
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class AccountingV2PaymentTermAPIModel implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Accounting.V2.PaymentTermAPIModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'int',
        'name' => 'string',
        'due_day_type' => '\CompWright\ServiceTitan\Model\AccountingV2PaymentTermDueDayType',
        'due_day' => 'int',
        'is_customer_default' => 'bool',
        'is_vendor_default' => 'bool',
        'active' => 'bool',
        'in_use' => 'bool',
        'payment_term_penalty_model' => '\CompWright\ServiceTitan\Model\AccountingV2PaymentTermPenaltyAPIModel',
        'payment_term_discount_model' => '\CompWright\ServiceTitan\Model\AccountingV2PaymentTermDiscountAPIModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'int64',
        'name' => null,
        'due_day_type' => null,
        'due_day' => 'int32',
        'is_customer_default' => null,
        'is_vendor_default' => null,
        'active' => null,
        'in_use' => null,
        'payment_term_penalty_model' => null,
        'payment_term_discount_model' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'name' => 'name',
        'due_day_type' => 'dueDayType',
        'due_day' => 'dueDay',
        'is_customer_default' => 'isCustomerDefault',
        'is_vendor_default' => 'isVendorDefault',
        'active' => 'active',
        'in_use' => 'inUse',
        'payment_term_penalty_model' => 'paymentTermPenaltyModel',
        'payment_term_discount_model' => 'paymentTermDiscountModel'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'name' => 'setName',
        'due_day_type' => 'setDueDayType',
        'due_day' => 'setDueDay',
        'is_customer_default' => 'setIsCustomerDefault',
        'is_vendor_default' => 'setIsVendorDefault',
        'active' => 'setActive',
        'in_use' => 'setInUse',
        'payment_term_penalty_model' => 'setPaymentTermPenaltyModel',
        'payment_term_discount_model' => 'setPaymentTermDiscountModel'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'name' => 'getName',
        'due_day_type' => 'getDueDayType',
        'due_day' => 'getDueDay',
        'is_customer_default' => 'getIsCustomerDefault',
        'is_vendor_default' => 'getIsVendorDefault',
        'active' => 'getActive',
        'in_use' => 'getInUse',
        'payment_term_penalty_model' => 'getPaymentTermPenaltyModel',
        'payment_term_discount_model' => 'getPaymentTermDiscountModel'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['due_day_type'] = $data['due_day_type'] ?? null;
        $this->container['due_day'] = $data['due_day'] ?? null;
        $this->container['is_customer_default'] = $data['is_customer_default'] ?? null;
        $this->container['is_vendor_default'] = $data['is_vendor_default'] ?? null;
        $this->container['active'] = $data['active'] ?? null;
        $this->container['in_use'] = $data['in_use'] ?? null;
        $this->container['payment_term_penalty_model'] = $data['payment_term_penalty_model'] ?? null;
        $this->container['payment_term_discount_model'] = $data['payment_term_discount_model'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['due_day_type'] === null) {
            $invalidProperties[] = "'due_day_type' can't be null";
        }
        if ($this->container['is_customer_default'] === null) {
            $invalidProperties[] = "'is_customer_default' can't be null";
        }
        if ($this->container['is_vendor_default'] === null) {
            $invalidProperties[] = "'is_vendor_default' can't be null";
        }
        if ($this->container['active'] === null) {
            $invalidProperties[] = "'active' can't be null";
        }
        if ($this->container['payment_term_penalty_model'] === null) {
            $invalidProperties[] = "'payment_term_penalty_model' can't be null";
        }
        if ($this->container['payment_term_discount_model'] === null) {
            $invalidProperties[] = "'payment_term_discount_model' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets due_day_type
     *
     * @return \CompWright\ServiceTitan\Model\AccountingV2PaymentTermDueDayType
     */
    public function getDueDayType()
    {
        return $this->container['due_day_type'];
    }

    /**
     * Sets due_day_type
     *
     * @param \CompWright\ServiceTitan\Model\AccountingV2PaymentTermDueDayType $due_day_type due_day_type
     *
     * @return self
     */
    public function setDueDayType($due_day_type)
    {
        $this->container['due_day_type'] = $due_day_type;

        return $this;
    }

    /**
     * Gets due_day
     *
     * @return int|null
     */
    public function getDueDay()
    {
        return $this->container['due_day'];
    }

    /**
     * Sets due_day
     *
     * @param int|null $due_day due_day
     *
     * @return self
     */
    public function setDueDay($due_day)
    {
        $this->container['due_day'] = $due_day;

        return $this;
    }

    /**
     * Gets is_customer_default
     *
     * @return bool
     */
    public function getIsCustomerDefault()
    {
        return $this->container['is_customer_default'];
    }

    /**
     * Sets is_customer_default
     *
     * @param bool $is_customer_default is_customer_default
     *
     * @return self
     */
    public function setIsCustomerDefault($is_customer_default)
    {
        $this->container['is_customer_default'] = $is_customer_default;

        return $this;
    }

    /**
     * Gets is_vendor_default
     *
     * @return bool
     */
    public function getIsVendorDefault()
    {
        return $this->container['is_vendor_default'];
    }

    /**
     * Sets is_vendor_default
     *
     * @param bool $is_vendor_default is_vendor_default
     *
     * @return self
     */
    public function setIsVendorDefault($is_vendor_default)
    {
        $this->container['is_vendor_default'] = $is_vendor_default;

        return $this;
    }

    /**
     * Gets active
     *
     * @return bool
     */
    public function getActive()
    {
        return $this->container['active'];
    }

    /**
     * Sets active
     *
     * @param bool $active active
     *
     * @return self
     */
    public function setActive($active)
    {
        $this->container['active'] = $active;

        return $this;
    }

    /**
     * Gets in_use
     *
     * @return bool|null
     */
    public function getInUse()
    {
        return $this->container['in_use'];
    }

    /**
     * Sets in_use
     *
     * @param bool|null $in_use in_use
     *
     * @return self
     */
    public function setInUse($in_use)
    {
        $this->container['in_use'] = $in_use;

        return $this;
    }

    /**
     * Gets payment_term_penalty_model
     *
     * @return \CompWright\ServiceTitan\Model\AccountingV2PaymentTermPenaltyAPIModel
     */
    public function getPaymentTermPenaltyModel()
    {
        return $this->container['payment_term_penalty_model'];
    }

    /**
     * Sets payment_term_penalty_model
     *
     * @param \CompWright\ServiceTitan\Model\AccountingV2PaymentTermPenaltyAPIModel $payment_term_penalty_model payment_term_penalty_model
     *
     * @return self
     */
    public function setPaymentTermPenaltyModel($payment_term_penalty_model)
    {
        $this->container['payment_term_penalty_model'] = $payment_term_penalty_model;

        return $this;
    }

    /**
     * Gets payment_term_discount_model
     *
     * @return \CompWright\ServiceTitan\Model\AccountingV2PaymentTermDiscountAPIModel
     */
    public function getPaymentTermDiscountModel()
    {
        return $this->container['payment_term_discount_model'];
    }

    /**
     * Sets payment_term_discount_model
     *
     * @param \CompWright\ServiceTitan\Model\AccountingV2PaymentTermDiscountAPIModel $payment_term_discount_model payment_term_discount_model
     *
     * @return self
     */
    public function setPaymentTermDiscountModel($payment_term_discount_model)
    {
        $this->container['payment_term_discount_model'] = $payment_term_discount_model;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


