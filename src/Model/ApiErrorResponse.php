<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CompWright\ServiceTitan\Model;

class ApiErrorResponse
{
    /**
     * A URI reference that identifies the problem type.
     *
     * @var string
     */
    protected $type;
    /**
     * A short, human-readable summary of the problem type.
     *
     * @var string
     */
    protected $title;
    /**
     * The HTTP status code generated by server.
     *
     * @var int
     */
    protected $status;
    /**
     * Internal trace ID for advanced diagnostics.
     *
     * @var string
     */
    protected $traceId;
    /**
     * Provides more details about errors occurred, which can potentially be used for visual display.
     *
     * @var string[][]
     */
    protected $errors;
    /**
     * Provides additional data, intended for programmatical usage.
     *
     * @var mixed[]
     */
    protected $data;

    /**
     * A URI reference that identifies the problem type.
     */
    public function getType(): string
    {
        return $this->type;
    }

    /**
     * A URI reference that identifies the problem type.
     */
    public function setType(string $type): self
    {
        $this->type = $type;

        return $this;
    }

    /**
     * A short, human-readable summary of the problem type.
     */
    public function getTitle(): string
    {
        return $this->title;
    }

    /**
     * A short, human-readable summary of the problem type.
     */
    public function setTitle(string $title): self
    {
        $this->title = $title;

        return $this;
    }

    /**
     * The HTTP status code generated by server.
     */
    public function getStatus(): int
    {
        return $this->status;
    }

    /**
     * The HTTP status code generated by server.
     */
    public function setStatus(int $status): self
    {
        $this->status = $status;

        return $this;
    }

    /**
     * Internal trace ID for advanced diagnostics.
     */
    public function getTraceId(): string
    {
        return $this->traceId;
    }

    /**
     * Internal trace ID for advanced diagnostics.
     */
    public function setTraceId(string $traceId): self
    {
        $this->traceId = $traceId;

        return $this;
    }

    /**
     * Provides more details about errors occurred, which can potentially be used for visual display.
     *
     * @return string[][]
     */
    public function getErrors(): iterable
    {
        return $this->errors;
    }

    /**
     * Provides more details about errors occurred, which can potentially be used for visual display.
     *
     * @param string[][] $errors
     */
    public function setErrors(iterable $errors): self
    {
        $this->errors = $errors;

        return $this;
    }

    /**
     * Provides additional data, intended for programmatical usage.
     *
     * @return mixed[]
     */
    public function getData(): iterable
    {
        return $this->data;
    }

    /**
     * Provides additional data, intended for programmatical usage.
     *
     * @param mixed[] $data
     */
    public function setData(iterable $data): self
    {
        $this->data = $data;

        return $this;
    }
}
