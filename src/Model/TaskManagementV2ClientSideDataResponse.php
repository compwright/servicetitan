<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CompWright\ServiceTitan\Model;

class TaskManagementV2ClientSideDataResponse
{
    /**
     * @var TaskManagementV2ClientSideEmployeeResponse[]
     */
    protected $employees;
    /**
     * @var TaskManagementV2ClientSideBusinessUnitResponse[]
     */
    protected $businessUnits;
    /**
     * @var TaskManagementV2ClientSideTaskPriorityResponse[]
     */
    protected $taskPriorities;
    /**
     * @var TaskManagementV2ClientSideTaskResolutionTypeResponse[]
     */
    protected $taskResolutionTypes;
    /**
     * @var TaskManagementV2ClientSideTaskStatusResponse[]
     */
    protected $taskStatuses;
    /**
     * @var TaskManagementV2ClientSideTaskTypeResponse[]
     */
    protected $taskTypes;
    /**
     * @var TaskManagementV2ClientSideTaskSourceResponse[]
     */
    protected $taskSources;
    /**
     * @var TaskManagementV2ClientSideTaskResolutionResponse[]
     */
    protected $taskResolutions;

    /**
     * @return TaskManagementV2ClientSideEmployeeResponse[]
     */
    public function getEmployees(): array
    {
        return $this->employees;
    }

    /**
     * @param TaskManagementV2ClientSideEmployeeResponse[] $employees
     */
    public function setEmployees(array $employees): self
    {
        $this->employees = $employees;

        return $this;
    }

    /**
     * @return TaskManagementV2ClientSideBusinessUnitResponse[]
     */
    public function getBusinessUnits(): array
    {
        return $this->businessUnits;
    }

    /**
     * @param TaskManagementV2ClientSideBusinessUnitResponse[] $businessUnits
     */
    public function setBusinessUnits(array $businessUnits): self
    {
        $this->businessUnits = $businessUnits;

        return $this;
    }

    /**
     * @return TaskManagementV2ClientSideTaskPriorityResponse[]
     */
    public function getTaskPriorities(): array
    {
        return $this->taskPriorities;
    }

    /**
     * @param TaskManagementV2ClientSideTaskPriorityResponse[] $taskPriorities
     */
    public function setTaskPriorities(array $taskPriorities): self
    {
        $this->taskPriorities = $taskPriorities;

        return $this;
    }

    /**
     * @return TaskManagementV2ClientSideTaskResolutionTypeResponse[]
     */
    public function getTaskResolutionTypes(): array
    {
        return $this->taskResolutionTypes;
    }

    /**
     * @param TaskManagementV2ClientSideTaskResolutionTypeResponse[] $taskResolutionTypes
     */
    public function setTaskResolutionTypes(array $taskResolutionTypes): self
    {
        $this->taskResolutionTypes = $taskResolutionTypes;

        return $this;
    }

    /**
     * @return TaskManagementV2ClientSideTaskStatusResponse[]
     */
    public function getTaskStatuses(): array
    {
        return $this->taskStatuses;
    }

    /**
     * @param TaskManagementV2ClientSideTaskStatusResponse[] $taskStatuses
     */
    public function setTaskStatuses(array $taskStatuses): self
    {
        $this->taskStatuses = $taskStatuses;

        return $this;
    }

    /**
     * @return TaskManagementV2ClientSideTaskTypeResponse[]
     */
    public function getTaskTypes(): array
    {
        return $this->taskTypes;
    }

    /**
     * @param TaskManagementV2ClientSideTaskTypeResponse[] $taskTypes
     */
    public function setTaskTypes(array $taskTypes): self
    {
        $this->taskTypes = $taskTypes;

        return $this;
    }

    /**
     * @return TaskManagementV2ClientSideTaskSourceResponse[]
     */
    public function getTaskSources(): array
    {
        return $this->taskSources;
    }

    /**
     * @param TaskManagementV2ClientSideTaskSourceResponse[] $taskSources
     */
    public function setTaskSources(array $taskSources): self
    {
        $this->taskSources = $taskSources;

        return $this;
    }

    /**
     * @return TaskManagementV2ClientSideTaskResolutionResponse[]
     */
    public function getTaskResolutions(): array
    {
        return $this->taskResolutions;
    }

    /**
     * @param TaskManagementV2ClientSideTaskResolutionResponse[] $taskResolutions
     */
    public function setTaskResolutions(array $taskResolutions): self
    {
        $this->taskResolutions = $taskResolutions;

        return $this;
    }
}
