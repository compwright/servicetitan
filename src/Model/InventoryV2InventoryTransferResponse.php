<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CompWright\ServiceTitan\Model;

class InventoryV2InventoryTransferResponse
{
    /**
     * Inventory transfer Id.
     *
     * @var int
     */
    protected $id;
    /**
     * Type.
     *
     * @var string
     */
    protected $transferType;
    /**
     * Status.
     *
     * @var string
     */
    protected $status;
    /**
     * Number.
     *
     * @var string
     */
    protected $number;
    /**
     * Reference number.
     *
     * @var string
     */
    protected $referenceNumber;
    /**
     * Inventory location to transfer from.
     *
     * @var int
     */
    protected $fromLocationId;
    /**
     * Inventory location where transfer is going.
     *
     * @var int
     */
    protected $toLocationId;
    /**
     * Employee who created this transfer.
     *
     * @var int|null
     */
    protected $createdById;
    /**
     * Memo/summary field.
     *
     * @var string
     */
    protected $memo;
    /**
     * Transfer date.
     *
     * @var \DateTime
     */
    protected $date;
    /**
     * Transfer picked date.
     *
     * @var \DateTime|null
     */
    protected $pickedDate;
    /**
     * Transfer recevived date.
     *
     * @var \DateTime|null
     */
    protected $receivedDate;
    /**
     * system created date.
     *
     * @var \DateTime
     */
    protected $createdOn;
    /**
     * last time transfer was modified date.
     *
     * @var \DateTime
     */
    protected $modifiedOn;
    /**
     * Batch.
     *
     * @var int|null
     */
    protected $batchId;
    /**
     * Sync status.
     *
     * @var mixed
     */
    protected $syncStatus;
    /**
     * Collection of transfer items.
     *
     * @var InventoryV2InventoryTransferItemResponse[]
     */
    protected $items;
    /**
     * Collection of custom fields.
     *
     * @var InventoryV2CustomFieldResponse[]
     */
    protected $customFields;

    /**
     * Inventory transfer Id.
     */
    public function getId(): int
    {
        return $this->id;
    }

    /**
     * Inventory transfer Id.
     */
    public function setId(int $id): self
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Type.
     */
    public function getTransferType(): string
    {
        return $this->transferType;
    }

    /**
     * Type.
     */
    public function setTransferType(string $transferType): self
    {
        $this->transferType = $transferType;

        return $this;
    }

    /**
     * Status.
     */
    public function getStatus(): string
    {
        return $this->status;
    }

    /**
     * Status.
     */
    public function setStatus(string $status): self
    {
        $this->status = $status;

        return $this;
    }

    /**
     * Number.
     */
    public function getNumber(): string
    {
        return $this->number;
    }

    /**
     * Number.
     */
    public function setNumber(string $number): self
    {
        $this->number = $number;

        return $this;
    }

    /**
     * Reference number.
     */
    public function getReferenceNumber(): string
    {
        return $this->referenceNumber;
    }

    /**
     * Reference number.
     */
    public function setReferenceNumber(string $referenceNumber): self
    {
        $this->referenceNumber = $referenceNumber;

        return $this;
    }

    /**
     * Inventory location to transfer from.
     */
    public function getFromLocationId(): int
    {
        return $this->fromLocationId;
    }

    /**
     * Inventory location to transfer from.
     */
    public function setFromLocationId(int $fromLocationId): self
    {
        $this->fromLocationId = $fromLocationId;

        return $this;
    }

    /**
     * Inventory location where transfer is going.
     */
    public function getToLocationId(): int
    {
        return $this->toLocationId;
    }

    /**
     * Inventory location where transfer is going.
     */
    public function setToLocationId(int $toLocationId): self
    {
        $this->toLocationId = $toLocationId;

        return $this;
    }

    /**
     * Employee who created this transfer.
     */
    public function getCreatedById(): ?int
    {
        return $this->createdById;
    }

    /**
     * Employee who created this transfer.
     */
    public function setCreatedById(?int $createdById): self
    {
        $this->createdById = $createdById;

        return $this;
    }

    /**
     * Memo/summary field.
     */
    public function getMemo(): string
    {
        return $this->memo;
    }

    /**
     * Memo/summary field.
     */
    public function setMemo(string $memo): self
    {
        $this->memo = $memo;

        return $this;
    }

    /**
     * Transfer date.
     */
    public function getDate(): \DateTime
    {
        return $this->date;
    }

    /**
     * Transfer date.
     */
    public function setDate(\DateTime $date): self
    {
        $this->date = $date;

        return $this;
    }

    /**
     * Transfer picked date.
     */
    public function getPickedDate(): ?\DateTime
    {
        return $this->pickedDate;
    }

    /**
     * Transfer picked date.
     */
    public function setPickedDate(?\DateTime $pickedDate): self
    {
        $this->pickedDate = $pickedDate;

        return $this;
    }

    /**
     * Transfer recevived date.
     */
    public function getReceivedDate(): ?\DateTime
    {
        return $this->receivedDate;
    }

    /**
     * Transfer recevived date.
     */
    public function setReceivedDate(?\DateTime $receivedDate): self
    {
        $this->receivedDate = $receivedDate;

        return $this;
    }

    /**
     * system created date.
     */
    public function getCreatedOn(): \DateTime
    {
        return $this->createdOn;
    }

    /**
     * system created date.
     */
    public function setCreatedOn(\DateTime $createdOn): self
    {
        $this->createdOn = $createdOn;

        return $this;
    }

    /**
     * last time transfer was modified date.
     */
    public function getModifiedOn(): \DateTime
    {
        return $this->modifiedOn;
    }

    /**
     * last time transfer was modified date.
     */
    public function setModifiedOn(\DateTime $modifiedOn): self
    {
        $this->modifiedOn = $modifiedOn;

        return $this;
    }

    /**
     * Batch.
     */
    public function getBatchId(): ?int
    {
        return $this->batchId;
    }

    /**
     * Batch.
     */
    public function setBatchId(?int $batchId): self
    {
        $this->batchId = $batchId;

        return $this;
    }

    /**
     * Sync status.
     *
     * @return mixed
     */
    public function getSyncStatus()
    {
        return $this->syncStatus;
    }

    /**
     * Sync status.
     *
     * @param mixed $syncStatus
     */
    public function setSyncStatus($syncStatus): self
    {
        $this->syncStatus = $syncStatus;

        return $this;
    }

    /**
     * Collection of transfer items.
     *
     * @return InventoryV2InventoryTransferItemResponse[]
     */
    public function getItems(): array
    {
        return $this->items;
    }

    /**
     * Collection of transfer items.
     *
     * @param InventoryV2InventoryTransferItemResponse[] $items
     */
    public function setItems(array $items): self
    {
        $this->items = $items;

        return $this;
    }

    /**
     * Collection of custom fields.
     *
     * @return InventoryV2CustomFieldResponse[]
     */
    public function getCustomFields(): array
    {
        return $this->customFields;
    }

    /**
     * Collection of custom fields.
     *
     * @param InventoryV2CustomFieldResponse[] $customFields
     */
    public function setCustomFields(array $customFields): self
    {
        $this->customFields = $customFields;

        return $this;
    }
}
