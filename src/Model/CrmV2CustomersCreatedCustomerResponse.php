<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CompWright\ServiceTitan\Model;

class CrmV2CustomersCreatedCustomerResponse
{
    /**
     * ID of the customer.
     *
     * @var int
     */
    protected $id;
    /**
     * False indicates that someone has deactivated the customer record, typically upon merging with another record.
     *
     * @var bool
     */
    protected $active;
    /**
     * Name of the customer.
     *
     * @var string
     */
    protected $name;
    /**
     * Residential or commercial.
     *
     * @var mixed
     */
    protected $type;
    /**
     * Bill-To address of the customer record.
     *
     * @var mixed
     */
    protected $address;
    /**
     * Customer record’s custom fields.
     *
     * @var CrmV2CustomersCustomFieldModel[]
     */
    protected $customFields;
    /**
     * Customer’s account balance.
     *
     * @var float
     */
    protected $balance;
    /**
     * Customer has been flagged as “do not mail”.
     *
     * @var bool
     */
    protected $doNotMail;
    /**
     * Customer has been flagged as “do not service”.
     *
     * @var bool
     */
    protected $doNotService;
    /**
     * DateTime (UTC) that customer record was created.
     *
     * @var \DateTime
     */
    protected $createdOn;
    /**
     * User ID who created the record.
     *
     * @var int
     */
    protected $createdById;
    /**
     * Modified on (UTC) for the record.
     *
     * @var \DateTime
     */
    protected $modifiedOn;
    /**
     * The customer ID of the record that this record was previously merged to.
     *
     * @var int|null
     */
    protected $mergedToId;
    /**
     * Locations for the customer.
     *
     * @var CrmV2LocationsCreateLocationResponse[]
     */
    protected $locations;
    /**
     * Contacts for the customer.
     *
     * @var CrmV2CustomersCustomerContact[]
     */
    protected $contacts;

    /**
     * ID of the customer.
     */
    public function getId(): int
    {
        return $this->id;
    }

    /**
     * ID of the customer.
     */
    public function setId(int $id): self
    {
        $this->id = $id;

        return $this;
    }

    /**
     * False indicates that someone has deactivated the customer record, typically upon merging with another record.
     */
    public function getActive(): bool
    {
        return $this->active;
    }

    /**
     * False indicates that someone has deactivated the customer record, typically upon merging with another record.
     */
    public function setActive(bool $active): self
    {
        $this->active = $active;

        return $this;
    }

    /**
     * Name of the customer.
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Name of the customer.
     */
    public function setName(string $name): self
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Residential or commercial.
     *
     * @return mixed
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Residential or commercial.
     *
     * @param mixed $type
     */
    public function setType($type): self
    {
        $this->type = $type;

        return $this;
    }

    /**
     * Bill-To address of the customer record.
     *
     * @return mixed
     */
    public function getAddress()
    {
        return $this->address;
    }

    /**
     * Bill-To address of the customer record.
     *
     * @param mixed $address
     */
    public function setAddress($address): self
    {
        $this->address = $address;

        return $this;
    }

    /**
     * Customer record’s custom fields.
     *
     * @return CrmV2CustomersCustomFieldModel[]
     */
    public function getCustomFields(): array
    {
        return $this->customFields;
    }

    /**
     * Customer record’s custom fields.
     *
     * @param CrmV2CustomersCustomFieldModel[] $customFields
     */
    public function setCustomFields(array $customFields): self
    {
        $this->customFields = $customFields;

        return $this;
    }

    /**
     * Customer’s account balance.
     */
    public function getBalance(): float
    {
        return $this->balance;
    }

    /**
     * Customer’s account balance.
     */
    public function setBalance(float $balance): self
    {
        $this->balance = $balance;

        return $this;
    }

    /**
     * Customer has been flagged as “do not mail”.
     */
    public function getDoNotMail(): bool
    {
        return $this->doNotMail;
    }

    /**
     * Customer has been flagged as “do not mail”.
     */
    public function setDoNotMail(bool $doNotMail): self
    {
        $this->doNotMail = $doNotMail;

        return $this;
    }

    /**
     * Customer has been flagged as “do not service”.
     */
    public function getDoNotService(): bool
    {
        return $this->doNotService;
    }

    /**
     * Customer has been flagged as “do not service”.
     */
    public function setDoNotService(bool $doNotService): self
    {
        $this->doNotService = $doNotService;

        return $this;
    }

    /**
     * DateTime (UTC) that customer record was created.
     */
    public function getCreatedOn(): \DateTime
    {
        return $this->createdOn;
    }

    /**
     * DateTime (UTC) that customer record was created.
     */
    public function setCreatedOn(\DateTime $createdOn): self
    {
        $this->createdOn = $createdOn;

        return $this;
    }

    /**
     * User ID who created the record.
     */
    public function getCreatedById(): int
    {
        return $this->createdById;
    }

    /**
     * User ID who created the record.
     */
    public function setCreatedById(int $createdById): self
    {
        $this->createdById = $createdById;

        return $this;
    }

    /**
     * Modified on (UTC) for the record.
     */
    public function getModifiedOn(): \DateTime
    {
        return $this->modifiedOn;
    }

    /**
     * Modified on (UTC) for the record.
     */
    public function setModifiedOn(\DateTime $modifiedOn): self
    {
        $this->modifiedOn = $modifiedOn;

        return $this;
    }

    /**
     * The customer ID of the record that this record was previously merged to.
     */
    public function getMergedToId(): ?int
    {
        return $this->mergedToId;
    }

    /**
     * The customer ID of the record that this record was previously merged to.
     */
    public function setMergedToId(?int $mergedToId): self
    {
        $this->mergedToId = $mergedToId;

        return $this;
    }

    /**
     * Locations for the customer.
     *
     * @return CrmV2LocationsCreateLocationResponse[]
     */
    public function getLocations(): array
    {
        return $this->locations;
    }

    /**
     * Locations for the customer.
     *
     * @param CrmV2LocationsCreateLocationResponse[] $locations
     */
    public function setLocations(array $locations): self
    {
        $this->locations = $locations;

        return $this;
    }

    /**
     * Contacts for the customer.
     *
     * @return CrmV2CustomersCustomerContact[]
     */
    public function getContacts(): array
    {
        return $this->contacts;
    }

    /**
     * Contacts for the customer.
     *
     * @param CrmV2CustomersCustomerContact[] $contacts
     */
    public function setContacts(array $contacts): self
    {
        $this->contacts = $contacts;

        return $this;
    }
}
