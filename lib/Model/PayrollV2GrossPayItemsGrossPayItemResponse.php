<?php
/**
 * PayrollV2GrossPayItemsGrossPayItemResponse
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  CompWright\ServiceTitan
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Payroll
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: Jonathon Hill, CompWright Enterprises LLC (https://compwright.com)
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace CompWright\ServiceTitan\Model;

use \ArrayAccess;
use \CompWright\ServiceTitan\ObjectSerializer;

/**
 * PayrollV2GrossPayItemsGrossPayItemResponse Class Doc Comment
 *
 * @category Class
 * @package  CompWright\ServiceTitan
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class PayrollV2GrossPayItemsGrossPayItemResponse implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Payroll.V2.GrossPayItems.GrossPayItemResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'int',
        'employee_id' => 'int',
        'employee_type' => 'OneOfPayrollV2EmployeeType',
        'business_unit_name' => 'string',
        'payroll_id' => 'int',
        'date' => '\DateTime',
        'activity' => 'string',
        'activity_code_id' => 'int',
        'activity_code' => 'string',
        'amount' => 'float',
        'amount_adjustment' => 'float',
        'payout_business_unit_name' => 'string',
        'gross_pay_item_type' => 'OneOfPayrollV2GrossPayItemType',
        'started_on' => '\DateTime',
        'ended_on' => '\DateTime',
        'paid_duration_hours' => 'float',
        'paid_time_type' => 'OneOfPayrollV2PaidTimeType',
        'job_id' => 'int',
        'job_number' => 'string',
        'job_type_name' => 'string',
        'project_number' => 'string',
        'project_id' => 'int',
        'invoice_id' => 'int',
        'invoice_number' => 'string',
        'invoice_item_id' => 'int',
        'customer_id' => 'int',
        'customer_name' => 'string',
        'location_id' => 'int',
        'location_name' => 'string',
        'location_address' => 'string',
        'location_zip' => 'string',
        'zone_name' => 'string',
        'tax_zone_name' => 'string',
        'labor_type_id' => 'int',
        'labor_type_code' => 'string',
        'is_prevailing_wage_job' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'int64',
        'employee_id' => 'int64',
        'employee_type' => null,
        'business_unit_name' => null,
        'payroll_id' => 'int64',
        'date' => 'date-time',
        'activity' => null,
        'activity_code_id' => 'int64',
        'activity_code' => null,
        'amount' => 'decimal',
        'amount_adjustment' => 'decimal',
        'payout_business_unit_name' => null,
        'gross_pay_item_type' => null,
        'started_on' => 'date-time',
        'ended_on' => 'date-time',
        'paid_duration_hours' => 'decimal',
        'paid_time_type' => null,
        'job_id' => 'int64',
        'job_number' => null,
        'job_type_name' => null,
        'project_number' => null,
        'project_id' => 'int64',
        'invoice_id' => 'int64',
        'invoice_number' => null,
        'invoice_item_id' => 'int64',
        'customer_id' => 'int64',
        'customer_name' => null,
        'location_id' => 'int64',
        'location_name' => null,
        'location_address' => null,
        'location_zip' => null,
        'zone_name' => null,
        'tax_zone_name' => null,
        'labor_type_id' => 'int64',
        'labor_type_code' => null,
        'is_prevailing_wage_job' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'employee_id' => 'employeeId',
        'employee_type' => 'employeeType',
        'business_unit_name' => 'businessUnitName',
        'payroll_id' => 'payrollId',
        'date' => 'date',
        'activity' => 'activity',
        'activity_code_id' => 'activityCodeId',
        'activity_code' => 'activityCode',
        'amount' => 'amount',
        'amount_adjustment' => 'amountAdjustment',
        'payout_business_unit_name' => 'payoutBusinessUnitName',
        'gross_pay_item_type' => 'grossPayItemType',
        'started_on' => 'startedOn',
        'ended_on' => 'endedOn',
        'paid_duration_hours' => 'paidDurationHours',
        'paid_time_type' => 'paidTimeType',
        'job_id' => 'jobId',
        'job_number' => 'jobNumber',
        'job_type_name' => 'jobTypeName',
        'project_number' => 'projectNumber',
        'project_id' => 'projectId',
        'invoice_id' => 'invoiceId',
        'invoice_number' => 'invoiceNumber',
        'invoice_item_id' => 'invoiceItemId',
        'customer_id' => 'customerId',
        'customer_name' => 'customerName',
        'location_id' => 'locationId',
        'location_name' => 'locationName',
        'location_address' => 'locationAddress',
        'location_zip' => 'locationZip',
        'zone_name' => 'zoneName',
        'tax_zone_name' => 'taxZoneName',
        'labor_type_id' => 'laborTypeId',
        'labor_type_code' => 'laborTypeCode',
        'is_prevailing_wage_job' => 'isPrevailingWageJob'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'employee_id' => 'setEmployeeId',
        'employee_type' => 'setEmployeeType',
        'business_unit_name' => 'setBusinessUnitName',
        'payroll_id' => 'setPayrollId',
        'date' => 'setDate',
        'activity' => 'setActivity',
        'activity_code_id' => 'setActivityCodeId',
        'activity_code' => 'setActivityCode',
        'amount' => 'setAmount',
        'amount_adjustment' => 'setAmountAdjustment',
        'payout_business_unit_name' => 'setPayoutBusinessUnitName',
        'gross_pay_item_type' => 'setGrossPayItemType',
        'started_on' => 'setStartedOn',
        'ended_on' => 'setEndedOn',
        'paid_duration_hours' => 'setPaidDurationHours',
        'paid_time_type' => 'setPaidTimeType',
        'job_id' => 'setJobId',
        'job_number' => 'setJobNumber',
        'job_type_name' => 'setJobTypeName',
        'project_number' => 'setProjectNumber',
        'project_id' => 'setProjectId',
        'invoice_id' => 'setInvoiceId',
        'invoice_number' => 'setInvoiceNumber',
        'invoice_item_id' => 'setInvoiceItemId',
        'customer_id' => 'setCustomerId',
        'customer_name' => 'setCustomerName',
        'location_id' => 'setLocationId',
        'location_name' => 'setLocationName',
        'location_address' => 'setLocationAddress',
        'location_zip' => 'setLocationZip',
        'zone_name' => 'setZoneName',
        'tax_zone_name' => 'setTaxZoneName',
        'labor_type_id' => 'setLaborTypeId',
        'labor_type_code' => 'setLaborTypeCode',
        'is_prevailing_wage_job' => 'setIsPrevailingWageJob'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'employee_id' => 'getEmployeeId',
        'employee_type' => 'getEmployeeType',
        'business_unit_name' => 'getBusinessUnitName',
        'payroll_id' => 'getPayrollId',
        'date' => 'getDate',
        'activity' => 'getActivity',
        'activity_code_id' => 'getActivityCodeId',
        'activity_code' => 'getActivityCode',
        'amount' => 'getAmount',
        'amount_adjustment' => 'getAmountAdjustment',
        'payout_business_unit_name' => 'getPayoutBusinessUnitName',
        'gross_pay_item_type' => 'getGrossPayItemType',
        'started_on' => 'getStartedOn',
        'ended_on' => 'getEndedOn',
        'paid_duration_hours' => 'getPaidDurationHours',
        'paid_time_type' => 'getPaidTimeType',
        'job_id' => 'getJobId',
        'job_number' => 'getJobNumber',
        'job_type_name' => 'getJobTypeName',
        'project_number' => 'getProjectNumber',
        'project_id' => 'getProjectId',
        'invoice_id' => 'getInvoiceId',
        'invoice_number' => 'getInvoiceNumber',
        'invoice_item_id' => 'getInvoiceItemId',
        'customer_id' => 'getCustomerId',
        'customer_name' => 'getCustomerName',
        'location_id' => 'getLocationId',
        'location_name' => 'getLocationName',
        'location_address' => 'getLocationAddress',
        'location_zip' => 'getLocationZip',
        'zone_name' => 'getZoneName',
        'tax_zone_name' => 'getTaxZoneName',
        'labor_type_id' => 'getLaborTypeId',
        'labor_type_code' => 'getLaborTypeCode',
        'is_prevailing_wage_job' => 'getIsPrevailingWageJob'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['employee_id'] = $data['employee_id'] ?? null;
        $this->container['employee_type'] = $data['employee_type'] ?? null;
        $this->container['business_unit_name'] = $data['business_unit_name'] ?? null;
        $this->container['payroll_id'] = $data['payroll_id'] ?? null;
        $this->container['date'] = $data['date'] ?? null;
        $this->container['activity'] = $data['activity'] ?? null;
        $this->container['activity_code_id'] = $data['activity_code_id'] ?? null;
        $this->container['activity_code'] = $data['activity_code'] ?? null;
        $this->container['amount'] = $data['amount'] ?? null;
        $this->container['amount_adjustment'] = $data['amount_adjustment'] ?? null;
        $this->container['payout_business_unit_name'] = $data['payout_business_unit_name'] ?? null;
        $this->container['gross_pay_item_type'] = $data['gross_pay_item_type'] ?? null;
        $this->container['started_on'] = $data['started_on'] ?? null;
        $this->container['ended_on'] = $data['ended_on'] ?? null;
        $this->container['paid_duration_hours'] = $data['paid_duration_hours'] ?? null;
        $this->container['paid_time_type'] = $data['paid_time_type'] ?? null;
        $this->container['job_id'] = $data['job_id'] ?? null;
        $this->container['job_number'] = $data['job_number'] ?? null;
        $this->container['job_type_name'] = $data['job_type_name'] ?? null;
        $this->container['project_number'] = $data['project_number'] ?? null;
        $this->container['project_id'] = $data['project_id'] ?? null;
        $this->container['invoice_id'] = $data['invoice_id'] ?? null;
        $this->container['invoice_number'] = $data['invoice_number'] ?? null;
        $this->container['invoice_item_id'] = $data['invoice_item_id'] ?? null;
        $this->container['customer_id'] = $data['customer_id'] ?? null;
        $this->container['customer_name'] = $data['customer_name'] ?? null;
        $this->container['location_id'] = $data['location_id'] ?? null;
        $this->container['location_name'] = $data['location_name'] ?? null;
        $this->container['location_address'] = $data['location_address'] ?? null;
        $this->container['location_zip'] = $data['location_zip'] ?? null;
        $this->container['zone_name'] = $data['zone_name'] ?? null;
        $this->container['tax_zone_name'] = $data['tax_zone_name'] ?? null;
        $this->container['labor_type_id'] = $data['labor_type_id'] ?? null;
        $this->container['labor_type_code'] = $data['labor_type_code'] ?? null;
        $this->container['is_prevailing_wage_job'] = $data['is_prevailing_wage_job'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['payroll_id'] === null) {
            $invalidProperties[] = "'payroll_id' can't be null";
        }
        if ($this->container['date'] === null) {
            $invalidProperties[] = "'date' can't be null";
        }
        if ($this->container['amount'] === null) {
            $invalidProperties[] = "'amount' can't be null";
        }
        if ($this->container['gross_pay_item_type'] === null) {
            $invalidProperties[] = "'gross_pay_item_type' can't be null";
        }
        if ($this->container['job_id'] === null) {
            $invalidProperties[] = "'job_id' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int|null $id The gross pay item ID
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets employee_id
     *
     * @return int|null
     */
    public function getEmployeeId()
    {
        return $this->container['employee_id'];
    }

    /**
     * Sets employee_id
     *
     * @param int|null $employee_id The employee/technician ID
     *
     * @return self
     */
    public function setEmployeeId($employee_id)
    {
        $this->container['employee_id'] = $employee_id;

        return $this;
    }

    /**
     * Gets employee_type
     *
     * @return OneOfPayrollV2EmployeeType|null
     */
    public function getEmployeeType()
    {
        return $this->container['employee_type'];
    }

    /**
     * Sets employee_type
     *
     * @param OneOfPayrollV2EmployeeType|null $employee_type The employee type
     *
     * @return self
     */
    public function setEmployeeType($employee_type)
    {
        $this->container['employee_type'] = $employee_type;

        return $this;
    }

    /**
     * Gets business_unit_name
     *
     * @return string|null
     */
    public function getBusinessUnitName()
    {
        return $this->container['business_unit_name'];
    }

    /**
     * Sets business_unit_name
     *
     * @param string|null $business_unit_name The business unit name
     *
     * @return self
     */
    public function setBusinessUnitName($business_unit_name)
    {
        $this->container['business_unit_name'] = $business_unit_name;

        return $this;
    }

    /**
     * Gets payroll_id
     *
     * @return int
     */
    public function getPayrollId()
    {
        return $this->container['payroll_id'];
    }

    /**
     * Sets payroll_id
     *
     * @param int $payroll_id The payroll ID
     *
     * @return self
     */
    public function setPayrollId($payroll_id)
    {
        $this->container['payroll_id'] = $payroll_id;

        return $this;
    }

    /**
     * Gets date
     *
     * @return \DateTime
     */
    public function getDate()
    {
        return $this->container['date'];
    }

    /**
     * Sets date
     *
     * @param \DateTime $date The date (UTC) of the gross pay item
     *
     * @return self
     */
    public function setDate($date)
    {
        $this->container['date'] = $date;

        return $this;
    }

    /**
     * Gets activity
     *
     * @return string|null
     */
    public function getActivity()
    {
        return $this->container['activity'];
    }

    /**
     * Sets activity
     *
     * @param string|null $activity The activity
     *
     * @return self
     */
    public function setActivity($activity)
    {
        $this->container['activity'] = $activity;

        return $this;
    }

    /**
     * Gets activity_code_id
     *
     * @return int|null
     */
    public function getActivityCodeId()
    {
        return $this->container['activity_code_id'];
    }

    /**
     * Sets activity_code_id
     *
     * @param int|null $activity_code_id The payroll activity code ID
     *
     * @return self
     */
    public function setActivityCodeId($activity_code_id)
    {
        $this->container['activity_code_id'] = $activity_code_id;

        return $this;
    }

    /**
     * Gets activity_code
     *
     * @return string|null
     */
    public function getActivityCode()
    {
        return $this->container['activity_code'];
    }

    /**
     * Sets activity_code
     *
     * @param string|null $activity_code The payroll activity code name
     *
     * @return self
     */
    public function setActivityCode($activity_code)
    {
        $this->container['activity_code'] = $activity_code;

        return $this;
    }

    /**
     * Gets amount
     *
     * @return float
     */
    public function getAmount()
    {
        return $this->container['amount'];
    }

    /**
     * Sets amount
     *
     * @param float $amount The amount
     *
     * @return self
     */
    public function setAmount($amount)
    {
        $this->container['amount'] = $amount;

        return $this;
    }

    /**
     * Gets amount_adjustment
     *
     * @return float|null
     */
    public function getAmountAdjustment()
    {
        return $this->container['amount_adjustment'];
    }

    /**
     * Sets amount_adjustment
     *
     * @param float|null $amount_adjustment The amount adjustment
     *
     * @return self
     */
    public function setAmountAdjustment($amount_adjustment)
    {
        $this->container['amount_adjustment'] = $amount_adjustment;

        return $this;
    }

    /**
     * Gets payout_business_unit_name
     *
     * @return string|null
     */
    public function getPayoutBusinessUnitName()
    {
        return $this->container['payout_business_unit_name'];
    }

    /**
     * Sets payout_business_unit_name
     *
     * @param string|null $payout_business_unit_name The payout business unit name
     *
     * @return self
     */
    public function setPayoutBusinessUnitName($payout_business_unit_name)
    {
        $this->container['payout_business_unit_name'] = $payout_business_unit_name;

        return $this;
    }

    /**
     * Gets gross_pay_item_type
     *
     * @return OneOfPayrollV2GrossPayItemType
     */
    public function getGrossPayItemType()
    {
        return $this->container['gross_pay_item_type'];
    }

    /**
     * Sets gross_pay_item_type
     *
     * @param OneOfPayrollV2GrossPayItemType $gross_pay_item_type Type of the gross pay item
     *
     * @return self
     */
    public function setGrossPayItemType($gross_pay_item_type)
    {
        $this->container['gross_pay_item_type'] = $gross_pay_item_type;

        return $this;
    }

    /**
     * Gets started_on
     *
     * @return \DateTime|null
     */
    public function getStartedOn()
    {
        return $this->container['started_on'];
    }

    /**
     * Sets started_on
     *
     * @param \DateTime|null $started_on The start time (UTC)
     *
     * @return self
     */
    public function setStartedOn($started_on)
    {
        $this->container['started_on'] = $started_on;

        return $this;
    }

    /**
     * Gets ended_on
     *
     * @return \DateTime|null
     */
    public function getEndedOn()
    {
        return $this->container['ended_on'];
    }

    /**
     * Sets ended_on
     *
     * @param \DateTime|null $ended_on The end time (UTC)
     *
     * @return self
     */
    public function setEndedOn($ended_on)
    {
        $this->container['ended_on'] = $ended_on;

        return $this;
    }

    /**
     * Gets paid_duration_hours
     *
     * @return float|null
     */
    public function getPaidDurationHours()
    {
        return $this->container['paid_duration_hours'];
    }

    /**
     * Sets paid_duration_hours
     *
     * @param float|null $paid_duration_hours The paid duration in hours
     *
     * @return self
     */
    public function setPaidDurationHours($paid_duration_hours)
    {
        $this->container['paid_duration_hours'] = $paid_duration_hours;

        return $this;
    }

    /**
     * Gets paid_time_type
     *
     * @return OneOfPayrollV2PaidTimeType|null
     */
    public function getPaidTimeType()
    {
        return $this->container['paid_time_type'];
    }

    /**
     * Sets paid_time_type
     *
     * @param OneOfPayrollV2PaidTimeType|null $paid_time_type Type of the paid time
     *
     * @return self
     */
    public function setPaidTimeType($paid_time_type)
    {
        $this->container['paid_time_type'] = $paid_time_type;

        return $this;
    }

    /**
     * Gets job_id
     *
     * @return int
     */
    public function getJobId()
    {
        return $this->container['job_id'];
    }

    /**
     * Sets job_id
     *
     * @param int $job_id The job ID
     *
     * @return self
     */
    public function setJobId($job_id)
    {
        $this->container['job_id'] = $job_id;

        return $this;
    }

    /**
     * Gets job_number
     *
     * @return string|null
     */
    public function getJobNumber()
    {
        return $this->container['job_number'];
    }

    /**
     * Sets job_number
     *
     * @param string|null $job_number The job number
     *
     * @return self
     */
    public function setJobNumber($job_number)
    {
        $this->container['job_number'] = $job_number;

        return $this;
    }

    /**
     * Gets job_type_name
     *
     * @return string|null
     */
    public function getJobTypeName()
    {
        return $this->container['job_type_name'];
    }

    /**
     * Sets job_type_name
     *
     * @param string|null $job_type_name Name of the job type
     *
     * @return self
     */
    public function setJobTypeName($job_type_name)
    {
        $this->container['job_type_name'] = $job_type_name;

        return $this;
    }

    /**
     * Gets project_number
     *
     * @return string|null
     */
    public function getProjectNumber()
    {
        return $this->container['project_number'];
    }

    /**
     * Sets project_number
     *
     * @param string|null $project_number The project number
     *
     * @return self
     */
    public function setProjectNumber($project_number)
    {
        $this->container['project_number'] = $project_number;

        return $this;
    }

    /**
     * Gets project_id
     *
     * @return int|null
     */
    public function getProjectId()
    {
        return $this->container['project_id'];
    }

    /**
     * Sets project_id
     *
     * @param int|null $project_id The project ID
     *
     * @return self
     */
    public function setProjectId($project_id)
    {
        $this->container['project_id'] = $project_id;

        return $this;
    }

    /**
     * Gets invoice_id
     *
     * @return int|null
     */
    public function getInvoiceId()
    {
        return $this->container['invoice_id'];
    }

    /**
     * Sets invoice_id
     *
     * @param int|null $invoice_id The invoice ID
     *
     * @return self
     */
    public function setInvoiceId($invoice_id)
    {
        $this->container['invoice_id'] = $invoice_id;

        return $this;
    }

    /**
     * Gets invoice_number
     *
     * @return string|null
     */
    public function getInvoiceNumber()
    {
        return $this->container['invoice_number'];
    }

    /**
     * Sets invoice_number
     *
     * @param string|null $invoice_number The invoice number
     *
     * @return self
     */
    public function setInvoiceNumber($invoice_number)
    {
        $this->container['invoice_number'] = $invoice_number;

        return $this;
    }

    /**
     * Gets invoice_item_id
     *
     * @return int|null
     */
    public function getInvoiceItemId()
    {
        return $this->container['invoice_item_id'];
    }

    /**
     * Sets invoice_item_id
     *
     * @param int|null $invoice_item_id The invoice item ID
     *
     * @return self
     */
    public function setInvoiceItemId($invoice_item_id)
    {
        $this->container['invoice_item_id'] = $invoice_item_id;

        return $this;
    }

    /**
     * Gets customer_id
     *
     * @return int|null
     */
    public function getCustomerId()
    {
        return $this->container['customer_id'];
    }

    /**
     * Sets customer_id
     *
     * @param int|null $customer_id The customer ID
     *
     * @return self
     */
    public function setCustomerId($customer_id)
    {
        $this->container['customer_id'] = $customer_id;

        return $this;
    }

    /**
     * Gets customer_name
     *
     * @return string|null
     */
    public function getCustomerName()
    {
        return $this->container['customer_name'];
    }

    /**
     * Sets customer_name
     *
     * @param string|null $customer_name The customer name
     *
     * @return self
     */
    public function setCustomerName($customer_name)
    {
        $this->container['customer_name'] = $customer_name;

        return $this;
    }

    /**
     * Gets location_id
     *
     * @return int|null
     */
    public function getLocationId()
    {
        return $this->container['location_id'];
    }

    /**
     * Sets location_id
     *
     * @param int|null $location_id The location ID
     *
     * @return self
     */
    public function setLocationId($location_id)
    {
        $this->container['location_id'] = $location_id;

        return $this;
    }

    /**
     * Gets location_name
     *
     * @return string|null
     */
    public function getLocationName()
    {
        return $this->container['location_name'];
    }

    /**
     * Sets location_name
     *
     * @param string|null $location_name The location name
     *
     * @return self
     */
    public function setLocationName($location_name)
    {
        $this->container['location_name'] = $location_name;

        return $this;
    }

    /**
     * Gets location_address
     *
     * @return string|null
     */
    public function getLocationAddress()
    {
        return $this->container['location_address'];
    }

    /**
     * Sets location_address
     *
     * @param string|null $location_address The location address
     *
     * @return self
     */
    public function setLocationAddress($location_address)
    {
        $this->container['location_address'] = $location_address;

        return $this;
    }

    /**
     * Gets location_zip
     *
     * @return string|null
     */
    public function getLocationZip()
    {
        return $this->container['location_zip'];
    }

    /**
     * Sets location_zip
     *
     * @param string|null $location_zip The location zip
     *
     * @return self
     */
    public function setLocationZip($location_zip)
    {
        $this->container['location_zip'] = $location_zip;

        return $this;
    }

    /**
     * Gets zone_name
     *
     * @return string|null
     */
    public function getZoneName()
    {
        return $this->container['zone_name'];
    }

    /**
     * Sets zone_name
     *
     * @param string|null $zone_name The zone name
     *
     * @return self
     */
    public function setZoneName($zone_name)
    {
        $this->container['zone_name'] = $zone_name;

        return $this;
    }

    /**
     * Gets tax_zone_name
     *
     * @return string|null
     */
    public function getTaxZoneName()
    {
        return $this->container['tax_zone_name'];
    }

    /**
     * Sets tax_zone_name
     *
     * @param string|null $tax_zone_name The tax zone name
     *
     * @return self
     */
    public function setTaxZoneName($tax_zone_name)
    {
        $this->container['tax_zone_name'] = $tax_zone_name;

        return $this;
    }

    /**
     * Gets labor_type_id
     *
     * @return int|null
     */
    public function getLaborTypeId()
    {
        return $this->container['labor_type_id'];
    }

    /**
     * Sets labor_type_id
     *
     * @param int|null $labor_type_id ID of the labor type
     *
     * @return self
     */
    public function setLaborTypeId($labor_type_id)
    {
        $this->container['labor_type_id'] = $labor_type_id;

        return $this;
    }

    /**
     * Gets labor_type_code
     *
     * @return string|null
     */
    public function getLaborTypeCode()
    {
        return $this->container['labor_type_code'];
    }

    /**
     * Sets labor_type_code
     *
     * @param string|null $labor_type_code Code of the labor type
     *
     * @return self
     */
    public function setLaborTypeCode($labor_type_code)
    {
        $this->container['labor_type_code'] = $labor_type_code;

        return $this;
    }

    /**
     * Gets is_prevailing_wage_job
     *
     * @return bool|null
     */
    public function getIsPrevailingWageJob()
    {
        return $this->container['is_prevailing_wage_job'];
    }

    /**
     * Sets is_prevailing_wage_job
     *
     * @param bool|null $is_prevailing_wage_job Defines whether it's a prevailing wage job
     *
     * @return self
     */
    public function setIsPrevailingWageJob($is_prevailing_wage_job)
    {
        $this->container['is_prevailing_wage_job'] = $is_prevailing_wage_job;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


