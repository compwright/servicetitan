<?php
/**
 * InventoryV2InventoryReceiptResponse
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  CompWright\ServiceTitan
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Inventory
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: Jonathon Hill, CompWright Enterprises LLC (https://compwright.com)
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace CompWright\ServiceTitan\Model;

use \ArrayAccess;
use \CompWright\ServiceTitan\ObjectSerializer;

/**
 * InventoryV2InventoryReceiptResponse Class Doc Comment
 *
 * @category Class
 * @description Inventory receipt response
 * @package  CompWright\ServiceTitan
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class InventoryV2InventoryReceiptResponse implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Inventory.V2.InventoryReceiptResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'int',
        'active' => 'bool',
        'number' => 'string',
        'vendor_invoice_number' => 'string',
        'created_by_id' => 'int',
        'memo' => 'string',
        'purchase_order_id' => 'int',
        'bill_id' => 'int',
        'job_id' => 'int',
        'business_unit_id' => 'int',
        'vendor_id' => 'int',
        'technician_id' => 'int',
        'inventory_location_id' => 'int',
        'ship_to' => 'OneOfInventoryV2AddressResponse',
        'ship_to_description' => 'string',
        'receipt_amount' => 'float',
        'tax_amount' => 'float',
        'shipping_amount' => 'float',
        'received_on' => '\DateTime',
        'created_on' => '\DateTime',
        'modified_on' => '\DateTime',
        'batch_id' => 'int',
        'sync_status' => 'OneOfInventoryV2SyncStatus',
        'items' => '\CompWright\ServiceTitan\Model\InventoryV2InventoryReceiptItemResponse[]',
        'custom_fields' => '\CompWright\ServiceTitan\Model\InventoryV2CustomFieldResponse[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'int64',
        'active' => null,
        'number' => null,
        'vendor_invoice_number' => null,
        'created_by_id' => 'int64',
        'memo' => null,
        'purchase_order_id' => 'int64',
        'bill_id' => 'int64',
        'job_id' => 'int64',
        'business_unit_id' => 'int64',
        'vendor_id' => 'int64',
        'technician_id' => 'int64',
        'inventory_location_id' => 'int64',
        'ship_to' => null,
        'ship_to_description' => null,
        'receipt_amount' => 'decimal',
        'tax_amount' => 'decimal',
        'shipping_amount' => 'decimal',
        'received_on' => 'date-time',
        'created_on' => 'date-time',
        'modified_on' => 'date-time',
        'batch_id' => 'int64',
        'sync_status' => null,
        'items' => null,
        'custom_fields' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'active' => 'active',
        'number' => 'number',
        'vendor_invoice_number' => 'vendorInvoiceNumber',
        'created_by_id' => 'createdById',
        'memo' => 'memo',
        'purchase_order_id' => 'purchaseOrderId',
        'bill_id' => 'billId',
        'job_id' => 'jobId',
        'business_unit_id' => 'businessUnitId',
        'vendor_id' => 'vendorId',
        'technician_id' => 'technicianId',
        'inventory_location_id' => 'inventoryLocationId',
        'ship_to' => 'shipTo',
        'ship_to_description' => 'shipToDescription',
        'receipt_amount' => 'receiptAmount',
        'tax_amount' => 'taxAmount',
        'shipping_amount' => 'shippingAmount',
        'received_on' => 'receivedOn',
        'created_on' => 'createdOn',
        'modified_on' => 'modifiedOn',
        'batch_id' => 'batchId',
        'sync_status' => 'syncStatus',
        'items' => 'items',
        'custom_fields' => 'customFields'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'active' => 'setActive',
        'number' => 'setNumber',
        'vendor_invoice_number' => 'setVendorInvoiceNumber',
        'created_by_id' => 'setCreatedById',
        'memo' => 'setMemo',
        'purchase_order_id' => 'setPurchaseOrderId',
        'bill_id' => 'setBillId',
        'job_id' => 'setJobId',
        'business_unit_id' => 'setBusinessUnitId',
        'vendor_id' => 'setVendorId',
        'technician_id' => 'setTechnicianId',
        'inventory_location_id' => 'setInventoryLocationId',
        'ship_to' => 'setShipTo',
        'ship_to_description' => 'setShipToDescription',
        'receipt_amount' => 'setReceiptAmount',
        'tax_amount' => 'setTaxAmount',
        'shipping_amount' => 'setShippingAmount',
        'received_on' => 'setReceivedOn',
        'created_on' => 'setCreatedOn',
        'modified_on' => 'setModifiedOn',
        'batch_id' => 'setBatchId',
        'sync_status' => 'setSyncStatus',
        'items' => 'setItems',
        'custom_fields' => 'setCustomFields'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'active' => 'getActive',
        'number' => 'getNumber',
        'vendor_invoice_number' => 'getVendorInvoiceNumber',
        'created_by_id' => 'getCreatedById',
        'memo' => 'getMemo',
        'purchase_order_id' => 'getPurchaseOrderId',
        'bill_id' => 'getBillId',
        'job_id' => 'getJobId',
        'business_unit_id' => 'getBusinessUnitId',
        'vendor_id' => 'getVendorId',
        'technician_id' => 'getTechnicianId',
        'inventory_location_id' => 'getInventoryLocationId',
        'ship_to' => 'getShipTo',
        'ship_to_description' => 'getShipToDescription',
        'receipt_amount' => 'getReceiptAmount',
        'tax_amount' => 'getTaxAmount',
        'shipping_amount' => 'getShippingAmount',
        'received_on' => 'getReceivedOn',
        'created_on' => 'getCreatedOn',
        'modified_on' => 'getModifiedOn',
        'batch_id' => 'getBatchId',
        'sync_status' => 'getSyncStatus',
        'items' => 'getItems',
        'custom_fields' => 'getCustomFields'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['active'] = $data['active'] ?? null;
        $this->container['number'] = $data['number'] ?? null;
        $this->container['vendor_invoice_number'] = $data['vendor_invoice_number'] ?? null;
        $this->container['created_by_id'] = $data['created_by_id'] ?? null;
        $this->container['memo'] = $data['memo'] ?? null;
        $this->container['purchase_order_id'] = $data['purchase_order_id'] ?? null;
        $this->container['bill_id'] = $data['bill_id'] ?? null;
        $this->container['job_id'] = $data['job_id'] ?? null;
        $this->container['business_unit_id'] = $data['business_unit_id'] ?? null;
        $this->container['vendor_id'] = $data['vendor_id'] ?? null;
        $this->container['technician_id'] = $data['technician_id'] ?? null;
        $this->container['inventory_location_id'] = $data['inventory_location_id'] ?? null;
        $this->container['ship_to'] = $data['ship_to'] ?? null;
        $this->container['ship_to_description'] = $data['ship_to_description'] ?? null;
        $this->container['receipt_amount'] = $data['receipt_amount'] ?? null;
        $this->container['tax_amount'] = $data['tax_amount'] ?? null;
        $this->container['shipping_amount'] = $data['shipping_amount'] ?? null;
        $this->container['received_on'] = $data['received_on'] ?? null;
        $this->container['created_on'] = $data['created_on'] ?? null;
        $this->container['modified_on'] = $data['modified_on'] ?? null;
        $this->container['batch_id'] = $data['batch_id'] ?? null;
        $this->container['sync_status'] = $data['sync_status'] ?? null;
        $this->container['items'] = $data['items'] ?? null;
        $this->container['custom_fields'] = $data['custom_fields'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['id'] === null) {
            $invalidProperties[] = "'id' can't be null";
        }
        if ($this->container['active'] === null) {
            $invalidProperties[] = "'active' can't be null";
        }
        if ($this->container['number'] === null) {
            $invalidProperties[] = "'number' can't be null";
        }
        if ($this->container['vendor_invoice_number'] === null) {
            $invalidProperties[] = "'vendor_invoice_number' can't be null";
        }
        if ($this->container['memo'] === null) {
            $invalidProperties[] = "'memo' can't be null";
        }
        if ($this->container['purchase_order_id'] === null) {
            $invalidProperties[] = "'purchase_order_id' can't be null";
        }
        if ($this->container['vendor_id'] === null) {
            $invalidProperties[] = "'vendor_id' can't be null";
        }
        if ($this->container['inventory_location_id'] === null) {
            $invalidProperties[] = "'inventory_location_id' can't be null";
        }
        if ($this->container['ship_to_description'] === null) {
            $invalidProperties[] = "'ship_to_description' can't be null";
        }
        if ($this->container['receipt_amount'] === null) {
            $invalidProperties[] = "'receipt_amount' can't be null";
        }
        if ($this->container['tax_amount'] === null) {
            $invalidProperties[] = "'tax_amount' can't be null";
        }
        if ($this->container['shipping_amount'] === null) {
            $invalidProperties[] = "'shipping_amount' can't be null";
        }
        if ($this->container['created_on'] === null) {
            $invalidProperties[] = "'created_on' can't be null";
        }
        if ($this->container['modified_on'] === null) {
            $invalidProperties[] = "'modified_on' can't be null";
        }
        if ($this->container['sync_status'] === null) {
            $invalidProperties[] = "'sync_status' can't be null";
        }
        if ($this->container['items'] === null) {
            $invalidProperties[] = "'items' can't be null";
        }
        if ($this->container['custom_fields'] === null) {
            $invalidProperties[] = "'custom_fields' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id Receipt Id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets active
     *
     * @return bool
     */
    public function getActive()
    {
        return $this->container['active'];
    }

    /**
     * Sets active
     *
     * @param bool $active Is active
     *
     * @return self
     */
    public function setActive($active)
    {
        $this->container['active'] = $active;

        return $this;
    }

    /**
     * Gets number
     *
     * @return string
     */
    public function getNumber()
    {
        return $this->container['number'];
    }

    /**
     * Sets number
     *
     * @param string $number Number
     *
     * @return self
     */
    public function setNumber($number)
    {
        $this->container['number'] = $number;

        return $this;
    }

    /**
     * Gets vendor_invoice_number
     *
     * @return string
     */
    public function getVendorInvoiceNumber()
    {
        return $this->container['vendor_invoice_number'];
    }

    /**
     * Sets vendor_invoice_number
     *
     * @param string $vendor_invoice_number Vendor invoice number
     *
     * @return self
     */
    public function setVendorInvoiceNumber($vendor_invoice_number)
    {
        $this->container['vendor_invoice_number'] = $vendor_invoice_number;

        return $this;
    }

    /**
     * Gets created_by_id
     *
     * @return int|null
     */
    public function getCreatedById()
    {
        return $this->container['created_by_id'];
    }

    /**
     * Sets created_by_id
     *
     * @param int|null $created_by_id User who created this receipt
     *
     * @return self
     */
    public function setCreatedById($created_by_id)
    {
        $this->container['created_by_id'] = $created_by_id;

        return $this;
    }

    /**
     * Gets memo
     *
     * @return string
     */
    public function getMemo()
    {
        return $this->container['memo'];
    }

    /**
     * Sets memo
     *
     * @param string $memo Memo/summary field
     *
     * @return self
     */
    public function setMemo($memo)
    {
        $this->container['memo'] = $memo;

        return $this;
    }

    /**
     * Gets purchase_order_id
     *
     * @return int
     */
    public function getPurchaseOrderId()
    {
        return $this->container['purchase_order_id'];
    }

    /**
     * Sets purchase_order_id
     *
     * @param int $purchase_order_id Id of purchase order
     *
     * @return self
     */
    public function setPurchaseOrderId($purchase_order_id)
    {
        $this->container['purchase_order_id'] = $purchase_order_id;

        return $this;
    }

    /**
     * Gets bill_id
     *
     * @return int|null
     */
    public function getBillId()
    {
        return $this->container['bill_id'];
    }

    /**
     * Sets bill_id
     *
     * @param int|null $bill_id Id of bill
     *
     * @return self
     */
    public function setBillId($bill_id)
    {
        $this->container['bill_id'] = $bill_id;

        return $this;
    }

    /**
     * Gets job_id
     *
     * @return int|null
     */
    public function getJobId()
    {
        return $this->container['job_id'];
    }

    /**
     * Sets job_id
     *
     * @param int|null $job_id Id of job
     *
     * @return self
     */
    public function setJobId($job_id)
    {
        $this->container['job_id'] = $job_id;

        return $this;
    }

    /**
     * Gets business_unit_id
     *
     * @return int|null
     */
    public function getBusinessUnitId()
    {
        return $this->container['business_unit_id'];
    }

    /**
     * Sets business_unit_id
     *
     * @param int|null $business_unit_id Id of business unit
     *
     * @return self
     */
    public function setBusinessUnitId($business_unit_id)
    {
        $this->container['business_unit_id'] = $business_unit_id;

        return $this;
    }

    /**
     * Gets vendor_id
     *
     * @return int
     */
    public function getVendorId()
    {
        return $this->container['vendor_id'];
    }

    /**
     * Sets vendor_id
     *
     * @param int $vendor_id Id of vendor
     *
     * @return self
     */
    public function setVendorId($vendor_id)
    {
        $this->container['vendor_id'] = $vendor_id;

        return $this;
    }

    /**
     * Gets technician_id
     *
     * @return int|null
     */
    public function getTechnicianId()
    {
        return $this->container['technician_id'];
    }

    /**
     * Sets technician_id
     *
     * @param int|null $technician_id Id of technician
     *
     * @return self
     */
    public function setTechnicianId($technician_id)
    {
        $this->container['technician_id'] = $technician_id;

        return $this;
    }

    /**
     * Gets inventory_location_id
     *
     * @return int
     */
    public function getInventoryLocationId()
    {
        return $this->container['inventory_location_id'];
    }

    /**
     * Sets inventory_location_id
     *
     * @param int $inventory_location_id Id of inventory location
     *
     * @return self
     */
    public function setInventoryLocationId($inventory_location_id)
    {
        $this->container['inventory_location_id'] = $inventory_location_id;

        return $this;
    }

    /**
     * Gets ship_to
     *
     * @return OneOfInventoryV2AddressResponse|null
     */
    public function getShipTo()
    {
        return $this->container['ship_to'];
    }

    /**
     * Sets ship_to
     *
     * @param OneOfInventoryV2AddressResponse|null $ship_to Ship to address
     *
     * @return self
     */
    public function setShipTo($ship_to)
    {
        $this->container['ship_to'] = $ship_to;

        return $this;
    }

    /**
     * Gets ship_to_description
     *
     * @return string
     */
    public function getShipToDescription()
    {
        return $this->container['ship_to_description'];
    }

    /**
     * Sets ship_to_description
     *
     * @param string $ship_to_description Ship to description
     *
     * @return self
     */
    public function setShipToDescription($ship_to_description)
    {
        $this->container['ship_to_description'] = $ship_to_description;

        return $this;
    }

    /**
     * Gets receipt_amount
     *
     * @return float
     */
    public function getReceiptAmount()
    {
        return $this->container['receipt_amount'];
    }

    /**
     * Sets receipt_amount
     *
     * @param float $receipt_amount Receipt total, including tax and shipping
     *
     * @return self
     */
    public function setReceiptAmount($receipt_amount)
    {
        $this->container['receipt_amount'] = $receipt_amount;

        return $this;
    }

    /**
     * Gets tax_amount
     *
     * @return float
     */
    public function getTaxAmount()
    {
        return $this->container['tax_amount'];
    }

    /**
     * Sets tax_amount
     *
     * @param float $tax_amount Receipt tax
     *
     * @return self
     */
    public function setTaxAmount($tax_amount)
    {
        $this->container['tax_amount'] = $tax_amount;

        return $this;
    }

    /**
     * Gets shipping_amount
     *
     * @return float
     */
    public function getShippingAmount()
    {
        return $this->container['shipping_amount'];
    }

    /**
     * Sets shipping_amount
     *
     * @param float $shipping_amount Receipt shipping cost
     *
     * @return self
     */
    public function setShippingAmount($shipping_amount)
    {
        $this->container['shipping_amount'] = $shipping_amount;

        return $this;
    }

    /**
     * Gets received_on
     *
     * @return \DateTime|null
     */
    public function getReceivedOn()
    {
        return $this->container['received_on'];
    }

    /**
     * Sets received_on
     *
     * @param \DateTime|null $received_on Date received
     *
     * @return self
     */
    public function setReceivedOn($received_on)
    {
        $this->container['received_on'] = $received_on;

        return $this;
    }

    /**
     * Gets created_on
     *
     * @return \DateTime
     */
    public function getCreatedOn()
    {
        return $this->container['created_on'];
    }

    /**
     * Sets created_on
     *
     * @param \DateTime $created_on System created date
     *
     * @return self
     */
    public function setCreatedOn($created_on)
    {
        $this->container['created_on'] = $created_on;

        return $this;
    }

    /**
     * Gets modified_on
     *
     * @return \DateTime
     */
    public function getModifiedOn()
    {
        return $this->container['modified_on'];
    }

    /**
     * Sets modified_on
     *
     * @param \DateTime $modified_on last time receipt was modified
     *
     * @return self
     */
    public function setModifiedOn($modified_on)
    {
        $this->container['modified_on'] = $modified_on;

        return $this;
    }

    /**
     * Gets batch_id
     *
     * @return int|null
     */
    public function getBatchId()
    {
        return $this->container['batch_id'];
    }

    /**
     * Sets batch_id
     *
     * @param int|null $batch_id Id of batch
     *
     * @return self
     */
    public function setBatchId($batch_id)
    {
        $this->container['batch_id'] = $batch_id;

        return $this;
    }

    /**
     * Gets sync_status
     *
     * @return OneOfInventoryV2SyncStatus
     */
    public function getSyncStatus()
    {
        return $this->container['sync_status'];
    }

    /**
     * Sets sync_status
     *
     * @param OneOfInventoryV2SyncStatus $sync_status Sync status
     *
     * @return self
     */
    public function setSyncStatus($sync_status)
    {
        $this->container['sync_status'] = $sync_status;

        return $this;
    }

    /**
     * Gets items
     *
     * @return \CompWright\ServiceTitan\Model\InventoryV2InventoryReceiptItemResponse[]
     */
    public function getItems()
    {
        return $this->container['items'];
    }

    /**
     * Sets items
     *
     * @param \CompWright\ServiceTitan\Model\InventoryV2InventoryReceiptItemResponse[] $items Collection of receipt items
     *
     * @return self
     */
    public function setItems($items)
    {
        $this->container['items'] = $items;

        return $this;
    }

    /**
     * Gets custom_fields
     *
     * @return \CompWright\ServiceTitan\Model\InventoryV2CustomFieldResponse[]
     */
    public function getCustomFields()
    {
        return $this->container['custom_fields'];
    }

    /**
     * Sets custom_fields
     *
     * @param \CompWright\ServiceTitan\Model\InventoryV2CustomFieldResponse[] $custom_fields Collection of custom fields
     *
     * @return self
     */
    public function setCustomFields($custom_fields)
    {
        $this->container['custom_fields'] = $custom_fields;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


